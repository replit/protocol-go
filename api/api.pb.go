// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api.proto

package api // import "/api"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type FileAuthMethod int32

const (
	FileAuthMethod_GET    FileAuthMethod = 0
	FileAuthMethod_HEAD   FileAuthMethod = 1
	FileAuthMethod_PUT    FileAuthMethod = 2
	FileAuthMethod_DELETE FileAuthMethod = 3
)

var FileAuthMethod_name = map[int32]string{
	0: "GET",
	1: "HEAD",
	2: "PUT",
	3: "DELETE",
}

var FileAuthMethod_value = map[string]int32{
	"GET":    0,
	"HEAD":   1,
	"PUT":    2,
	"DELETE": 3,
}

func (x FileAuthMethod) String() string {
	return proto.EnumName(FileAuthMethod_name, int32(x))
}

func (FileAuthMethod) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{0}
}

type State int32

const (
	State_Stopped State = 0
	State_Running State = 1
)

var State_name = map[int32]string{
	0: "Stopped",
	1: "Running",
}

var State_value = map[string]int32{
	"Stopped": 0,
	"Running": 1,
}

func (x State) String() string {
	return proto.EnumName(State_name, int32(x))
}

func (State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{1}
}

type BootStatus_Stage int32

const (
	BootStatus_HANDSHAKE  BootStatus_Stage = 0
	BootStatus_ACQUIRING  BootStatus_Stage = 3
	BootStatus_COMPLETE   BootStatus_Stage = 4
	BootStatus_PROXY      BootStatus_Stage = 5
	BootStatus_PULL_FILES BootStatus_Stage = 6
	BootStatus_LOAD_BLOCK BootStatus_Stage = 7
	BootStatus_RETRY      BootStatus_Stage = 8
)

var BootStatus_Stage_name = map[int32]string{
	0: "HANDSHAKE",
	3: "ACQUIRING",
	4: "COMPLETE",
	5: "PROXY",
	6: "PULL_FILES",
	7: "LOAD_BLOCK",
	8: "RETRY",
}

var BootStatus_Stage_value = map[string]int32{
	"HANDSHAKE":  0,
	"ACQUIRING":  3,
	"COMPLETE":   4,
	"PROXY":      5,
	"PULL_FILES": 6,
	"LOAD_BLOCK": 7,
	"RETRY":      8,
}

func (x BootStatus_Stage) String() string {
	return proto.EnumName(BootStatus_Stage_name, int32(x))
}

func (BootStatus_Stage) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{6, 0}
}

type FileEvent_Op int32

const (
	FileEvent_Create FileEvent_Op = 0
	FileEvent_Move   FileEvent_Op = 1
	FileEvent_Remove FileEvent_Op = 2
	FileEvent_Modify FileEvent_Op = 3
)

var FileEvent_Op_name = map[int32]string{
	0: "Create",
	1: "Move",
	2: "Remove",
	3: "Modify",
}

var FileEvent_Op_value = map[string]int32{
	"Create": 0,
	"Move":   1,
	"Remove": 2,
	"Modify": 3,
}

func (x FileEvent_Op) String() string {
	return proto.EnumName(FileEvent_Op_name, int32(x))
}

func (FileEvent_Op) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{11, 0}
}

type VCREntry_Direction int32

const (
	VCREntry_IN  VCREntry_Direction = 0
	VCREntry_OUT VCREntry_Direction = 1
)

var VCREntry_Direction_name = map[int32]string{
	0: "IN",
	1: "OUT",
}

var VCREntry_Direction_value = map[string]int32{
	"IN":  0,
	"OUT": 1,
}

func (x VCREntry_Direction) String() string {
	return proto.EnumName(VCREntry_Direction_name, int32(x))
}

func (VCREntry_Direction) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{15, 0}
}

type File_Type int32

const (
	File_REGULAR   File_Type = 0
	File_DIRECTORY File_Type = 1
)

var File_Type_name = map[int32]string{
	0: "REGULAR",
	1: "DIRECTORY",
}

var File_Type_value = map[string]int32{
	"REGULAR":   0,
	"DIRECTORY": 1,
}

func (x File_Type) String() string {
	return proto.EnumName(File_Type_name, int32(x))
}

func (File_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{50, 0}
}

type OpenChannel_Action int32

const (
	OpenChannel_CREATE           OpenChannel_Action = 0
	OpenChannel_ATTACH           OpenChannel_Action = 1
	OpenChannel_ATTACH_OR_CREATE OpenChannel_Action = 2
)

var OpenChannel_Action_name = map[int32]string{
	0: "CREATE",
	1: "ATTACH",
	2: "ATTACH_OR_CREATE",
}

var OpenChannel_Action_value = map[string]int32{
	"CREATE":           0,
	"ATTACH":           1,
	"ATTACH_OR_CREATE": 2,
}

func (x OpenChannel_Action) String() string {
	return proto.EnumName(OpenChannel_Action_name, int32(x))
}

func (OpenChannel_Action) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{54, 0}
}

type OpenChannelRes_State int32

const (
	OpenChannelRes_CREATED  OpenChannelRes_State = 0
	OpenChannelRes_ATTACHED OpenChannelRes_State = 1
	OpenChannelRes_ERROR    OpenChannelRes_State = 2
)

var OpenChannelRes_State_name = map[int32]string{
	0: "CREATED",
	1: "ATTACHED",
	2: "ERROR",
}

var OpenChannelRes_State_value = map[string]int32{
	"CREATED":  0,
	"ATTACHED": 1,
	"ERROR":    2,
}

func (x OpenChannelRes_State) String() string {
	return proto.EnumName(OpenChannelRes_State_name, int32(x))
}

func (OpenChannelRes_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{55, 0}
}

type CloseChannel_Action int32

const (
	CloseChannel_DISCONNECT CloseChannel_Action = 0
	CloseChannel_TRY_CLOSE  CloseChannel_Action = 1
	CloseChannel_CLOSE      CloseChannel_Action = 2
)

var CloseChannel_Action_name = map[int32]string{
	0: "DISCONNECT",
	1: "TRY_CLOSE",
	2: "CLOSE",
}

var CloseChannel_Action_value = map[string]int32{
	"DISCONNECT": 0,
	"TRY_CLOSE":  1,
	"CLOSE":      2,
}

func (x CloseChannel_Action) String() string {
	return proto.EnumName(CloseChannel_Action_name, int32(x))
}

func (CloseChannel_Action) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{56, 0}
}

type CloseChannelRes_Status int32

const (
	CloseChannelRes_DISCONNECT CloseChannelRes_Status = 0
	CloseChannelRes_CLOSE      CloseChannelRes_Status = 1
	CloseChannelRes_NOTHING    CloseChannelRes_Status = 2
)

var CloseChannelRes_Status_name = map[int32]string{
	0: "DISCONNECT",
	1: "CLOSE",
	2: "NOTHING",
}

var CloseChannelRes_Status_value = map[string]int32{
	"DISCONNECT": 0,
	"CLOSE":      1,
	"NOTHING":    2,
}

func (x CloseChannelRes_Status) String() string {
	return proto.EnumName(CloseChannelRes_Status_name, int32(x))
}

func (CloseChannelRes_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{57, 0}
}

type ContainerState_State int32

const (
	ContainerState_SLEEP ContainerState_State = 0
	ContainerState_READY ContainerState_State = 1
)

var ContainerState_State_name = map[int32]string{
	0: "SLEEP",
	1: "READY",
}

var ContainerState_State_value = map[string]int32{
	"SLEEP": 0,
	"READY": 1,
}

func (x ContainerState_State) String() string {
	return proto.EnumName(ContainerState_State_name, int32(x))
}

func (ContainerState_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{58, 0}
}

type Command struct {
	// channel and session act as namespaces with 0 being global.
	// both session and channel must match for a client to receive a command.
	Channel int32 `protobuf:"varint,1,opt,name=channel,proto3" json:"channel,omitempty"`
	// < 0 : all user sessions except abs(id)
	//   0 : all user sessions
	//   1 : internal message to conman
	// > 1 : user session with given id
	Session int32 `protobuf:"varint,2,opt,name=session,proto3" json:"session,omitempty"`
	// Types that are valid to be assigned to Body:
	//	*Command_OpenChan
	//	*Command_OpenChanRes
	//	*Command_CloseChan
	//	*Command_CloseChanRes
	//	*Command_ContainerState
	//	*Command_PortOpen
	//	*Command_Toast
	//	*Command_RunMain
	//	*Command_Clear
	//	*Command_Eval
	//	*Command_Result
	//	*Command_Input
	//	*Command_Output
	//	*Command_Error
	//	*Command_SaneTerm
	//	*Command_ResizeTerm
	//	*Command_State
	//	*Command_Ok
	//	*Command_Persist
	//	*Command_PersistMirror
	//	*Command_Write
	//	*Command_Remove
	//	*Command_Move
	//	*Command_TryRemove
	//	*Command_Mkdir
	//	*Command_Read
	//	*Command_Readdir
	//	*Command_Files
	//	*Command_File
	//	*Command_CheckChanges
	//	*Command_ChangedFiles
	//	*Command_LintResults
	//	*Command_RunContainedTest
	//	*Command_TestResult
	//	*Command_DebuggerStart
	//	*Command_DebuggerStep
	//	*Command_DebuggerStatus
	//	*Command_EnsurePackages
	//	*Command_Ping
	//	*Command_Pong
	//	*Command_Hello
	//	*Command_Goodbye
	//	*Command_Hint
	//	*Command_Connect
	//	*Command_Send
	//	*Command_Recv
	//	*Command_Disconnect
	//	*Command_FileAuthReq
	//	*Command_FileAuthRes
	//	*Command_MutliFileAuthRes
	//	*Command_ListObjects
	//	*Command_ListObjectsResp
	//	*Command_Ot
	//	*Command_Otstatus
	//	*Command_OtLinkFile
	//	*Command_OtNewCursor
	//	*Command_OtDeleteCursor
	//	*Command_OtFetchRequest
	//	*Command_OtFetchResponse
	//	*Command_Flush
	//	*Command_Debug
	//	*Command_StartVCR
	//	*Command_ReadVCR
	//	*Command_VCRLog
	//	*Command_Auth
	//	*Command_ExecInfo
	//	*Command_SubscribeFile
	//	*Command_FileEvent
	//	*Command_Roster
	//	*Command_Join
	//	*Command_Part
	//	*Command_Exec
	//	*Command_PackageSearch
	//	*Command_PackageSearchResp
	//	*Command_PackageInfo
	//	*Command_PackageInfoResp
	//	*Command_PackageAdd
	//	*Command_PackageRemove
	//	*Command_PackageInstall
	//	*Command_PackageListSpecfile
	//	*Command_PackageListSpecfileResp
	//	*Command_PackageCacheSave
	//	*Command_ChatMessage
	//	*Command_ChatTyping
	//	*Command_ChatScrollback
	//	*Command_FsSnapshot
	//	*Command_FsTakeLock
	//	*Command_FsReleaseLock
	//	*Command_HasCap
	//	*Command_Pid1Config
	//	*Command_Metrics
	//	*Command_BootStatus
	//	*Command_ReadMeta
	//	*Command_WriteMeta
	//	*Command_AppendMeta
	//	*Command_Audio
	//	*Command_PprofRequest
	//	*Command_PprofResponse
	//	*Command_Audio2
	Body                 isCommand_Body `protobuf_oneof:"body"`
	Ref                  string         `protobuf:"bytes,1000,opt,name=ref,proto3" json:"ref,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Command) Reset()         { *m = Command{} }
func (m *Command) String() string { return proto.CompactTextString(m) }
func (*Command) ProtoMessage()    {}
func (*Command) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{0}
}
func (m *Command) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Command.Unmarshal(m, b)
}
func (m *Command) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Command.Marshal(b, m, deterministic)
}
func (dst *Command) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Command.Merge(dst, src)
}
func (m *Command) XXX_Size() int {
	return xxx_messageInfo_Command.Size(m)
}
func (m *Command) XXX_DiscardUnknown() {
	xxx_messageInfo_Command.DiscardUnknown(m)
}

var xxx_messageInfo_Command proto.InternalMessageInfo

func (m *Command) GetChannel() int32 {
	if m != nil {
		return m.Channel
	}
	return 0
}

func (m *Command) GetSession() int32 {
	if m != nil {
		return m.Session
	}
	return 0
}

type isCommand_Body interface {
	isCommand_Body()
}

type Command_OpenChan struct {
	OpenChan *OpenChannel `protobuf:"bytes,3,opt,name=openChan,proto3,oneof"`
}

type Command_OpenChanRes struct {
	OpenChanRes *OpenChannelRes `protobuf:"bytes,4,opt,name=openChanRes,proto3,oneof"`
}

type Command_CloseChan struct {
	CloseChan *CloseChannel `protobuf:"bytes,5,opt,name=closeChan,proto3,oneof"`
}

type Command_CloseChanRes struct {
	CloseChanRes *CloseChannelRes `protobuf:"bytes,6,opt,name=closeChanRes,proto3,oneof"`
}

type Command_ContainerState struct {
	ContainerState *ContainerState `protobuf:"bytes,9,opt,name=containerState,proto3,oneof"`
}

type Command_PortOpen struct {
	PortOpen *PortOpen `protobuf:"bytes,10,opt,name=portOpen,proto3,oneof"`
}

type Command_Toast struct {
	Toast *Toast `protobuf:"bytes,11,opt,name=toast,proto3,oneof"`
}

type Command_RunMain struct {
	RunMain *RunMain `protobuf:"bytes,16,opt,name=runMain,proto3,oneof"`
}

type Command_Clear struct {
	Clear *Clear `protobuf:"bytes,17,opt,name=clear,proto3,oneof"`
}

type Command_Eval struct {
	Eval string `protobuf:"bytes,20,opt,name=eval,proto3,oneof"`
}

type Command_Result struct {
	Result string `protobuf:"bytes,21,opt,name=result,proto3,oneof"`
}

type Command_Input struct {
	Input string `protobuf:"bytes,22,opt,name=input,proto3,oneof"`
}

type Command_Output struct {
	Output string `protobuf:"bytes,23,opt,name=output,proto3,oneof"`
}

type Command_Error struct {
	Error string `protobuf:"bytes,24,opt,name=error,proto3,oneof"`
}

type Command_SaneTerm struct {
	SaneTerm *SaneTerm `protobuf:"bytes,26,opt,name=saneTerm,proto3,oneof"`
}

type Command_ResizeTerm struct {
	ResizeTerm *ResizeTerm `protobuf:"bytes,27,opt,name=resizeTerm,proto3,oneof"`
}

type Command_State struct {
	State State `protobuf:"varint,28,opt,name=state,proto3,enum=api.State,oneof"`
}

type Command_Ok struct {
	Ok *OK `protobuf:"bytes,30,opt,name=ok,proto3,oneof"`
}

type Command_Persist struct {
	Persist *File `protobuf:"bytes,31,opt,name=persist,proto3,oneof"`
}

type Command_PersistMirror struct {
	PersistMirror *File `protobuf:"bytes,41,opt,name=persistMirror,proto3,oneof"`
}

type Command_Write struct {
	Write *File `protobuf:"bytes,32,opt,name=write,proto3,oneof"`
}

type Command_Remove struct {
	Remove *File `protobuf:"bytes,33,opt,name=remove,proto3,oneof"`
}

type Command_Move struct {
	Move *Move `protobuf:"bytes,34,opt,name=move,proto3,oneof"`
}

type Command_TryRemove struct {
	TryRemove *File `protobuf:"bytes,36,opt,name=tryRemove,proto3,oneof"`
}

type Command_Mkdir struct {
	Mkdir *File `protobuf:"bytes,39,opt,name=mkdir,proto3,oneof"`
}

type Command_Read struct {
	Read *File `protobuf:"bytes,35,opt,name=read,proto3,oneof"`
}

type Command_Readdir struct {
	Readdir *File `protobuf:"bytes,37,opt,name=readdir,proto3,oneof"`
}

type Command_Files struct {
	Files *Files `protobuf:"bytes,38,opt,name=files,proto3,oneof"`
}

type Command_File struct {
	File *File `protobuf:"bytes,40,opt,name=file,proto3,oneof"`
}

type Command_CheckChanges struct {
	CheckChanges *CheckChanges `protobuf:"bytes,42,opt,name=checkChanges,proto3,oneof"`
}

type Command_ChangedFiles struct {
	ChangedFiles *Files `protobuf:"bytes,43,opt,name=changedFiles,proto3,oneof"`
}

type Command_LintResults struct {
	LintResults *LintResults `protobuf:"bytes,44,opt,name=lintResults,proto3,oneof"`
}

type Command_RunContainedTest struct {
	RunContainedTest *ContainedTest `protobuf:"bytes,70,opt,name=runContainedTest,proto3,oneof"`
}

type Command_TestResult struct {
	TestResult *TestResult `protobuf:"bytes,71,opt,name=testResult,proto3,oneof"`
}

type Command_DebuggerStart struct {
	DebuggerStart string `protobuf:"bytes,90,opt,name=debuggerStart,proto3,oneof"`
}

type Command_DebuggerStep struct {
	DebuggerStep *RunMain `protobuf:"bytes,91,opt,name=debuggerStep,proto3,oneof"`
}

type Command_DebuggerStatus struct {
	DebuggerStatus *DebugStatus `protobuf:"bytes,92,opt,name=debuggerStatus,proto3,oneof"`
}

type Command_EnsurePackages struct {
	EnsurePackages *EnsurePackages `protobuf:"bytes,100,opt,name=ensurePackages,proto3,oneof"`
}

type Command_Ping struct {
	Ping *Ping `protobuf:"bytes,120,opt,name=ping,proto3,oneof"`
}

type Command_Pong struct {
	Pong *Pong `protobuf:"bytes,121,opt,name=pong,proto3,oneof"`
}

type Command_Hello struct {
	Hello *Hello `protobuf:"bytes,122,opt,name=hello,proto3,oneof"`
}

type Command_Goodbye struct {
	Goodbye *Goodbye `protobuf:"bytes,123,opt,name=goodbye,proto3,oneof"`
}

type Command_Hint struct {
	Hint *Hint `protobuf:"bytes,130,opt,name=hint,proto3,oneof"`
}

type Command_Connect struct {
	Connect *Connect `protobuf:"bytes,150,opt,name=connect,proto3,oneof"`
}

type Command_Send struct {
	Send *Send `protobuf:"bytes,151,opt,name=send,proto3,oneof"`
}

type Command_Recv struct {
	Recv *Recv `protobuf:"bytes,152,opt,name=recv,proto3,oneof"`
}

type Command_Disconnect struct {
	Disconnect *Disconnect `protobuf:"bytes,153,opt,name=disconnect,proto3,oneof"`
}

type Command_FileAuthReq struct {
	FileAuthReq *FileAuthReq `protobuf:"bytes,200,opt,name=fileAuthReq,proto3,oneof"`
}

type Command_FileAuthRes struct {
	FileAuthRes *FileAuthRes `protobuf:"bytes,201,opt,name=fileAuthRes,proto3,oneof"`
}

type Command_MutliFileAuthRes struct {
	MutliFileAuthRes *MultiFileAuthRes `protobuf:"bytes,202,opt,name=mutliFileAuthRes,proto3,oneof"`
}

type Command_ListObjects struct {
	ListObjects *ListObjects `protobuf:"bytes,205,opt,name=listObjects,proto3,oneof"`
}

type Command_ListObjectsResp struct {
	ListObjectsResp *ListObjectsResp `protobuf:"bytes,206,opt,name=listObjectsResp,proto3,oneof"`
}

type Command_Ot struct {
	Ot *OTPacket `protobuf:"bytes,220,opt,name=ot,proto3,oneof"`
}

type Command_Otstatus struct {
	Otstatus *OTStatus `protobuf:"bytes,221,opt,name=otstatus,proto3,oneof"`
}

type Command_OtLinkFile struct {
	OtLinkFile *OTLinkFile `protobuf:"bytes,222,opt,name=otLinkFile,proto3,oneof"`
}

type Command_OtNewCursor struct {
	OtNewCursor *OTCursor `protobuf:"bytes,223,opt,name=otNewCursor,proto3,oneof"`
}

type Command_OtDeleteCursor struct {
	OtDeleteCursor *OTCursor `protobuf:"bytes,224,opt,name=otDeleteCursor,proto3,oneof"`
}

type Command_OtFetchRequest struct {
	OtFetchRequest *OTFetchRequest `protobuf:"bytes,225,opt,name=otFetchRequest,proto3,oneof"`
}

type Command_OtFetchResponse struct {
	OtFetchResponse *OTFetchResponse `protobuf:"bytes,226,opt,name=otFetchResponse,proto3,oneof"`
}

type Command_Flush struct {
	Flush *Flush `protobuf:"bytes,251,opt,name=flush,proto3,oneof"`
}

type Command_Debug struct {
	Debug *Debug `protobuf:"bytes,230,opt,name=debug,proto3,oneof"`
}

type Command_StartVCR struct {
	StartVCR *StartVCR `protobuf:"bytes,231,opt,name=startVCR,proto3,oneof"`
}

type Command_ReadVCR struct {
	ReadVCR *ReadVCR `protobuf:"bytes,232,opt,name=readVCR,proto3,oneof"`
}

type Command_VCRLog struct {
	VCRLog *VCRLog `protobuf:"bytes,233,opt,name=VCRLog,proto3,oneof"`
}

type Command_Auth struct {
	Auth *Auth `protobuf:"bytes,235,opt,name=auth,proto3,oneof"`
}

type Command_ExecInfo struct {
	ExecInfo *ExecInfo `protobuf:"bytes,240,opt,name=execInfo,proto3,oneof"`
}

type Command_SubscribeFile struct {
	SubscribeFile *SubscribeFile `protobuf:"bytes,256,opt,name=subscribeFile,proto3,oneof"`
}

type Command_FileEvent struct {
	FileEvent *FileEvent `protobuf:"bytes,257,opt,name=fileEvent,proto3,oneof"`
}

type Command_Roster struct {
	Roster *Roster `protobuf:"bytes,260,opt,name=roster,proto3,oneof"`
}

type Command_Join struct {
	Join *User `protobuf:"bytes,261,opt,name=join,proto3,oneof"`
}

type Command_Part struct {
	Part *User `protobuf:"bytes,262,opt,name=part,proto3,oneof"`
}

type Command_Exec struct {
	Exec *Exec `protobuf:"bytes,270,opt,name=exec,proto3,oneof"`
}

type Command_PackageSearch struct {
	PackageSearch *PackageSearch `protobuf:"bytes,280,opt,name=packageSearch,proto3,oneof"`
}

type Command_PackageSearchResp struct {
	PackageSearchResp *PackageSearchResp `protobuf:"bytes,281,opt,name=packageSearchResp,proto3,oneof"`
}

type Command_PackageInfo struct {
	PackageInfo *PackageInfo `protobuf:"bytes,282,opt,name=packageInfo,proto3,oneof"`
}

type Command_PackageInfoResp struct {
	PackageInfoResp *PackageInfoResp `protobuf:"bytes,283,opt,name=packageInfoResp,proto3,oneof"`
}

type Command_PackageAdd struct {
	PackageAdd *PackageAdd `protobuf:"bytes,284,opt,name=packageAdd,proto3,oneof"`
}

type Command_PackageRemove struct {
	PackageRemove *PackageRemove `protobuf:"bytes,285,opt,name=packageRemove,proto3,oneof"`
}

type Command_PackageInstall struct {
	PackageInstall *PackageInstall `protobuf:"bytes,286,opt,name=packageInstall,proto3,oneof"`
}

type Command_PackageListSpecfile struct {
	PackageListSpecfile *PackageListSpecfile `protobuf:"bytes,287,opt,name=packageListSpecfile,proto3,oneof"`
}

type Command_PackageListSpecfileResp struct {
	PackageListSpecfileResp *PackageListSpecfileResp `protobuf:"bytes,288,opt,name=packageListSpecfileResp,proto3,oneof"`
}

type Command_PackageCacheSave struct {
	PackageCacheSave *PackageCacheSave `protobuf:"bytes,289,opt,name=packageCacheSave,proto3,oneof"`
}

type Command_ChatMessage struct {
	ChatMessage *ChatMessage `protobuf:"bytes,310,opt,name=chatMessage,proto3,oneof"`
}

type Command_ChatTyping struct {
	ChatTyping *ChatTyping `protobuf:"bytes,311,opt,name=chatTyping,proto3,oneof"`
}

type Command_ChatScrollback struct {
	ChatScrollback *ChatScrollback `protobuf:"bytes,312,opt,name=chatScrollback,proto3,oneof"`
}

type Command_FsSnapshot struct {
	FsSnapshot *FSSnapshot `protobuf:"bytes,330,opt,name=fsSnapshot,proto3,oneof"`
}

type Command_FsTakeLock struct {
	FsTakeLock *FSLock `protobuf:"bytes,331,opt,name=fsTakeLock,proto3,oneof"`
}

type Command_FsReleaseLock struct {
	FsReleaseLock *FSLock `protobuf:"bytes,332,opt,name=fsReleaseLock,proto3,oneof"`
}

type Command_HasCap struct {
	HasCap bool `protobuf:"varint,335,opt,name=hasCap,proto3,oneof"`
}

type Command_Pid1Config struct {
	Pid1Config *Pid1Config `protobuf:"bytes,340,opt,name=pid1Config,proto3,oneof"`
}

type Command_Metrics struct {
	Metrics *Metrics `protobuf:"bytes,350,opt,name=metrics,proto3,oneof"`
}

type Command_BootStatus struct {
	BootStatus *BootStatus `protobuf:"bytes,351,opt,name=bootStatus,proto3,oneof"`
}

type Command_ReadMeta struct {
	ReadMeta *ReadMeta `protobuf:"bytes,360,opt,name=readMeta,proto3,oneof"`
}

type Command_WriteMeta struct {
	WriteMeta *WriteMeta `protobuf:"bytes,361,opt,name=writeMeta,proto3,oneof"`
}

type Command_AppendMeta struct {
	AppendMeta *AppendMeta `protobuf:"bytes,362,opt,name=appendMeta,proto3,oneof"`
}

type Command_Audio struct {
	Audio *Audio `protobuf:"bytes,363,opt,name=audio,proto3,oneof"`
}

type Command_PprofRequest struct {
	PprofRequest *PprofRequest `protobuf:"bytes,364,opt,name=pprofRequest,proto3,oneof"`
}

type Command_PprofResponse struct {
	PprofResponse *PprofResponse `protobuf:"bytes,365,opt,name=pprofResponse,proto3,oneof"`
}

type Command_Audio2 struct {
	Audio2 *Audio2 `protobuf:"bytes,366,opt,name=audio2,proto3,oneof"`
}

func (*Command_OpenChan) isCommand_Body() {}

func (*Command_OpenChanRes) isCommand_Body() {}

func (*Command_CloseChan) isCommand_Body() {}

func (*Command_CloseChanRes) isCommand_Body() {}

func (*Command_ContainerState) isCommand_Body() {}

func (*Command_PortOpen) isCommand_Body() {}

func (*Command_Toast) isCommand_Body() {}

func (*Command_RunMain) isCommand_Body() {}

func (*Command_Clear) isCommand_Body() {}

func (*Command_Eval) isCommand_Body() {}

func (*Command_Result) isCommand_Body() {}

func (*Command_Input) isCommand_Body() {}

func (*Command_Output) isCommand_Body() {}

func (*Command_Error) isCommand_Body() {}

func (*Command_SaneTerm) isCommand_Body() {}

func (*Command_ResizeTerm) isCommand_Body() {}

func (*Command_State) isCommand_Body() {}

func (*Command_Ok) isCommand_Body() {}

func (*Command_Persist) isCommand_Body() {}

func (*Command_PersistMirror) isCommand_Body() {}

func (*Command_Write) isCommand_Body() {}

func (*Command_Remove) isCommand_Body() {}

func (*Command_Move) isCommand_Body() {}

func (*Command_TryRemove) isCommand_Body() {}

func (*Command_Mkdir) isCommand_Body() {}

func (*Command_Read) isCommand_Body() {}

func (*Command_Readdir) isCommand_Body() {}

func (*Command_Files) isCommand_Body() {}

func (*Command_File) isCommand_Body() {}

func (*Command_CheckChanges) isCommand_Body() {}

func (*Command_ChangedFiles) isCommand_Body() {}

func (*Command_LintResults) isCommand_Body() {}

func (*Command_RunContainedTest) isCommand_Body() {}

func (*Command_TestResult) isCommand_Body() {}

func (*Command_DebuggerStart) isCommand_Body() {}

func (*Command_DebuggerStep) isCommand_Body() {}

func (*Command_DebuggerStatus) isCommand_Body() {}

func (*Command_EnsurePackages) isCommand_Body() {}

func (*Command_Ping) isCommand_Body() {}

func (*Command_Pong) isCommand_Body() {}

func (*Command_Hello) isCommand_Body() {}

func (*Command_Goodbye) isCommand_Body() {}

func (*Command_Hint) isCommand_Body() {}

func (*Command_Connect) isCommand_Body() {}

func (*Command_Send) isCommand_Body() {}

func (*Command_Recv) isCommand_Body() {}

func (*Command_Disconnect) isCommand_Body() {}

func (*Command_FileAuthReq) isCommand_Body() {}

func (*Command_FileAuthRes) isCommand_Body() {}

func (*Command_MutliFileAuthRes) isCommand_Body() {}

func (*Command_ListObjects) isCommand_Body() {}

func (*Command_ListObjectsResp) isCommand_Body() {}

func (*Command_Ot) isCommand_Body() {}

func (*Command_Otstatus) isCommand_Body() {}

func (*Command_OtLinkFile) isCommand_Body() {}

func (*Command_OtNewCursor) isCommand_Body() {}

func (*Command_OtDeleteCursor) isCommand_Body() {}

func (*Command_OtFetchRequest) isCommand_Body() {}

func (*Command_OtFetchResponse) isCommand_Body() {}

func (*Command_Flush) isCommand_Body() {}

func (*Command_Debug) isCommand_Body() {}

func (*Command_StartVCR) isCommand_Body() {}

func (*Command_ReadVCR) isCommand_Body() {}

func (*Command_VCRLog) isCommand_Body() {}

func (*Command_Auth) isCommand_Body() {}

func (*Command_ExecInfo) isCommand_Body() {}

func (*Command_SubscribeFile) isCommand_Body() {}

func (*Command_FileEvent) isCommand_Body() {}

func (*Command_Roster) isCommand_Body() {}

func (*Command_Join) isCommand_Body() {}

func (*Command_Part) isCommand_Body() {}

func (*Command_Exec) isCommand_Body() {}

func (*Command_PackageSearch) isCommand_Body() {}

func (*Command_PackageSearchResp) isCommand_Body() {}

func (*Command_PackageInfo) isCommand_Body() {}

func (*Command_PackageInfoResp) isCommand_Body() {}

func (*Command_PackageAdd) isCommand_Body() {}

func (*Command_PackageRemove) isCommand_Body() {}

func (*Command_PackageInstall) isCommand_Body() {}

func (*Command_PackageListSpecfile) isCommand_Body() {}

func (*Command_PackageListSpecfileResp) isCommand_Body() {}

func (*Command_PackageCacheSave) isCommand_Body() {}

func (*Command_ChatMessage) isCommand_Body() {}

func (*Command_ChatTyping) isCommand_Body() {}

func (*Command_ChatScrollback) isCommand_Body() {}

func (*Command_FsSnapshot) isCommand_Body() {}

func (*Command_FsTakeLock) isCommand_Body() {}

func (*Command_FsReleaseLock) isCommand_Body() {}

func (*Command_HasCap) isCommand_Body() {}

func (*Command_Pid1Config) isCommand_Body() {}

func (*Command_Metrics) isCommand_Body() {}

func (*Command_BootStatus) isCommand_Body() {}

func (*Command_ReadMeta) isCommand_Body() {}

func (*Command_WriteMeta) isCommand_Body() {}

func (*Command_AppendMeta) isCommand_Body() {}

func (*Command_Audio) isCommand_Body() {}

func (*Command_PprofRequest) isCommand_Body() {}

func (*Command_PprofResponse) isCommand_Body() {}

func (*Command_Audio2) isCommand_Body() {}

func (m *Command) GetBody() isCommand_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *Command) GetOpenChan() *OpenChannel {
	if x, ok := m.GetBody().(*Command_OpenChan); ok {
		return x.OpenChan
	}
	return nil
}

func (m *Command) GetOpenChanRes() *OpenChannelRes {
	if x, ok := m.GetBody().(*Command_OpenChanRes); ok {
		return x.OpenChanRes
	}
	return nil
}

func (m *Command) GetCloseChan() *CloseChannel {
	if x, ok := m.GetBody().(*Command_CloseChan); ok {
		return x.CloseChan
	}
	return nil
}

func (m *Command) GetCloseChanRes() *CloseChannelRes {
	if x, ok := m.GetBody().(*Command_CloseChanRes); ok {
		return x.CloseChanRes
	}
	return nil
}

func (m *Command) GetContainerState() *ContainerState {
	if x, ok := m.GetBody().(*Command_ContainerState); ok {
		return x.ContainerState
	}
	return nil
}

func (m *Command) GetPortOpen() *PortOpen {
	if x, ok := m.GetBody().(*Command_PortOpen); ok {
		return x.PortOpen
	}
	return nil
}

func (m *Command) GetToast() *Toast {
	if x, ok := m.GetBody().(*Command_Toast); ok {
		return x.Toast
	}
	return nil
}

func (m *Command) GetRunMain() *RunMain {
	if x, ok := m.GetBody().(*Command_RunMain); ok {
		return x.RunMain
	}
	return nil
}

func (m *Command) GetClear() *Clear {
	if x, ok := m.GetBody().(*Command_Clear); ok {
		return x.Clear
	}
	return nil
}

func (m *Command) GetEval() string {
	if x, ok := m.GetBody().(*Command_Eval); ok {
		return x.Eval
	}
	return ""
}

func (m *Command) GetResult() string {
	if x, ok := m.GetBody().(*Command_Result); ok {
		return x.Result
	}
	return ""
}

func (m *Command) GetInput() string {
	if x, ok := m.GetBody().(*Command_Input); ok {
		return x.Input
	}
	return ""
}

func (m *Command) GetOutput() string {
	if x, ok := m.GetBody().(*Command_Output); ok {
		return x.Output
	}
	return ""
}

func (m *Command) GetError() string {
	if x, ok := m.GetBody().(*Command_Error); ok {
		return x.Error
	}
	return ""
}

func (m *Command) GetSaneTerm() *SaneTerm {
	if x, ok := m.GetBody().(*Command_SaneTerm); ok {
		return x.SaneTerm
	}
	return nil
}

func (m *Command) GetResizeTerm() *ResizeTerm {
	if x, ok := m.GetBody().(*Command_ResizeTerm); ok {
		return x.ResizeTerm
	}
	return nil
}

func (m *Command) GetState() State {
	if x, ok := m.GetBody().(*Command_State); ok {
		return x.State
	}
	return State_Stopped
}

func (m *Command) GetOk() *OK {
	if x, ok := m.GetBody().(*Command_Ok); ok {
		return x.Ok
	}
	return nil
}

func (m *Command) GetPersist() *File {
	if x, ok := m.GetBody().(*Command_Persist); ok {
		return x.Persist
	}
	return nil
}

func (m *Command) GetPersistMirror() *File {
	if x, ok := m.GetBody().(*Command_PersistMirror); ok {
		return x.PersistMirror
	}
	return nil
}

func (m *Command) GetWrite() *File {
	if x, ok := m.GetBody().(*Command_Write); ok {
		return x.Write
	}
	return nil
}

func (m *Command) GetRemove() *File {
	if x, ok := m.GetBody().(*Command_Remove); ok {
		return x.Remove
	}
	return nil
}

func (m *Command) GetMove() *Move {
	if x, ok := m.GetBody().(*Command_Move); ok {
		return x.Move
	}
	return nil
}

func (m *Command) GetTryRemove() *File {
	if x, ok := m.GetBody().(*Command_TryRemove); ok {
		return x.TryRemove
	}
	return nil
}

func (m *Command) GetMkdir() *File {
	if x, ok := m.GetBody().(*Command_Mkdir); ok {
		return x.Mkdir
	}
	return nil
}

func (m *Command) GetRead() *File {
	if x, ok := m.GetBody().(*Command_Read); ok {
		return x.Read
	}
	return nil
}

func (m *Command) GetReaddir() *File {
	if x, ok := m.GetBody().(*Command_Readdir); ok {
		return x.Readdir
	}
	return nil
}

func (m *Command) GetFiles() *Files {
	if x, ok := m.GetBody().(*Command_Files); ok {
		return x.Files
	}
	return nil
}

func (m *Command) GetFile() *File {
	if x, ok := m.GetBody().(*Command_File); ok {
		return x.File
	}
	return nil
}

func (m *Command) GetCheckChanges() *CheckChanges {
	if x, ok := m.GetBody().(*Command_CheckChanges); ok {
		return x.CheckChanges
	}
	return nil
}

func (m *Command) GetChangedFiles() *Files {
	if x, ok := m.GetBody().(*Command_ChangedFiles); ok {
		return x.ChangedFiles
	}
	return nil
}

func (m *Command) GetLintResults() *LintResults {
	if x, ok := m.GetBody().(*Command_LintResults); ok {
		return x.LintResults
	}
	return nil
}

func (m *Command) GetRunContainedTest() *ContainedTest {
	if x, ok := m.GetBody().(*Command_RunContainedTest); ok {
		return x.RunContainedTest
	}
	return nil
}

func (m *Command) GetTestResult() *TestResult {
	if x, ok := m.GetBody().(*Command_TestResult); ok {
		return x.TestResult
	}
	return nil
}

func (m *Command) GetDebuggerStart() string {
	if x, ok := m.GetBody().(*Command_DebuggerStart); ok {
		return x.DebuggerStart
	}
	return ""
}

func (m *Command) GetDebuggerStep() *RunMain {
	if x, ok := m.GetBody().(*Command_DebuggerStep); ok {
		return x.DebuggerStep
	}
	return nil
}

func (m *Command) GetDebuggerStatus() *DebugStatus {
	if x, ok := m.GetBody().(*Command_DebuggerStatus); ok {
		return x.DebuggerStatus
	}
	return nil
}

func (m *Command) GetEnsurePackages() *EnsurePackages {
	if x, ok := m.GetBody().(*Command_EnsurePackages); ok {
		return x.EnsurePackages
	}
	return nil
}

func (m *Command) GetPing() *Ping {
	if x, ok := m.GetBody().(*Command_Ping); ok {
		return x.Ping
	}
	return nil
}

func (m *Command) GetPong() *Pong {
	if x, ok := m.GetBody().(*Command_Pong); ok {
		return x.Pong
	}
	return nil
}

func (m *Command) GetHello() *Hello {
	if x, ok := m.GetBody().(*Command_Hello); ok {
		return x.Hello
	}
	return nil
}

func (m *Command) GetGoodbye() *Goodbye {
	if x, ok := m.GetBody().(*Command_Goodbye); ok {
		return x.Goodbye
	}
	return nil
}

func (m *Command) GetHint() *Hint {
	if x, ok := m.GetBody().(*Command_Hint); ok {
		return x.Hint
	}
	return nil
}

func (m *Command) GetConnect() *Connect {
	if x, ok := m.GetBody().(*Command_Connect); ok {
		return x.Connect
	}
	return nil
}

func (m *Command) GetSend() *Send {
	if x, ok := m.GetBody().(*Command_Send); ok {
		return x.Send
	}
	return nil
}

func (m *Command) GetRecv() *Recv {
	if x, ok := m.GetBody().(*Command_Recv); ok {
		return x.Recv
	}
	return nil
}

func (m *Command) GetDisconnect() *Disconnect {
	if x, ok := m.GetBody().(*Command_Disconnect); ok {
		return x.Disconnect
	}
	return nil
}

func (m *Command) GetFileAuthReq() *FileAuthReq {
	if x, ok := m.GetBody().(*Command_FileAuthReq); ok {
		return x.FileAuthReq
	}
	return nil
}

func (m *Command) GetFileAuthRes() *FileAuthRes {
	if x, ok := m.GetBody().(*Command_FileAuthRes); ok {
		return x.FileAuthRes
	}
	return nil
}

func (m *Command) GetMutliFileAuthRes() *MultiFileAuthRes {
	if x, ok := m.GetBody().(*Command_MutliFileAuthRes); ok {
		return x.MutliFileAuthRes
	}
	return nil
}

func (m *Command) GetListObjects() *ListObjects {
	if x, ok := m.GetBody().(*Command_ListObjects); ok {
		return x.ListObjects
	}
	return nil
}

func (m *Command) GetListObjectsResp() *ListObjectsResp {
	if x, ok := m.GetBody().(*Command_ListObjectsResp); ok {
		return x.ListObjectsResp
	}
	return nil
}

func (m *Command) GetOt() *OTPacket {
	if x, ok := m.GetBody().(*Command_Ot); ok {
		return x.Ot
	}
	return nil
}

func (m *Command) GetOtstatus() *OTStatus {
	if x, ok := m.GetBody().(*Command_Otstatus); ok {
		return x.Otstatus
	}
	return nil
}

func (m *Command) GetOtLinkFile() *OTLinkFile {
	if x, ok := m.GetBody().(*Command_OtLinkFile); ok {
		return x.OtLinkFile
	}
	return nil
}

func (m *Command) GetOtNewCursor() *OTCursor {
	if x, ok := m.GetBody().(*Command_OtNewCursor); ok {
		return x.OtNewCursor
	}
	return nil
}

func (m *Command) GetOtDeleteCursor() *OTCursor {
	if x, ok := m.GetBody().(*Command_OtDeleteCursor); ok {
		return x.OtDeleteCursor
	}
	return nil
}

func (m *Command) GetOtFetchRequest() *OTFetchRequest {
	if x, ok := m.GetBody().(*Command_OtFetchRequest); ok {
		return x.OtFetchRequest
	}
	return nil
}

func (m *Command) GetOtFetchResponse() *OTFetchResponse {
	if x, ok := m.GetBody().(*Command_OtFetchResponse); ok {
		return x.OtFetchResponse
	}
	return nil
}

func (m *Command) GetFlush() *Flush {
	if x, ok := m.GetBody().(*Command_Flush); ok {
		return x.Flush
	}
	return nil
}

func (m *Command) GetDebug() *Debug {
	if x, ok := m.GetBody().(*Command_Debug); ok {
		return x.Debug
	}
	return nil
}

func (m *Command) GetStartVCR() *StartVCR {
	if x, ok := m.GetBody().(*Command_StartVCR); ok {
		return x.StartVCR
	}
	return nil
}

func (m *Command) GetReadVCR() *ReadVCR {
	if x, ok := m.GetBody().(*Command_ReadVCR); ok {
		return x.ReadVCR
	}
	return nil
}

func (m *Command) GetVCRLog() *VCRLog {
	if x, ok := m.GetBody().(*Command_VCRLog); ok {
		return x.VCRLog
	}
	return nil
}

func (m *Command) GetAuth() *Auth {
	if x, ok := m.GetBody().(*Command_Auth); ok {
		return x.Auth
	}
	return nil
}

func (m *Command) GetExecInfo() *ExecInfo {
	if x, ok := m.GetBody().(*Command_ExecInfo); ok {
		return x.ExecInfo
	}
	return nil
}

func (m *Command) GetSubscribeFile() *SubscribeFile {
	if x, ok := m.GetBody().(*Command_SubscribeFile); ok {
		return x.SubscribeFile
	}
	return nil
}

func (m *Command) GetFileEvent() *FileEvent {
	if x, ok := m.GetBody().(*Command_FileEvent); ok {
		return x.FileEvent
	}
	return nil
}

func (m *Command) GetRoster() *Roster {
	if x, ok := m.GetBody().(*Command_Roster); ok {
		return x.Roster
	}
	return nil
}

func (m *Command) GetJoin() *User {
	if x, ok := m.GetBody().(*Command_Join); ok {
		return x.Join
	}
	return nil
}

func (m *Command) GetPart() *User {
	if x, ok := m.GetBody().(*Command_Part); ok {
		return x.Part
	}
	return nil
}

func (m *Command) GetExec() *Exec {
	if x, ok := m.GetBody().(*Command_Exec); ok {
		return x.Exec
	}
	return nil
}

func (m *Command) GetPackageSearch() *PackageSearch {
	if x, ok := m.GetBody().(*Command_PackageSearch); ok {
		return x.PackageSearch
	}
	return nil
}

func (m *Command) GetPackageSearchResp() *PackageSearchResp {
	if x, ok := m.GetBody().(*Command_PackageSearchResp); ok {
		return x.PackageSearchResp
	}
	return nil
}

func (m *Command) GetPackageInfo() *PackageInfo {
	if x, ok := m.GetBody().(*Command_PackageInfo); ok {
		return x.PackageInfo
	}
	return nil
}

func (m *Command) GetPackageInfoResp() *PackageInfoResp {
	if x, ok := m.GetBody().(*Command_PackageInfoResp); ok {
		return x.PackageInfoResp
	}
	return nil
}

func (m *Command) GetPackageAdd() *PackageAdd {
	if x, ok := m.GetBody().(*Command_PackageAdd); ok {
		return x.PackageAdd
	}
	return nil
}

func (m *Command) GetPackageRemove() *PackageRemove {
	if x, ok := m.GetBody().(*Command_PackageRemove); ok {
		return x.PackageRemove
	}
	return nil
}

func (m *Command) GetPackageInstall() *PackageInstall {
	if x, ok := m.GetBody().(*Command_PackageInstall); ok {
		return x.PackageInstall
	}
	return nil
}

func (m *Command) GetPackageListSpecfile() *PackageListSpecfile {
	if x, ok := m.GetBody().(*Command_PackageListSpecfile); ok {
		return x.PackageListSpecfile
	}
	return nil
}

func (m *Command) GetPackageListSpecfileResp() *PackageListSpecfileResp {
	if x, ok := m.GetBody().(*Command_PackageListSpecfileResp); ok {
		return x.PackageListSpecfileResp
	}
	return nil
}

func (m *Command) GetPackageCacheSave() *PackageCacheSave {
	if x, ok := m.GetBody().(*Command_PackageCacheSave); ok {
		return x.PackageCacheSave
	}
	return nil
}

func (m *Command) GetChatMessage() *ChatMessage {
	if x, ok := m.GetBody().(*Command_ChatMessage); ok {
		return x.ChatMessage
	}
	return nil
}

func (m *Command) GetChatTyping() *ChatTyping {
	if x, ok := m.GetBody().(*Command_ChatTyping); ok {
		return x.ChatTyping
	}
	return nil
}

func (m *Command) GetChatScrollback() *ChatScrollback {
	if x, ok := m.GetBody().(*Command_ChatScrollback); ok {
		return x.ChatScrollback
	}
	return nil
}

func (m *Command) GetFsSnapshot() *FSSnapshot {
	if x, ok := m.GetBody().(*Command_FsSnapshot); ok {
		return x.FsSnapshot
	}
	return nil
}

func (m *Command) GetFsTakeLock() *FSLock {
	if x, ok := m.GetBody().(*Command_FsTakeLock); ok {
		return x.FsTakeLock
	}
	return nil
}

func (m *Command) GetFsReleaseLock() *FSLock {
	if x, ok := m.GetBody().(*Command_FsReleaseLock); ok {
		return x.FsReleaseLock
	}
	return nil
}

func (m *Command) GetHasCap() bool {
	if x, ok := m.GetBody().(*Command_HasCap); ok {
		return x.HasCap
	}
	return false
}

func (m *Command) GetPid1Config() *Pid1Config {
	if x, ok := m.GetBody().(*Command_Pid1Config); ok {
		return x.Pid1Config
	}
	return nil
}

func (m *Command) GetMetrics() *Metrics {
	if x, ok := m.GetBody().(*Command_Metrics); ok {
		return x.Metrics
	}
	return nil
}

func (m *Command) GetBootStatus() *BootStatus {
	if x, ok := m.GetBody().(*Command_BootStatus); ok {
		return x.BootStatus
	}
	return nil
}

func (m *Command) GetReadMeta() *ReadMeta {
	if x, ok := m.GetBody().(*Command_ReadMeta); ok {
		return x.ReadMeta
	}
	return nil
}

func (m *Command) GetWriteMeta() *WriteMeta {
	if x, ok := m.GetBody().(*Command_WriteMeta); ok {
		return x.WriteMeta
	}
	return nil
}

func (m *Command) GetAppendMeta() *AppendMeta {
	if x, ok := m.GetBody().(*Command_AppendMeta); ok {
		return x.AppendMeta
	}
	return nil
}

func (m *Command) GetAudio() *Audio {
	if x, ok := m.GetBody().(*Command_Audio); ok {
		return x.Audio
	}
	return nil
}

func (m *Command) GetPprofRequest() *PprofRequest {
	if x, ok := m.GetBody().(*Command_PprofRequest); ok {
		return x.PprofRequest
	}
	return nil
}

func (m *Command) GetPprofResponse() *PprofResponse {
	if x, ok := m.GetBody().(*Command_PprofResponse); ok {
		return x.PprofResponse
	}
	return nil
}

func (m *Command) GetAudio2() *Audio2 {
	if x, ok := m.GetBody().(*Command_Audio2); ok {
		return x.Audio2
	}
	return nil
}

func (m *Command) GetRef() string {
	if m != nil {
		return m.Ref
	}
	return ""
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Command) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Command_OneofMarshaler, _Command_OneofUnmarshaler, _Command_OneofSizer, []interface{}{
		(*Command_OpenChan)(nil),
		(*Command_OpenChanRes)(nil),
		(*Command_CloseChan)(nil),
		(*Command_CloseChanRes)(nil),
		(*Command_ContainerState)(nil),
		(*Command_PortOpen)(nil),
		(*Command_Toast)(nil),
		(*Command_RunMain)(nil),
		(*Command_Clear)(nil),
		(*Command_Eval)(nil),
		(*Command_Result)(nil),
		(*Command_Input)(nil),
		(*Command_Output)(nil),
		(*Command_Error)(nil),
		(*Command_SaneTerm)(nil),
		(*Command_ResizeTerm)(nil),
		(*Command_State)(nil),
		(*Command_Ok)(nil),
		(*Command_Persist)(nil),
		(*Command_PersistMirror)(nil),
		(*Command_Write)(nil),
		(*Command_Remove)(nil),
		(*Command_Move)(nil),
		(*Command_TryRemove)(nil),
		(*Command_Mkdir)(nil),
		(*Command_Read)(nil),
		(*Command_Readdir)(nil),
		(*Command_Files)(nil),
		(*Command_File)(nil),
		(*Command_CheckChanges)(nil),
		(*Command_ChangedFiles)(nil),
		(*Command_LintResults)(nil),
		(*Command_RunContainedTest)(nil),
		(*Command_TestResult)(nil),
		(*Command_DebuggerStart)(nil),
		(*Command_DebuggerStep)(nil),
		(*Command_DebuggerStatus)(nil),
		(*Command_EnsurePackages)(nil),
		(*Command_Ping)(nil),
		(*Command_Pong)(nil),
		(*Command_Hello)(nil),
		(*Command_Goodbye)(nil),
		(*Command_Hint)(nil),
		(*Command_Connect)(nil),
		(*Command_Send)(nil),
		(*Command_Recv)(nil),
		(*Command_Disconnect)(nil),
		(*Command_FileAuthReq)(nil),
		(*Command_FileAuthRes)(nil),
		(*Command_MutliFileAuthRes)(nil),
		(*Command_ListObjects)(nil),
		(*Command_ListObjectsResp)(nil),
		(*Command_Ot)(nil),
		(*Command_Otstatus)(nil),
		(*Command_OtLinkFile)(nil),
		(*Command_OtNewCursor)(nil),
		(*Command_OtDeleteCursor)(nil),
		(*Command_OtFetchRequest)(nil),
		(*Command_OtFetchResponse)(nil),
		(*Command_Flush)(nil),
		(*Command_Debug)(nil),
		(*Command_StartVCR)(nil),
		(*Command_ReadVCR)(nil),
		(*Command_VCRLog)(nil),
		(*Command_Auth)(nil),
		(*Command_ExecInfo)(nil),
		(*Command_SubscribeFile)(nil),
		(*Command_FileEvent)(nil),
		(*Command_Roster)(nil),
		(*Command_Join)(nil),
		(*Command_Part)(nil),
		(*Command_Exec)(nil),
		(*Command_PackageSearch)(nil),
		(*Command_PackageSearchResp)(nil),
		(*Command_PackageInfo)(nil),
		(*Command_PackageInfoResp)(nil),
		(*Command_PackageAdd)(nil),
		(*Command_PackageRemove)(nil),
		(*Command_PackageInstall)(nil),
		(*Command_PackageListSpecfile)(nil),
		(*Command_PackageListSpecfileResp)(nil),
		(*Command_PackageCacheSave)(nil),
		(*Command_ChatMessage)(nil),
		(*Command_ChatTyping)(nil),
		(*Command_ChatScrollback)(nil),
		(*Command_FsSnapshot)(nil),
		(*Command_FsTakeLock)(nil),
		(*Command_FsReleaseLock)(nil),
		(*Command_HasCap)(nil),
		(*Command_Pid1Config)(nil),
		(*Command_Metrics)(nil),
		(*Command_BootStatus)(nil),
		(*Command_ReadMeta)(nil),
		(*Command_WriteMeta)(nil),
		(*Command_AppendMeta)(nil),
		(*Command_Audio)(nil),
		(*Command_PprofRequest)(nil),
		(*Command_PprofResponse)(nil),
		(*Command_Audio2)(nil),
	}
}

func _Command_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Command)
	// body
	switch x := m.Body.(type) {
	case *Command_OpenChan:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.OpenChan); err != nil {
			return err
		}
	case *Command_OpenChanRes:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.OpenChanRes); err != nil {
			return err
		}
	case *Command_CloseChan:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CloseChan); err != nil {
			return err
		}
	case *Command_CloseChanRes:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CloseChanRes); err != nil {
			return err
		}
	case *Command_ContainerState:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ContainerState); err != nil {
			return err
		}
	case *Command_PortOpen:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PortOpen); err != nil {
			return err
		}
	case *Command_Toast:
		b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Toast); err != nil {
			return err
		}
	case *Command_RunMain:
		b.EncodeVarint(16<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RunMain); err != nil {
			return err
		}
	case *Command_Clear:
		b.EncodeVarint(17<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Clear); err != nil {
			return err
		}
	case *Command_Eval:
		b.EncodeVarint(20<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Eval)
	case *Command_Result:
		b.EncodeVarint(21<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Result)
	case *Command_Input:
		b.EncodeVarint(22<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Input)
	case *Command_Output:
		b.EncodeVarint(23<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Output)
	case *Command_Error:
		b.EncodeVarint(24<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Error)
	case *Command_SaneTerm:
		b.EncodeVarint(26<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SaneTerm); err != nil {
			return err
		}
	case *Command_ResizeTerm:
		b.EncodeVarint(27<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ResizeTerm); err != nil {
			return err
		}
	case *Command_State:
		b.EncodeVarint(28<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.State))
	case *Command_Ok:
		b.EncodeVarint(30<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Ok); err != nil {
			return err
		}
	case *Command_Persist:
		b.EncodeVarint(31<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Persist); err != nil {
			return err
		}
	case *Command_PersistMirror:
		b.EncodeVarint(41<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PersistMirror); err != nil {
			return err
		}
	case *Command_Write:
		b.EncodeVarint(32<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Write); err != nil {
			return err
		}
	case *Command_Remove:
		b.EncodeVarint(33<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Remove); err != nil {
			return err
		}
	case *Command_Move:
		b.EncodeVarint(34<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Move); err != nil {
			return err
		}
	case *Command_TryRemove:
		b.EncodeVarint(36<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.TryRemove); err != nil {
			return err
		}
	case *Command_Mkdir:
		b.EncodeVarint(39<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Mkdir); err != nil {
			return err
		}
	case *Command_Read:
		b.EncodeVarint(35<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Read); err != nil {
			return err
		}
	case *Command_Readdir:
		b.EncodeVarint(37<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Readdir); err != nil {
			return err
		}
	case *Command_Files:
		b.EncodeVarint(38<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Files); err != nil {
			return err
		}
	case *Command_File:
		b.EncodeVarint(40<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.File); err != nil {
			return err
		}
	case *Command_CheckChanges:
		b.EncodeVarint(42<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CheckChanges); err != nil {
			return err
		}
	case *Command_ChangedFiles:
		b.EncodeVarint(43<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ChangedFiles); err != nil {
			return err
		}
	case *Command_LintResults:
		b.EncodeVarint(44<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.LintResults); err != nil {
			return err
		}
	case *Command_RunContainedTest:
		b.EncodeVarint(70<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RunContainedTest); err != nil {
			return err
		}
	case *Command_TestResult:
		b.EncodeVarint(71<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.TestResult); err != nil {
			return err
		}
	case *Command_DebuggerStart:
		b.EncodeVarint(90<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.DebuggerStart)
	case *Command_DebuggerStep:
		b.EncodeVarint(91<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DebuggerStep); err != nil {
			return err
		}
	case *Command_DebuggerStatus:
		b.EncodeVarint(92<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DebuggerStatus); err != nil {
			return err
		}
	case *Command_EnsurePackages:
		b.EncodeVarint(100<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.EnsurePackages); err != nil {
			return err
		}
	case *Command_Ping:
		b.EncodeVarint(120<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Ping); err != nil {
			return err
		}
	case *Command_Pong:
		b.EncodeVarint(121<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Pong); err != nil {
			return err
		}
	case *Command_Hello:
		b.EncodeVarint(122<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Hello); err != nil {
			return err
		}
	case *Command_Goodbye:
		b.EncodeVarint(123<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Goodbye); err != nil {
			return err
		}
	case *Command_Hint:
		b.EncodeVarint(130<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Hint); err != nil {
			return err
		}
	case *Command_Connect:
		b.EncodeVarint(150<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Connect); err != nil {
			return err
		}
	case *Command_Send:
		b.EncodeVarint(151<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Send); err != nil {
			return err
		}
	case *Command_Recv:
		b.EncodeVarint(152<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Recv); err != nil {
			return err
		}
	case *Command_Disconnect:
		b.EncodeVarint(153<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Disconnect); err != nil {
			return err
		}
	case *Command_FileAuthReq:
		b.EncodeVarint(200<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.FileAuthReq); err != nil {
			return err
		}
	case *Command_FileAuthRes:
		b.EncodeVarint(201<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.FileAuthRes); err != nil {
			return err
		}
	case *Command_MutliFileAuthRes:
		b.EncodeVarint(202<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.MutliFileAuthRes); err != nil {
			return err
		}
	case *Command_ListObjects:
		b.EncodeVarint(205<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ListObjects); err != nil {
			return err
		}
	case *Command_ListObjectsResp:
		b.EncodeVarint(206<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ListObjectsResp); err != nil {
			return err
		}
	case *Command_Ot:
		b.EncodeVarint(220<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Ot); err != nil {
			return err
		}
	case *Command_Otstatus:
		b.EncodeVarint(221<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Otstatus); err != nil {
			return err
		}
	case *Command_OtLinkFile:
		b.EncodeVarint(222<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.OtLinkFile); err != nil {
			return err
		}
	case *Command_OtNewCursor:
		b.EncodeVarint(223<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.OtNewCursor); err != nil {
			return err
		}
	case *Command_OtDeleteCursor:
		b.EncodeVarint(224<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.OtDeleteCursor); err != nil {
			return err
		}
	case *Command_OtFetchRequest:
		b.EncodeVarint(225<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.OtFetchRequest); err != nil {
			return err
		}
	case *Command_OtFetchResponse:
		b.EncodeVarint(226<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.OtFetchResponse); err != nil {
			return err
		}
	case *Command_Flush:
		b.EncodeVarint(251<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Flush); err != nil {
			return err
		}
	case *Command_Debug:
		b.EncodeVarint(230<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Debug); err != nil {
			return err
		}
	case *Command_StartVCR:
		b.EncodeVarint(231<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.StartVCR); err != nil {
			return err
		}
	case *Command_ReadVCR:
		b.EncodeVarint(232<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ReadVCR); err != nil {
			return err
		}
	case *Command_VCRLog:
		b.EncodeVarint(233<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.VCRLog); err != nil {
			return err
		}
	case *Command_Auth:
		b.EncodeVarint(235<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Auth); err != nil {
			return err
		}
	case *Command_ExecInfo:
		b.EncodeVarint(240<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ExecInfo); err != nil {
			return err
		}
	case *Command_SubscribeFile:
		b.EncodeVarint(256<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SubscribeFile); err != nil {
			return err
		}
	case *Command_FileEvent:
		b.EncodeVarint(257<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.FileEvent); err != nil {
			return err
		}
	case *Command_Roster:
		b.EncodeVarint(260<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Roster); err != nil {
			return err
		}
	case *Command_Join:
		b.EncodeVarint(261<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Join); err != nil {
			return err
		}
	case *Command_Part:
		b.EncodeVarint(262<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Part); err != nil {
			return err
		}
	case *Command_Exec:
		b.EncodeVarint(270<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Exec); err != nil {
			return err
		}
	case *Command_PackageSearch:
		b.EncodeVarint(280<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PackageSearch); err != nil {
			return err
		}
	case *Command_PackageSearchResp:
		b.EncodeVarint(281<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PackageSearchResp); err != nil {
			return err
		}
	case *Command_PackageInfo:
		b.EncodeVarint(282<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PackageInfo); err != nil {
			return err
		}
	case *Command_PackageInfoResp:
		b.EncodeVarint(283<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PackageInfoResp); err != nil {
			return err
		}
	case *Command_PackageAdd:
		b.EncodeVarint(284<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PackageAdd); err != nil {
			return err
		}
	case *Command_PackageRemove:
		b.EncodeVarint(285<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PackageRemove); err != nil {
			return err
		}
	case *Command_PackageInstall:
		b.EncodeVarint(286<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PackageInstall); err != nil {
			return err
		}
	case *Command_PackageListSpecfile:
		b.EncodeVarint(287<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PackageListSpecfile); err != nil {
			return err
		}
	case *Command_PackageListSpecfileResp:
		b.EncodeVarint(288<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PackageListSpecfileResp); err != nil {
			return err
		}
	case *Command_PackageCacheSave:
		b.EncodeVarint(289<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PackageCacheSave); err != nil {
			return err
		}
	case *Command_ChatMessage:
		b.EncodeVarint(310<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ChatMessage); err != nil {
			return err
		}
	case *Command_ChatTyping:
		b.EncodeVarint(311<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ChatTyping); err != nil {
			return err
		}
	case *Command_ChatScrollback:
		b.EncodeVarint(312<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ChatScrollback); err != nil {
			return err
		}
	case *Command_FsSnapshot:
		b.EncodeVarint(330<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.FsSnapshot); err != nil {
			return err
		}
	case *Command_FsTakeLock:
		b.EncodeVarint(331<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.FsTakeLock); err != nil {
			return err
		}
	case *Command_FsReleaseLock:
		b.EncodeVarint(332<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.FsReleaseLock); err != nil {
			return err
		}
	case *Command_HasCap:
		t := uint64(0)
		if x.HasCap {
			t = 1
		}
		b.EncodeVarint(335<<3 | proto.WireVarint)
		b.EncodeVarint(t)
	case *Command_Pid1Config:
		b.EncodeVarint(340<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Pid1Config); err != nil {
			return err
		}
	case *Command_Metrics:
		b.EncodeVarint(350<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Metrics); err != nil {
			return err
		}
	case *Command_BootStatus:
		b.EncodeVarint(351<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.BootStatus); err != nil {
			return err
		}
	case *Command_ReadMeta:
		b.EncodeVarint(360<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ReadMeta); err != nil {
			return err
		}
	case *Command_WriteMeta:
		b.EncodeVarint(361<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.WriteMeta); err != nil {
			return err
		}
	case *Command_AppendMeta:
		b.EncodeVarint(362<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AppendMeta); err != nil {
			return err
		}
	case *Command_Audio:
		b.EncodeVarint(363<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Audio); err != nil {
			return err
		}
	case *Command_PprofRequest:
		b.EncodeVarint(364<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PprofRequest); err != nil {
			return err
		}
	case *Command_PprofResponse:
		b.EncodeVarint(365<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PprofResponse); err != nil {
			return err
		}
	case *Command_Audio2:
		b.EncodeVarint(366<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Audio2); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Command.Body has unexpected type %T", x)
	}
	return nil
}

func _Command_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Command)
	switch tag {
	case 3: // body.openChan
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(OpenChannel)
		err := b.DecodeMessage(msg)
		m.Body = &Command_OpenChan{msg}
		return true, err
	case 4: // body.openChanRes
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(OpenChannelRes)
		err := b.DecodeMessage(msg)
		m.Body = &Command_OpenChanRes{msg}
		return true, err
	case 5: // body.closeChan
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CloseChannel)
		err := b.DecodeMessage(msg)
		m.Body = &Command_CloseChan{msg}
		return true, err
	case 6: // body.closeChanRes
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CloseChannelRes)
		err := b.DecodeMessage(msg)
		m.Body = &Command_CloseChanRes{msg}
		return true, err
	case 9: // body.containerState
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ContainerState)
		err := b.DecodeMessage(msg)
		m.Body = &Command_ContainerState{msg}
		return true, err
	case 10: // body.portOpen
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PortOpen)
		err := b.DecodeMessage(msg)
		m.Body = &Command_PortOpen{msg}
		return true, err
	case 11: // body.toast
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Toast)
		err := b.DecodeMessage(msg)
		m.Body = &Command_Toast{msg}
		return true, err
	case 16: // body.runMain
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RunMain)
		err := b.DecodeMessage(msg)
		m.Body = &Command_RunMain{msg}
		return true, err
	case 17: // body.clear
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Clear)
		err := b.DecodeMessage(msg)
		m.Body = &Command_Clear{msg}
		return true, err
	case 20: // body.eval
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Body = &Command_Eval{x}
		return true, err
	case 21: // body.result
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Body = &Command_Result{x}
		return true, err
	case 22: // body.input
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Body = &Command_Input{x}
		return true, err
	case 23: // body.output
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Body = &Command_Output{x}
		return true, err
	case 24: // body.error
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Body = &Command_Error{x}
		return true, err
	case 26: // body.saneTerm
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SaneTerm)
		err := b.DecodeMessage(msg)
		m.Body = &Command_SaneTerm{msg}
		return true, err
	case 27: // body.resizeTerm
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResizeTerm)
		err := b.DecodeMessage(msg)
		m.Body = &Command_ResizeTerm{msg}
		return true, err
	case 28: // body.state
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Body = &Command_State{State(x)}
		return true, err
	case 30: // body.ok
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(OK)
		err := b.DecodeMessage(msg)
		m.Body = &Command_Ok{msg}
		return true, err
	case 31: // body.persist
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(File)
		err := b.DecodeMessage(msg)
		m.Body = &Command_Persist{msg}
		return true, err
	case 41: // body.persistMirror
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(File)
		err := b.DecodeMessage(msg)
		m.Body = &Command_PersistMirror{msg}
		return true, err
	case 32: // body.write
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(File)
		err := b.DecodeMessage(msg)
		m.Body = &Command_Write{msg}
		return true, err
	case 33: // body.remove
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(File)
		err := b.DecodeMessage(msg)
		m.Body = &Command_Remove{msg}
		return true, err
	case 34: // body.move
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Move)
		err := b.DecodeMessage(msg)
		m.Body = &Command_Move{msg}
		return true, err
	case 36: // body.tryRemove
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(File)
		err := b.DecodeMessage(msg)
		m.Body = &Command_TryRemove{msg}
		return true, err
	case 39: // body.mkdir
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(File)
		err := b.DecodeMessage(msg)
		m.Body = &Command_Mkdir{msg}
		return true, err
	case 35: // body.read
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(File)
		err := b.DecodeMessage(msg)
		m.Body = &Command_Read{msg}
		return true, err
	case 37: // body.readdir
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(File)
		err := b.DecodeMessage(msg)
		m.Body = &Command_Readdir{msg}
		return true, err
	case 38: // body.files
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Files)
		err := b.DecodeMessage(msg)
		m.Body = &Command_Files{msg}
		return true, err
	case 40: // body.file
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(File)
		err := b.DecodeMessage(msg)
		m.Body = &Command_File{msg}
		return true, err
	case 42: // body.checkChanges
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CheckChanges)
		err := b.DecodeMessage(msg)
		m.Body = &Command_CheckChanges{msg}
		return true, err
	case 43: // body.changedFiles
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Files)
		err := b.DecodeMessage(msg)
		m.Body = &Command_ChangedFiles{msg}
		return true, err
	case 44: // body.lintResults
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(LintResults)
		err := b.DecodeMessage(msg)
		m.Body = &Command_LintResults{msg}
		return true, err
	case 70: // body.runContainedTest
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ContainedTest)
		err := b.DecodeMessage(msg)
		m.Body = &Command_RunContainedTest{msg}
		return true, err
	case 71: // body.testResult
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TestResult)
		err := b.DecodeMessage(msg)
		m.Body = &Command_TestResult{msg}
		return true, err
	case 90: // body.debuggerStart
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Body = &Command_DebuggerStart{x}
		return true, err
	case 91: // body.debuggerStep
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RunMain)
		err := b.DecodeMessage(msg)
		m.Body = &Command_DebuggerStep{msg}
		return true, err
	case 92: // body.debuggerStatus
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DebugStatus)
		err := b.DecodeMessage(msg)
		m.Body = &Command_DebuggerStatus{msg}
		return true, err
	case 100: // body.ensurePackages
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(EnsurePackages)
		err := b.DecodeMessage(msg)
		m.Body = &Command_EnsurePackages{msg}
		return true, err
	case 120: // body.ping
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Ping)
		err := b.DecodeMessage(msg)
		m.Body = &Command_Ping{msg}
		return true, err
	case 121: // body.pong
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Pong)
		err := b.DecodeMessage(msg)
		m.Body = &Command_Pong{msg}
		return true, err
	case 122: // body.hello
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Hello)
		err := b.DecodeMessage(msg)
		m.Body = &Command_Hello{msg}
		return true, err
	case 123: // body.goodbye
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Goodbye)
		err := b.DecodeMessage(msg)
		m.Body = &Command_Goodbye{msg}
		return true, err
	case 130: // body.hint
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Hint)
		err := b.DecodeMessage(msg)
		m.Body = &Command_Hint{msg}
		return true, err
	case 150: // body.connect
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Connect)
		err := b.DecodeMessage(msg)
		m.Body = &Command_Connect{msg}
		return true, err
	case 151: // body.send
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Send)
		err := b.DecodeMessage(msg)
		m.Body = &Command_Send{msg}
		return true, err
	case 152: // body.recv
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Recv)
		err := b.DecodeMessage(msg)
		m.Body = &Command_Recv{msg}
		return true, err
	case 153: // body.disconnect
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Disconnect)
		err := b.DecodeMessage(msg)
		m.Body = &Command_Disconnect{msg}
		return true, err
	case 200: // body.fileAuthReq
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(FileAuthReq)
		err := b.DecodeMessage(msg)
		m.Body = &Command_FileAuthReq{msg}
		return true, err
	case 201: // body.fileAuthRes
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(FileAuthRes)
		err := b.DecodeMessage(msg)
		m.Body = &Command_FileAuthRes{msg}
		return true, err
	case 202: // body.mutliFileAuthRes
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MultiFileAuthRes)
		err := b.DecodeMessage(msg)
		m.Body = &Command_MutliFileAuthRes{msg}
		return true, err
	case 205: // body.listObjects
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ListObjects)
		err := b.DecodeMessage(msg)
		m.Body = &Command_ListObjects{msg}
		return true, err
	case 206: // body.listObjectsResp
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ListObjectsResp)
		err := b.DecodeMessage(msg)
		m.Body = &Command_ListObjectsResp{msg}
		return true, err
	case 220: // body.ot
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(OTPacket)
		err := b.DecodeMessage(msg)
		m.Body = &Command_Ot{msg}
		return true, err
	case 221: // body.otstatus
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(OTStatus)
		err := b.DecodeMessage(msg)
		m.Body = &Command_Otstatus{msg}
		return true, err
	case 222: // body.otLinkFile
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(OTLinkFile)
		err := b.DecodeMessage(msg)
		m.Body = &Command_OtLinkFile{msg}
		return true, err
	case 223: // body.otNewCursor
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(OTCursor)
		err := b.DecodeMessage(msg)
		m.Body = &Command_OtNewCursor{msg}
		return true, err
	case 224: // body.otDeleteCursor
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(OTCursor)
		err := b.DecodeMessage(msg)
		m.Body = &Command_OtDeleteCursor{msg}
		return true, err
	case 225: // body.otFetchRequest
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(OTFetchRequest)
		err := b.DecodeMessage(msg)
		m.Body = &Command_OtFetchRequest{msg}
		return true, err
	case 226: // body.otFetchResponse
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(OTFetchResponse)
		err := b.DecodeMessage(msg)
		m.Body = &Command_OtFetchResponse{msg}
		return true, err
	case 251: // body.flush
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Flush)
		err := b.DecodeMessage(msg)
		m.Body = &Command_Flush{msg}
		return true, err
	case 230: // body.debug
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Debug)
		err := b.DecodeMessage(msg)
		m.Body = &Command_Debug{msg}
		return true, err
	case 231: // body.startVCR
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(StartVCR)
		err := b.DecodeMessage(msg)
		m.Body = &Command_StartVCR{msg}
		return true, err
	case 232: // body.readVCR
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ReadVCR)
		err := b.DecodeMessage(msg)
		m.Body = &Command_ReadVCR{msg}
		return true, err
	case 233: // body.VCRLog
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(VCRLog)
		err := b.DecodeMessage(msg)
		m.Body = &Command_VCRLog{msg}
		return true, err
	case 235: // body.auth
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Auth)
		err := b.DecodeMessage(msg)
		m.Body = &Command_Auth{msg}
		return true, err
	case 240: // body.execInfo
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ExecInfo)
		err := b.DecodeMessage(msg)
		m.Body = &Command_ExecInfo{msg}
		return true, err
	case 256: // body.subscribeFile
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SubscribeFile)
		err := b.DecodeMessage(msg)
		m.Body = &Command_SubscribeFile{msg}
		return true, err
	case 257: // body.fileEvent
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(FileEvent)
		err := b.DecodeMessage(msg)
		m.Body = &Command_FileEvent{msg}
		return true, err
	case 260: // body.roster
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Roster)
		err := b.DecodeMessage(msg)
		m.Body = &Command_Roster{msg}
		return true, err
	case 261: // body.join
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(User)
		err := b.DecodeMessage(msg)
		m.Body = &Command_Join{msg}
		return true, err
	case 262: // body.part
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(User)
		err := b.DecodeMessage(msg)
		m.Body = &Command_Part{msg}
		return true, err
	case 270: // body.exec
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Exec)
		err := b.DecodeMessage(msg)
		m.Body = &Command_Exec{msg}
		return true, err
	case 280: // body.packageSearch
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PackageSearch)
		err := b.DecodeMessage(msg)
		m.Body = &Command_PackageSearch{msg}
		return true, err
	case 281: // body.packageSearchResp
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PackageSearchResp)
		err := b.DecodeMessage(msg)
		m.Body = &Command_PackageSearchResp{msg}
		return true, err
	case 282: // body.packageInfo
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PackageInfo)
		err := b.DecodeMessage(msg)
		m.Body = &Command_PackageInfo{msg}
		return true, err
	case 283: // body.packageInfoResp
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PackageInfoResp)
		err := b.DecodeMessage(msg)
		m.Body = &Command_PackageInfoResp{msg}
		return true, err
	case 284: // body.packageAdd
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PackageAdd)
		err := b.DecodeMessage(msg)
		m.Body = &Command_PackageAdd{msg}
		return true, err
	case 285: // body.packageRemove
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PackageRemove)
		err := b.DecodeMessage(msg)
		m.Body = &Command_PackageRemove{msg}
		return true, err
	case 286: // body.packageInstall
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PackageInstall)
		err := b.DecodeMessage(msg)
		m.Body = &Command_PackageInstall{msg}
		return true, err
	case 287: // body.packageListSpecfile
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PackageListSpecfile)
		err := b.DecodeMessage(msg)
		m.Body = &Command_PackageListSpecfile{msg}
		return true, err
	case 288: // body.packageListSpecfileResp
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PackageListSpecfileResp)
		err := b.DecodeMessage(msg)
		m.Body = &Command_PackageListSpecfileResp{msg}
		return true, err
	case 289: // body.packageCacheSave
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PackageCacheSave)
		err := b.DecodeMessage(msg)
		m.Body = &Command_PackageCacheSave{msg}
		return true, err
	case 310: // body.chatMessage
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ChatMessage)
		err := b.DecodeMessage(msg)
		m.Body = &Command_ChatMessage{msg}
		return true, err
	case 311: // body.chatTyping
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ChatTyping)
		err := b.DecodeMessage(msg)
		m.Body = &Command_ChatTyping{msg}
		return true, err
	case 312: // body.chatScrollback
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ChatScrollback)
		err := b.DecodeMessage(msg)
		m.Body = &Command_ChatScrollback{msg}
		return true, err
	case 330: // body.fsSnapshot
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(FSSnapshot)
		err := b.DecodeMessage(msg)
		m.Body = &Command_FsSnapshot{msg}
		return true, err
	case 331: // body.fsTakeLock
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(FSLock)
		err := b.DecodeMessage(msg)
		m.Body = &Command_FsTakeLock{msg}
		return true, err
	case 332: // body.fsReleaseLock
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(FSLock)
		err := b.DecodeMessage(msg)
		m.Body = &Command_FsReleaseLock{msg}
		return true, err
	case 335: // body.hasCap
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Body = &Command_HasCap{x != 0}
		return true, err
	case 340: // body.pid1Config
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Pid1Config)
		err := b.DecodeMessage(msg)
		m.Body = &Command_Pid1Config{msg}
		return true, err
	case 350: // body.metrics
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Metrics)
		err := b.DecodeMessage(msg)
		m.Body = &Command_Metrics{msg}
		return true, err
	case 351: // body.bootStatus
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BootStatus)
		err := b.DecodeMessage(msg)
		m.Body = &Command_BootStatus{msg}
		return true, err
	case 360: // body.readMeta
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ReadMeta)
		err := b.DecodeMessage(msg)
		m.Body = &Command_ReadMeta{msg}
		return true, err
	case 361: // body.writeMeta
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(WriteMeta)
		err := b.DecodeMessage(msg)
		m.Body = &Command_WriteMeta{msg}
		return true, err
	case 362: // body.appendMeta
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AppendMeta)
		err := b.DecodeMessage(msg)
		m.Body = &Command_AppendMeta{msg}
		return true, err
	case 363: // body.audio
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Audio)
		err := b.DecodeMessage(msg)
		m.Body = &Command_Audio{msg}
		return true, err
	case 364: // body.pprofRequest
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PprofRequest)
		err := b.DecodeMessage(msg)
		m.Body = &Command_PprofRequest{msg}
		return true, err
	case 365: // body.pprofResponse
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PprofResponse)
		err := b.DecodeMessage(msg)
		m.Body = &Command_PprofResponse{msg}
		return true, err
	case 366: // body.audio2
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Audio2)
		err := b.DecodeMessage(msg)
		m.Body = &Command_Audio2{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Command_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Command)
	// body
	switch x := m.Body.(type) {
	case *Command_OpenChan:
		s := proto.Size(x.OpenChan)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_OpenChanRes:
		s := proto.Size(x.OpenChanRes)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_CloseChan:
		s := proto.Size(x.CloseChan)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_CloseChanRes:
		s := proto.Size(x.CloseChanRes)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_ContainerState:
		s := proto.Size(x.ContainerState)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_PortOpen:
		s := proto.Size(x.PortOpen)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_Toast:
		s := proto.Size(x.Toast)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_RunMain:
		s := proto.Size(x.RunMain)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_Clear:
		s := proto.Size(x.Clear)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_Eval:
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Eval)))
		n += len(x.Eval)
	case *Command_Result:
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Result)))
		n += len(x.Result)
	case *Command_Input:
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Input)))
		n += len(x.Input)
	case *Command_Output:
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Output)))
		n += len(x.Output)
	case *Command_Error:
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Error)))
		n += len(x.Error)
	case *Command_SaneTerm:
		s := proto.Size(x.SaneTerm)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_ResizeTerm:
		s := proto.Size(x.ResizeTerm)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_State:
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(x.State))
	case *Command_Ok:
		s := proto.Size(x.Ok)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_Persist:
		s := proto.Size(x.Persist)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_PersistMirror:
		s := proto.Size(x.PersistMirror)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_Write:
		s := proto.Size(x.Write)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_Remove:
		s := proto.Size(x.Remove)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_Move:
		s := proto.Size(x.Move)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_TryRemove:
		s := proto.Size(x.TryRemove)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_Mkdir:
		s := proto.Size(x.Mkdir)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_Read:
		s := proto.Size(x.Read)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_Readdir:
		s := proto.Size(x.Readdir)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_Files:
		s := proto.Size(x.Files)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_File:
		s := proto.Size(x.File)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_CheckChanges:
		s := proto.Size(x.CheckChanges)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_ChangedFiles:
		s := proto.Size(x.ChangedFiles)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_LintResults:
		s := proto.Size(x.LintResults)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_RunContainedTest:
		s := proto.Size(x.RunContainedTest)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_TestResult:
		s := proto.Size(x.TestResult)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_DebuggerStart:
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(len(x.DebuggerStart)))
		n += len(x.DebuggerStart)
	case *Command_DebuggerStep:
		s := proto.Size(x.DebuggerStep)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_DebuggerStatus:
		s := proto.Size(x.DebuggerStatus)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_EnsurePackages:
		s := proto.Size(x.EnsurePackages)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_Ping:
		s := proto.Size(x.Ping)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_Pong:
		s := proto.Size(x.Pong)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_Hello:
		s := proto.Size(x.Hello)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_Goodbye:
		s := proto.Size(x.Goodbye)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_Hint:
		s := proto.Size(x.Hint)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_Connect:
		s := proto.Size(x.Connect)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_Send:
		s := proto.Size(x.Send)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_Recv:
		s := proto.Size(x.Recv)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_Disconnect:
		s := proto.Size(x.Disconnect)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_FileAuthReq:
		s := proto.Size(x.FileAuthReq)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_FileAuthRes:
		s := proto.Size(x.FileAuthRes)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_MutliFileAuthRes:
		s := proto.Size(x.MutliFileAuthRes)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_ListObjects:
		s := proto.Size(x.ListObjects)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_ListObjectsResp:
		s := proto.Size(x.ListObjectsResp)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_Ot:
		s := proto.Size(x.Ot)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_Otstatus:
		s := proto.Size(x.Otstatus)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_OtLinkFile:
		s := proto.Size(x.OtLinkFile)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_OtNewCursor:
		s := proto.Size(x.OtNewCursor)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_OtDeleteCursor:
		s := proto.Size(x.OtDeleteCursor)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_OtFetchRequest:
		s := proto.Size(x.OtFetchRequest)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_OtFetchResponse:
		s := proto.Size(x.OtFetchResponse)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_Flush:
		s := proto.Size(x.Flush)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_Debug:
		s := proto.Size(x.Debug)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_StartVCR:
		s := proto.Size(x.StartVCR)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_ReadVCR:
		s := proto.Size(x.ReadVCR)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_VCRLog:
		s := proto.Size(x.VCRLog)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_Auth:
		s := proto.Size(x.Auth)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_ExecInfo:
		s := proto.Size(x.ExecInfo)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_SubscribeFile:
		s := proto.Size(x.SubscribeFile)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_FileEvent:
		s := proto.Size(x.FileEvent)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_Roster:
		s := proto.Size(x.Roster)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_Join:
		s := proto.Size(x.Join)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_Part:
		s := proto.Size(x.Part)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_Exec:
		s := proto.Size(x.Exec)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_PackageSearch:
		s := proto.Size(x.PackageSearch)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_PackageSearchResp:
		s := proto.Size(x.PackageSearchResp)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_PackageInfo:
		s := proto.Size(x.PackageInfo)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_PackageInfoResp:
		s := proto.Size(x.PackageInfoResp)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_PackageAdd:
		s := proto.Size(x.PackageAdd)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_PackageRemove:
		s := proto.Size(x.PackageRemove)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_PackageInstall:
		s := proto.Size(x.PackageInstall)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_PackageListSpecfile:
		s := proto.Size(x.PackageListSpecfile)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_PackageListSpecfileResp:
		s := proto.Size(x.PackageListSpecfileResp)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_PackageCacheSave:
		s := proto.Size(x.PackageCacheSave)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_ChatMessage:
		s := proto.Size(x.ChatMessage)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_ChatTyping:
		s := proto.Size(x.ChatTyping)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_ChatScrollback:
		s := proto.Size(x.ChatScrollback)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_FsSnapshot:
		s := proto.Size(x.FsSnapshot)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_FsTakeLock:
		s := proto.Size(x.FsTakeLock)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_FsReleaseLock:
		s := proto.Size(x.FsReleaseLock)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_HasCap:
		n += 2 // tag and wire
		n += 1
	case *Command_Pid1Config:
		s := proto.Size(x.Pid1Config)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_Metrics:
		s := proto.Size(x.Metrics)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_BootStatus:
		s := proto.Size(x.BootStatus)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_ReadMeta:
		s := proto.Size(x.ReadMeta)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_WriteMeta:
		s := proto.Size(x.WriteMeta)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_AppendMeta:
		s := proto.Size(x.AppendMeta)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_Audio:
		s := proto.Size(x.Audio)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_PprofRequest:
		s := proto.Size(x.PprofRequest)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_PprofResponse:
		s := proto.Size(x.PprofResponse)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_Audio2:
		s := proto.Size(x.Audio2)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Audio struct {
	Data                 []int32  `protobuf:"varint,1,rep,packed,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Audio) Reset()         { *m = Audio{} }
func (m *Audio) String() string { return proto.CompactTextString(m) }
func (*Audio) ProtoMessage()    {}
func (*Audio) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{1}
}
func (m *Audio) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Audio.Unmarshal(m, b)
}
func (m *Audio) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Audio.Marshal(b, m, deterministic)
}
func (dst *Audio) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Audio.Merge(dst, src)
}
func (m *Audio) XXX_Size() int {
	return xxx_messageInfo_Audio.Size(m)
}
func (m *Audio) XXX_DiscardUnknown() {
	xxx_messageInfo_Audio.DiscardUnknown(m)
}

var xxx_messageInfo_Audio proto.InternalMessageInfo

func (m *Audio) GetData() []int32 {
	if m != nil {
		return m.Data
	}
	return nil
}

type Audio2 struct {
	Data                 []int32  `protobuf:"zigzag32,1,rep,packed,name=data,proto3" json:"data,omitempty"`
	Samples              int64    `protobuf:"varint,2,opt,name=samples,proto3" json:"samples,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Audio2) Reset()         { *m = Audio2{} }
func (m *Audio2) String() string { return proto.CompactTextString(m) }
func (*Audio2) ProtoMessage()    {}
func (*Audio2) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{2}
}
func (m *Audio2) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Audio2.Unmarshal(m, b)
}
func (m *Audio2) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Audio2.Marshal(b, m, deterministic)
}
func (dst *Audio2) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Audio2.Merge(dst, src)
}
func (m *Audio2) XXX_Size() int {
	return xxx_messageInfo_Audio2.Size(m)
}
func (m *Audio2) XXX_DiscardUnknown() {
	xxx_messageInfo_Audio2.DiscardUnknown(m)
}

var xxx_messageInfo_Audio2 proto.InternalMessageInfo

func (m *Audio2) GetData() []int32 {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Audio2) GetSamples() int64 {
	if m != nil {
		return m.Samples
	}
	return 0
}

type ReadMeta struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Exists               bool     `protobuf:"varint,2,opt,name=exists,proto3" json:"exists,omitempty"`
	Data                 []byte   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadMeta) Reset()         { *m = ReadMeta{} }
func (m *ReadMeta) String() string { return proto.CompactTextString(m) }
func (*ReadMeta) ProtoMessage()    {}
func (*ReadMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{3}
}
func (m *ReadMeta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadMeta.Unmarshal(m, b)
}
func (m *ReadMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadMeta.Marshal(b, m, deterministic)
}
func (dst *ReadMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadMeta.Merge(dst, src)
}
func (m *ReadMeta) XXX_Size() int {
	return xxx_messageInfo_ReadMeta.Size(m)
}
func (m *ReadMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadMeta.DiscardUnknown(m)
}

var xxx_messageInfo_ReadMeta proto.InternalMessageInfo

func (m *ReadMeta) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *ReadMeta) GetExists() bool {
	if m != nil {
		return m.Exists
	}
	return false
}

func (m *ReadMeta) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type WriteMeta struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Data                 []byte   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WriteMeta) Reset()         { *m = WriteMeta{} }
func (m *WriteMeta) String() string { return proto.CompactTextString(m) }
func (*WriteMeta) ProtoMessage()    {}
func (*WriteMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{4}
}
func (m *WriteMeta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteMeta.Unmarshal(m, b)
}
func (m *WriteMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteMeta.Marshal(b, m, deterministic)
}
func (dst *WriteMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteMeta.Merge(dst, src)
}
func (m *WriteMeta) XXX_Size() int {
	return xxx_messageInfo_WriteMeta.Size(m)
}
func (m *WriteMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteMeta.DiscardUnknown(m)
}

var xxx_messageInfo_WriteMeta proto.InternalMessageInfo

func (m *WriteMeta) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *WriteMeta) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type AppendMeta struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Data                 []byte   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AppendMeta) Reset()         { *m = AppendMeta{} }
func (m *AppendMeta) String() string { return proto.CompactTextString(m) }
func (*AppendMeta) ProtoMessage()    {}
func (*AppendMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{5}
}
func (m *AppendMeta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppendMeta.Unmarshal(m, b)
}
func (m *AppendMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppendMeta.Marshal(b, m, deterministic)
}
func (dst *AppendMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppendMeta.Merge(dst, src)
}
func (m *AppendMeta) XXX_Size() int {
	return xxx_messageInfo_AppendMeta.Size(m)
}
func (m *AppendMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_AppendMeta.DiscardUnknown(m)
}

var xxx_messageInfo_AppendMeta proto.InternalMessageInfo

func (m *AppendMeta) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *AppendMeta) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type BootStatus struct {
	Stage BootStatus_Stage `protobuf:"varint,1,opt,name=stage,proto3,enum=api.BootStatus_Stage" json:"stage,omitempty"`
	// progress/total is context dependant. Most stages have no progress info,
	// this is sent as 0/0 (the default value).
	Progress             uint32   `protobuf:"varint,2,opt,name=progress,proto3" json:"progress,omitempty"`
	Total                uint32   `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BootStatus) Reset()         { *m = BootStatus{} }
func (m *BootStatus) String() string { return proto.CompactTextString(m) }
func (*BootStatus) ProtoMessage()    {}
func (*BootStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{6}
}
func (m *BootStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BootStatus.Unmarshal(m, b)
}
func (m *BootStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BootStatus.Marshal(b, m, deterministic)
}
func (dst *BootStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BootStatus.Merge(dst, src)
}
func (m *BootStatus) XXX_Size() int {
	return xxx_messageInfo_BootStatus.Size(m)
}
func (m *BootStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_BootStatus.DiscardUnknown(m)
}

var xxx_messageInfo_BootStatus proto.InternalMessageInfo

func (m *BootStatus) GetStage() BootStatus_Stage {
	if m != nil {
		return m.Stage
	}
	return BootStatus_HANDSHAKE
}

func (m *BootStatus) GetProgress() uint32 {
	if m != nil {
		return m.Progress
	}
	return 0
}

func (m *BootStatus) GetTotal() uint32 {
	if m != nil {
		return m.Total
	}
	return 0
}

type Pid1Config struct {
	Cwd                  string            `protobuf:"bytes,1,opt,name=cwd,proto3" json:"cwd,omitempty"`
	Language             string            `protobuf:"bytes,2,opt,name=language,proto3" json:"language,omitempty"`
	Env                  map[string]string `protobuf:"bytes,3,rep,name=env,proto3" json:"env,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Pid1Config) Reset()         { *m = Pid1Config{} }
func (m *Pid1Config) String() string { return proto.CompactTextString(m) }
func (*Pid1Config) ProtoMessage()    {}
func (*Pid1Config) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{7}
}
func (m *Pid1Config) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pid1Config.Unmarshal(m, b)
}
func (m *Pid1Config) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pid1Config.Marshal(b, m, deterministic)
}
func (dst *Pid1Config) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pid1Config.Merge(dst, src)
}
func (m *Pid1Config) XXX_Size() int {
	return xxx_messageInfo_Pid1Config.Size(m)
}
func (m *Pid1Config) XXX_DiscardUnknown() {
	xxx_messageInfo_Pid1Config.DiscardUnknown(m)
}

var xxx_messageInfo_Pid1Config proto.InternalMessageInfo

func (m *Pid1Config) GetCwd() string {
	if m != nil {
		return m.Cwd
	}
	return ""
}

func (m *Pid1Config) GetLanguage() string {
	if m != nil {
		return m.Language
	}
	return ""
}

func (m *Pid1Config) GetEnv() map[string]string {
	if m != nil {
		return m.Env
	}
	return nil
}

type FSLock struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FSLock) Reset()         { *m = FSLock{} }
func (m *FSLock) String() string { return proto.CompactTextString(m) }
func (*FSLock) ProtoMessage()    {}
func (*FSLock) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{8}
}
func (m *FSLock) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FSLock.Unmarshal(m, b)
}
func (m *FSLock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FSLock.Marshal(b, m, deterministic)
}
func (dst *FSLock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FSLock.Merge(dst, src)
}
func (m *FSLock) XXX_Size() int {
	return xxx_messageInfo_FSLock.Size(m)
}
func (m *FSLock) XXX_DiscardUnknown() {
	xxx_messageInfo_FSLock.DiscardUnknown(m)
}

var xxx_messageInfo_FSLock proto.InternalMessageInfo

func (m *FSLock) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type FSSnapshot struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FSSnapshot) Reset()         { *m = FSSnapshot{} }
func (m *FSSnapshot) String() string { return proto.CompactTextString(m) }
func (*FSSnapshot) ProtoMessage()    {}
func (*FSSnapshot) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{9}
}
func (m *FSSnapshot) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FSSnapshot.Unmarshal(m, b)
}
func (m *FSSnapshot) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FSSnapshot.Marshal(b, m, deterministic)
}
func (dst *FSSnapshot) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FSSnapshot.Merge(dst, src)
}
func (m *FSSnapshot) XXX_Size() int {
	return xxx_messageInfo_FSSnapshot.Size(m)
}
func (m *FSSnapshot) XXX_DiscardUnknown() {
	xxx_messageInfo_FSSnapshot.DiscardUnknown(m)
}

var xxx_messageInfo_FSSnapshot proto.InternalMessageInfo

type SubscribeFile struct {
	Files                []*File  `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscribeFile) Reset()         { *m = SubscribeFile{} }
func (m *SubscribeFile) String() string { return proto.CompactTextString(m) }
func (*SubscribeFile) ProtoMessage()    {}
func (*SubscribeFile) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{10}
}
func (m *SubscribeFile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeFile.Unmarshal(m, b)
}
func (m *SubscribeFile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeFile.Marshal(b, m, deterministic)
}
func (dst *SubscribeFile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeFile.Merge(dst, src)
}
func (m *SubscribeFile) XXX_Size() int {
	return xxx_messageInfo_SubscribeFile.Size(m)
}
func (m *SubscribeFile) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeFile.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeFile proto.InternalMessageInfo

func (m *SubscribeFile) GetFiles() []*File {
	if m != nil {
		return m.Files
	}
	return nil
}

type FileEvent struct {
	File *File `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	// when the Op is a Move dest is set to the destination of the move.
	Dest                 *File        `protobuf:"bytes,3,opt,name=dest,proto3" json:"dest,omitempty"`
	Op                   FileEvent_Op `protobuf:"varint,2,opt,name=op,proto3,enum=api.FileEvent_Op" json:"op,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *FileEvent) Reset()         { *m = FileEvent{} }
func (m *FileEvent) String() string { return proto.CompactTextString(m) }
func (*FileEvent) ProtoMessage()    {}
func (*FileEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{11}
}
func (m *FileEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileEvent.Unmarshal(m, b)
}
func (m *FileEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileEvent.Marshal(b, m, deterministic)
}
func (dst *FileEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileEvent.Merge(dst, src)
}
func (m *FileEvent) XXX_Size() int {
	return xxx_messageInfo_FileEvent.Size(m)
}
func (m *FileEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_FileEvent.DiscardUnknown(m)
}

var xxx_messageInfo_FileEvent proto.InternalMessageInfo

func (m *FileEvent) GetFile() *File {
	if m != nil {
		return m.File
	}
	return nil
}

func (m *FileEvent) GetDest() *File {
	if m != nil {
		return m.Dest
	}
	return nil
}

func (m *FileEvent) GetOp() FileEvent_Op {
	if m != nil {
		return m.Op
	}
	return FileEvent_Create
}

type Flush struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Flush) Reset()         { *m = Flush{} }
func (m *Flush) String() string { return proto.CompactTextString(m) }
func (*Flush) ProtoMessage()    {}
func (*Flush) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{12}
}
func (m *Flush) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Flush.Unmarshal(m, b)
}
func (m *Flush) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Flush.Marshal(b, m, deterministic)
}
func (dst *Flush) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Flush.Merge(dst, src)
}
func (m *Flush) XXX_Size() int {
	return xxx_messageInfo_Flush.Size(m)
}
func (m *Flush) XXX_DiscardUnknown() {
	xxx_messageInfo_Flush.DiscardUnknown(m)
}

var xxx_messageInfo_Flush proto.InternalMessageInfo

type OTLinkFile struct {
	File                 *File    `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	HighConsistency      bool     `protobuf:"varint,2,opt,name=highConsistency,proto3" json:"highConsistency,omitempty"`
	UseModTime           bool     `protobuf:"varint,3,opt,name=useModTime,proto3" json:"useModTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OTLinkFile) Reset()         { *m = OTLinkFile{} }
func (m *OTLinkFile) String() string { return proto.CompactTextString(m) }
func (*OTLinkFile) ProtoMessage()    {}
func (*OTLinkFile) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{13}
}
func (m *OTLinkFile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OTLinkFile.Unmarshal(m, b)
}
func (m *OTLinkFile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OTLinkFile.Marshal(b, m, deterministic)
}
func (dst *OTLinkFile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OTLinkFile.Merge(dst, src)
}
func (m *OTLinkFile) XXX_Size() int {
	return xxx_messageInfo_OTLinkFile.Size(m)
}
func (m *OTLinkFile) XXX_DiscardUnknown() {
	xxx_messageInfo_OTLinkFile.DiscardUnknown(m)
}

var xxx_messageInfo_OTLinkFile proto.InternalMessageInfo

func (m *OTLinkFile) GetFile() *File {
	if m != nil {
		return m.File
	}
	return nil
}

func (m *OTLinkFile) GetHighConsistency() bool {
	if m != nil {
		return m.HighConsistency
	}
	return false
}

func (m *OTLinkFile) GetUseModTime() bool {
	if m != nil {
		return m.UseModTime
	}
	return false
}

type Auth struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	ContainerID          string   `protobuf:"bytes,2,opt,name=containerID,proto3" json:"containerID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Auth) Reset()         { *m = Auth{} }
func (m *Auth) String() string { return proto.CompactTextString(m) }
func (*Auth) ProtoMessage()    {}
func (*Auth) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{14}
}
func (m *Auth) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Auth.Unmarshal(m, b)
}
func (m *Auth) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Auth.Marshal(b, m, deterministic)
}
func (dst *Auth) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Auth.Merge(dst, src)
}
func (m *Auth) XXX_Size() int {
	return xxx_messageInfo_Auth.Size(m)
}
func (m *Auth) XXX_DiscardUnknown() {
	xxx_messageInfo_Auth.DiscardUnknown(m)
}

var xxx_messageInfo_Auth proto.InternalMessageInfo

func (m *Auth) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *Auth) GetContainerID() string {
	if m != nil {
		return m.ContainerID
	}
	return ""
}

type VCREntry struct {
	Timestamp            uint64             `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Direction            VCREntry_Direction `protobuf:"varint,2,opt,name=direction,proto3,enum=api.VCREntry_Direction" json:"direction,omitempty"`
	Command              *Command           `protobuf:"bytes,3,opt,name=command,proto3" json:"command,omitempty"`
	Uid                  string             `protobuf:"bytes,4,opt,name=uid,proto3" json:"uid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *VCREntry) Reset()         { *m = VCREntry{} }
func (m *VCREntry) String() string { return proto.CompactTextString(m) }
func (*VCREntry) ProtoMessage()    {}
func (*VCREntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{15}
}
func (m *VCREntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VCREntry.Unmarshal(m, b)
}
func (m *VCREntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VCREntry.Marshal(b, m, deterministic)
}
func (dst *VCREntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VCREntry.Merge(dst, src)
}
func (m *VCREntry) XXX_Size() int {
	return xxx_messageInfo_VCREntry.Size(m)
}
func (m *VCREntry) XXX_DiscardUnknown() {
	xxx_messageInfo_VCREntry.DiscardUnknown(m)
}

var xxx_messageInfo_VCREntry proto.InternalMessageInfo

func (m *VCREntry) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *VCREntry) GetDirection() VCREntry_Direction {
	if m != nil {
		return m.Direction
	}
	return VCREntry_IN
}

func (m *VCREntry) GetCommand() *Command {
	if m != nil {
		return m.Command
	}
	return nil
}

func (m *VCREntry) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

type StartVCR struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartVCR) Reset()         { *m = StartVCR{} }
func (m *StartVCR) String() string { return proto.CompactTextString(m) }
func (*StartVCR) ProtoMessage()    {}
func (*StartVCR) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{16}
}
func (m *StartVCR) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartVCR.Unmarshal(m, b)
}
func (m *StartVCR) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartVCR.Marshal(b, m, deterministic)
}
func (dst *StartVCR) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartVCR.Merge(dst, src)
}
func (m *StartVCR) XXX_Size() int {
	return xxx_messageInfo_StartVCR.Size(m)
}
func (m *StartVCR) XXX_DiscardUnknown() {
	xxx_messageInfo_StartVCR.DiscardUnknown(m)
}

var xxx_messageInfo_StartVCR proto.InternalMessageInfo

type ReadVCR struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadVCR) Reset()         { *m = ReadVCR{} }
func (m *ReadVCR) String() string { return proto.CompactTextString(m) }
func (*ReadVCR) ProtoMessage()    {}
func (*ReadVCR) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{17}
}
func (m *ReadVCR) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadVCR.Unmarshal(m, b)
}
func (m *ReadVCR) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadVCR.Marshal(b, m, deterministic)
}
func (dst *ReadVCR) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadVCR.Merge(dst, src)
}
func (m *ReadVCR) XXX_Size() int {
	return xxx_messageInfo_ReadVCR.Size(m)
}
func (m *ReadVCR) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadVCR.DiscardUnknown(m)
}

var xxx_messageInfo_ReadVCR proto.InternalMessageInfo

type VCRLog struct {
	Log                  []*VCREntry `protobuf:"bytes,1,rep,name=log,proto3" json:"log,omitempty"`
	Logfile              *File       `protobuf:"bytes,2,opt,name=logfile,proto3" json:"logfile,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *VCRLog) Reset()         { *m = VCRLog{} }
func (m *VCRLog) String() string { return proto.CompactTextString(m) }
func (*VCRLog) ProtoMessage()    {}
func (*VCRLog) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{18}
}
func (m *VCRLog) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VCRLog.Unmarshal(m, b)
}
func (m *VCRLog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VCRLog.Marshal(b, m, deterministic)
}
func (dst *VCRLog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VCRLog.Merge(dst, src)
}
func (m *VCRLog) XXX_Size() int {
	return xxx_messageInfo_VCRLog.Size(m)
}
func (m *VCRLog) XXX_DiscardUnknown() {
	xxx_messageInfo_VCRLog.DiscardUnknown(m)
}

var xxx_messageInfo_VCRLog proto.InternalMessageInfo

func (m *VCRLog) GetLog() []*VCREntry {
	if m != nil {
		return m.Log
	}
	return nil
}

func (m *VCRLog) GetLogfile() *File {
	if m != nil {
		return m.Logfile
	}
	return nil
}

type ExecInfo struct {
	Command              []string `protobuf:"bytes,1,rep,name=command,proto3" json:"command,omitempty"`
	Reason               string   `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExecInfo) Reset()         { *m = ExecInfo{} }
func (m *ExecInfo) String() string { return proto.CompactTextString(m) }
func (*ExecInfo) ProtoMessage()    {}
func (*ExecInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{19}
}
func (m *ExecInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecInfo.Unmarshal(m, b)
}
func (m *ExecInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecInfo.Marshal(b, m, deterministic)
}
func (dst *ExecInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecInfo.Merge(dst, src)
}
func (m *ExecInfo) XXX_Size() int {
	return xxx_messageInfo_ExecInfo.Size(m)
}
func (m *ExecInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ExecInfo proto.InternalMessageInfo

func (m *ExecInfo) GetCommand() []string {
	if m != nil {
		return m.Command
	}
	return nil
}

func (m *ExecInfo) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

type Debug struct {
	Text                 string   `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Debug) Reset()         { *m = Debug{} }
func (m *Debug) String() string { return proto.CompactTextString(m) }
func (*Debug) ProtoMessage()    {}
func (*Debug) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{20}
}
func (m *Debug) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Debug.Unmarshal(m, b)
}
func (m *Debug) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Debug.Marshal(b, m, deterministic)
}
func (dst *Debug) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Debug.Merge(dst, src)
}
func (m *Debug) XXX_Size() int {
	return xxx_messageInfo_Debug.Size(m)
}
func (m *Debug) XXX_DiscardUnknown() {
	xxx_messageInfo_Debug.DiscardUnknown(m)
}

var xxx_messageInfo_Debug proto.InternalMessageInfo

func (m *Debug) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

type FileAuthReq struct {
	File                 *File          `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	Method               FileAuthMethod `protobuf:"varint,2,opt,name=method,proto3,enum=api.FileAuthMethod" json:"method,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *FileAuthReq) Reset()         { *m = FileAuthReq{} }
func (m *FileAuthReq) String() string { return proto.CompactTextString(m) }
func (*FileAuthReq) ProtoMessage()    {}
func (*FileAuthReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{21}
}
func (m *FileAuthReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileAuthReq.Unmarshal(m, b)
}
func (m *FileAuthReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileAuthReq.Marshal(b, m, deterministic)
}
func (dst *FileAuthReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileAuthReq.Merge(dst, src)
}
func (m *FileAuthReq) XXX_Size() int {
	return xxx_messageInfo_FileAuthReq.Size(m)
}
func (m *FileAuthReq) XXX_DiscardUnknown() {
	xxx_messageInfo_FileAuthReq.DiscardUnknown(m)
}

var xxx_messageInfo_FileAuthReq proto.InternalMessageInfo

func (m *FileAuthReq) GetFile() *File {
	if m != nil {
		return m.File
	}
	return nil
}

func (m *FileAuthReq) GetMethod() FileAuthMethod {
	if m != nil {
		return m.Method
	}
	return FileAuthMethod_GET
}

type MultiFileAuthRes struct {
	Put                  *FileAuthRes `protobuf:"bytes,1,opt,name=put,proto3" json:"put,omitempty"`
	Del                  *FileAuthRes `protobuf:"bytes,2,opt,name=del,proto3" json:"del,omitempty"`
	Get                  *FileAuthRes `protobuf:"bytes,3,opt,name=get,proto3" json:"get,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *MultiFileAuthRes) Reset()         { *m = MultiFileAuthRes{} }
func (m *MultiFileAuthRes) String() string { return proto.CompactTextString(m) }
func (*MultiFileAuthRes) ProtoMessage()    {}
func (*MultiFileAuthRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{22}
}
func (m *MultiFileAuthRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MultiFileAuthRes.Unmarshal(m, b)
}
func (m *MultiFileAuthRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MultiFileAuthRes.Marshal(b, m, deterministic)
}
func (dst *MultiFileAuthRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MultiFileAuthRes.Merge(dst, src)
}
func (m *MultiFileAuthRes) XXX_Size() int {
	return xxx_messageInfo_MultiFileAuthRes.Size(m)
}
func (m *MultiFileAuthRes) XXX_DiscardUnknown() {
	xxx_messageInfo_MultiFileAuthRes.DiscardUnknown(m)
}

var xxx_messageInfo_MultiFileAuthRes proto.InternalMessageInfo

func (m *MultiFileAuthRes) GetPut() *FileAuthRes {
	if m != nil {
		return m.Put
	}
	return nil
}

func (m *MultiFileAuthRes) GetDel() *FileAuthRes {
	if m != nil {
		return m.Del
	}
	return nil
}

func (m *MultiFileAuthRes) GetGet() *FileAuthRes {
	if m != nil {
		return m.Get
	}
	return nil
}

type FileAuthRes struct {
	File                 *File          `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	Url                  string         `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Method               FileAuthMethod `protobuf:"varint,3,opt,name=method,proto3,enum=api.FileAuthMethod" json:"method,omitempty"`
	Expire               int64          `protobuf:"varint,4,opt,name=expire,proto3" json:"expire,omitempty"`
	Error                string         `protobuf:"bytes,5,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *FileAuthRes) Reset()         { *m = FileAuthRes{} }
func (m *FileAuthRes) String() string { return proto.CompactTextString(m) }
func (*FileAuthRes) ProtoMessage()    {}
func (*FileAuthRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{23}
}
func (m *FileAuthRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileAuthRes.Unmarshal(m, b)
}
func (m *FileAuthRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileAuthRes.Marshal(b, m, deterministic)
}
func (dst *FileAuthRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileAuthRes.Merge(dst, src)
}
func (m *FileAuthRes) XXX_Size() int {
	return xxx_messageInfo_FileAuthRes.Size(m)
}
func (m *FileAuthRes) XXX_DiscardUnknown() {
	xxx_messageInfo_FileAuthRes.DiscardUnknown(m)
}

var xxx_messageInfo_FileAuthRes proto.InternalMessageInfo

func (m *FileAuthRes) GetFile() *File {
	if m != nil {
		return m.File
	}
	return nil
}

func (m *FileAuthRes) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *FileAuthRes) GetMethod() FileAuthMethod {
	if m != nil {
		return m.Method
	}
	return FileAuthMethod_GET
}

func (m *FileAuthRes) GetExpire() int64 {
	if m != nil {
		return m.Expire
	}
	return 0
}

func (m *FileAuthRes) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type ListObjects struct {
	Prefix               string   `protobuf:"bytes,1,opt,name=prefix,proto3" json:"prefix,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListObjects) Reset()         { *m = ListObjects{} }
func (m *ListObjects) String() string { return proto.CompactTextString(m) }
func (*ListObjects) ProtoMessage()    {}
func (*ListObjects) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{24}
}
func (m *ListObjects) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListObjects.Unmarshal(m, b)
}
func (m *ListObjects) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListObjects.Marshal(b, m, deterministic)
}
func (dst *ListObjects) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListObjects.Merge(dst, src)
}
func (m *ListObjects) XXX_Size() int {
	return xxx_messageInfo_ListObjects.Size(m)
}
func (m *ListObjects) XXX_DiscardUnknown() {
	xxx_messageInfo_ListObjects.DiscardUnknown(m)
}

var xxx_messageInfo_ListObjects proto.InternalMessageInfo

func (m *ListObjects) GetPrefix() string {
	if m != nil {
		return m.Prefix
	}
	return ""
}

type ListObjectsResp struct {
	Objects              []string `protobuf:"bytes,1,rep,name=objects,proto3" json:"objects,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListObjectsResp) Reset()         { *m = ListObjectsResp{} }
func (m *ListObjectsResp) String() string { return proto.CompactTextString(m) }
func (*ListObjectsResp) ProtoMessage()    {}
func (*ListObjectsResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{25}
}
func (m *ListObjectsResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListObjectsResp.Unmarshal(m, b)
}
func (m *ListObjectsResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListObjectsResp.Marshal(b, m, deterministic)
}
func (dst *ListObjectsResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListObjectsResp.Merge(dst, src)
}
func (m *ListObjectsResp) XXX_Size() int {
	return xxx_messageInfo_ListObjectsResp.Size(m)
}
func (m *ListObjectsResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ListObjectsResp.DiscardUnknown(m)
}

var xxx_messageInfo_ListObjectsResp proto.InternalMessageInfo

func (m *ListObjectsResp) GetObjects() []string {
	if m != nil {
		return m.Objects
	}
	return nil
}

type Disconnect struct {
	Error                string   `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Disconnect) Reset()         { *m = Disconnect{} }
func (m *Disconnect) String() string { return proto.CompactTextString(m) }
func (*Disconnect) ProtoMessage()    {}
func (*Disconnect) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{26}
}
func (m *Disconnect) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Disconnect.Unmarshal(m, b)
}
func (m *Disconnect) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Disconnect.Marshal(b, m, deterministic)
}
func (dst *Disconnect) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Disconnect.Merge(dst, src)
}
func (m *Disconnect) XXX_Size() int {
	return xxx_messageInfo_Disconnect.Size(m)
}
func (m *Disconnect) XXX_DiscardUnknown() {
	xxx_messageInfo_Disconnect.DiscardUnknown(m)
}

var xxx_messageInfo_Disconnect proto.InternalMessageInfo

func (m *Disconnect) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type Send struct {
	Buff                 []byte   `protobuf:"bytes,1,opt,name=buff,proto3" json:"buff,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Send) Reset()         { *m = Send{} }
func (m *Send) String() string { return proto.CompactTextString(m) }
func (*Send) ProtoMessage()    {}
func (*Send) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{27}
}
func (m *Send) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Send.Unmarshal(m, b)
}
func (m *Send) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Send.Marshal(b, m, deterministic)
}
func (dst *Send) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Send.Merge(dst, src)
}
func (m *Send) XXX_Size() int {
	return xxx_messageInfo_Send.Size(m)
}
func (m *Send) XXX_DiscardUnknown() {
	xxx_messageInfo_Send.DiscardUnknown(m)
}

var xxx_messageInfo_Send proto.InternalMessageInfo

func (m *Send) GetBuff() []byte {
	if m != nil {
		return m.Buff
	}
	return nil
}

type Recv struct {
	Buff                 []byte   `protobuf:"bytes,1,opt,name=buff,proto3" json:"buff,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Recv) Reset()         { *m = Recv{} }
func (m *Recv) String() string { return proto.CompactTextString(m) }
func (*Recv) ProtoMessage()    {}
func (*Recv) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{28}
}
func (m *Recv) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Recv.Unmarshal(m, b)
}
func (m *Recv) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Recv.Marshal(b, m, deterministic)
}
func (dst *Recv) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Recv.Merge(dst, src)
}
func (m *Recv) XXX_Size() int {
	return xxx_messageInfo_Recv.Size(m)
}
func (m *Recv) XXX_DiscardUnknown() {
	xxx_messageInfo_Recv.DiscardUnknown(m)
}

var xxx_messageInfo_Recv proto.InternalMessageInfo

func (m *Recv) GetBuff() []byte {
	if m != nil {
		return m.Buff
	}
	return nil
}

type Connect struct {
	Proto                string   `protobuf:"bytes,1,opt,name=proto,proto3" json:"proto,omitempty"`
	Addr                 string   `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Connect) Reset()         { *m = Connect{} }
func (m *Connect) String() string { return proto.CompactTextString(m) }
func (*Connect) ProtoMessage()    {}
func (*Connect) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{29}
}
func (m *Connect) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Connect.Unmarshal(m, b)
}
func (m *Connect) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Connect.Marshal(b, m, deterministic)
}
func (dst *Connect) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Connect.Merge(dst, src)
}
func (m *Connect) XXX_Size() int {
	return xxx_messageInfo_Connect.Size(m)
}
func (m *Connect) XXX_DiscardUnknown() {
	xxx_messageInfo_Connect.DiscardUnknown(m)
}

var xxx_messageInfo_Connect proto.InternalMessageInfo

func (m *Connect) GetProto() string {
	if m != nil {
		return m.Proto
	}
	return ""
}

func (m *Connect) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

type Hint struct {
	Text                 string   `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Hint) Reset()         { *m = Hint{} }
func (m *Hint) String() string { return proto.CompactTextString(m) }
func (*Hint) ProtoMessage()    {}
func (*Hint) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{30}
}
func (m *Hint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Hint.Unmarshal(m, b)
}
func (m *Hint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Hint.Marshal(b, m, deterministic)
}
func (dst *Hint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Hint.Merge(dst, src)
}
func (m *Hint) XXX_Size() int {
	return xxx_messageInfo_Hint.Size(m)
}
func (m *Hint) XXX_DiscardUnknown() {
	xxx_messageInfo_Hint.DiscardUnknown(m)
}

var xxx_messageInfo_Hint proto.InternalMessageInfo

func (m *Hint) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

type Ping struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ping) Reset()         { *m = Ping{} }
func (m *Ping) String() string { return proto.CompactTextString(m) }
func (*Ping) ProtoMessage()    {}
func (*Ping) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{31}
}
func (m *Ping) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ping.Unmarshal(m, b)
}
func (m *Ping) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ping.Marshal(b, m, deterministic)
}
func (dst *Ping) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ping.Merge(dst, src)
}
func (m *Ping) XXX_Size() int {
	return xxx_messageInfo_Ping.Size(m)
}
func (m *Ping) XXX_DiscardUnknown() {
	xxx_messageInfo_Ping.DiscardUnknown(m)
}

var xxx_messageInfo_Ping proto.InternalMessageInfo

type Pong struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Pong) Reset()         { *m = Pong{} }
func (m *Pong) String() string { return proto.CompactTextString(m) }
func (*Pong) ProtoMessage()    {}
func (*Pong) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{32}
}
func (m *Pong) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pong.Unmarshal(m, b)
}
func (m *Pong) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pong.Marshal(b, m, deterministic)
}
func (dst *Pong) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pong.Merge(dst, src)
}
func (m *Pong) XXX_Size() int {
	return xxx_messageInfo_Pong.Size(m)
}
func (m *Pong) XXX_DiscardUnknown() {
	xxx_messageInfo_Pong.DiscardUnknown(m)
}

var xxx_messageInfo_Pong proto.InternalMessageInfo

type Hello struct {
	Userid               uint32   `protobuf:"varint,1,opt,name=userid,proto3" json:"userid,omitempty"`
	Username             string   `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Token                string   `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Hello) Reset()         { *m = Hello{} }
func (m *Hello) String() string { return proto.CompactTextString(m) }
func (*Hello) ProtoMessage()    {}
func (*Hello) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{33}
}
func (m *Hello) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Hello.Unmarshal(m, b)
}
func (m *Hello) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Hello.Marshal(b, m, deterministic)
}
func (dst *Hello) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Hello.Merge(dst, src)
}
func (m *Hello) XXX_Size() int {
	return xxx_messageInfo_Hello.Size(m)
}
func (m *Hello) XXX_DiscardUnknown() {
	xxx_messageInfo_Hello.DiscardUnknown(m)
}

var xxx_messageInfo_Hello proto.InternalMessageInfo

func (m *Hello) GetUserid() uint32 {
	if m != nil {
		return m.Userid
	}
	return 0
}

func (m *Hello) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *Hello) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type Goodbye struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Goodbye) Reset()         { *m = Goodbye{} }
func (m *Goodbye) String() string { return proto.CompactTextString(m) }
func (*Goodbye) ProtoMessage()    {}
func (*Goodbye) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{34}
}
func (m *Goodbye) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Goodbye.Unmarshal(m, b)
}
func (m *Goodbye) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Goodbye.Marshal(b, m, deterministic)
}
func (dst *Goodbye) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Goodbye.Merge(dst, src)
}
func (m *Goodbye) XXX_Size() int {
	return xxx_messageInfo_Goodbye.Size(m)
}
func (m *Goodbye) XXX_DiscardUnknown() {
	xxx_messageInfo_Goodbye.DiscardUnknown(m)
}

var xxx_messageInfo_Goodbye proto.InternalMessageInfo

type CheckChanges struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckChanges) Reset()         { *m = CheckChanges{} }
func (m *CheckChanges) String() string { return proto.CompactTextString(m) }
func (*CheckChanges) ProtoMessage()    {}
func (*CheckChanges) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{35}
}
func (m *CheckChanges) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckChanges.Unmarshal(m, b)
}
func (m *CheckChanges) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckChanges.Marshal(b, m, deterministic)
}
func (dst *CheckChanges) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckChanges.Merge(dst, src)
}
func (m *CheckChanges) XXX_Size() int {
	return xxx_messageInfo_CheckChanges.Size(m)
}
func (m *CheckChanges) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckChanges.DiscardUnknown(m)
}

var xxx_messageInfo_CheckChanges proto.InternalMessageInfo

type EnsurePackages struct {
	Install              bool     `protobuf:"varint,1,opt,name=install,proto3" json:"install,omitempty"`
	File                 *File    `protobuf:"bytes,2,opt,name=file,proto3" json:"file,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EnsurePackages) Reset()         { *m = EnsurePackages{} }
func (m *EnsurePackages) String() string { return proto.CompactTextString(m) }
func (*EnsurePackages) ProtoMessage()    {}
func (*EnsurePackages) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{36}
}
func (m *EnsurePackages) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnsurePackages.Unmarshal(m, b)
}
func (m *EnsurePackages) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnsurePackages.Marshal(b, m, deterministic)
}
func (dst *EnsurePackages) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnsurePackages.Merge(dst, src)
}
func (m *EnsurePackages) XXX_Size() int {
	return xxx_messageInfo_EnsurePackages.Size(m)
}
func (m *EnsurePackages) XXX_DiscardUnknown() {
	xxx_messageInfo_EnsurePackages.DiscardUnknown(m)
}

var xxx_messageInfo_EnsurePackages proto.InternalMessageInfo

func (m *EnsurePackages) GetInstall() bool {
	if m != nil {
		return m.Install
	}
	return false
}

func (m *EnsurePackages) GetFile() *File {
	if m != nil {
		return m.File
	}
	return nil
}

type Start struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Start) Reset()         { *m = Start{} }
func (m *Start) String() string { return proto.CompactTextString(m) }
func (*Start) ProtoMessage()    {}
func (*Start) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{37}
}
func (m *Start) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Start.Unmarshal(m, b)
}
func (m *Start) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Start.Marshal(b, m, deterministic)
}
func (dst *Start) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Start.Merge(dst, src)
}
func (m *Start) XXX_Size() int {
	return xxx_messageInfo_Start.Size(m)
}
func (m *Start) XXX_DiscardUnknown() {
	xxx_messageInfo_Start.DiscardUnknown(m)
}

var xxx_messageInfo_Start proto.InternalMessageInfo

type DebugStatus struct {
	Done                 bool          `protobuf:"varint,1,opt,name=done,proto3" json:"done,omitempty"`
	Stack                []*StackFrame `protobuf:"bytes,2,rep,name=stack,proto3" json:"stack,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *DebugStatus) Reset()         { *m = DebugStatus{} }
func (m *DebugStatus) String() string { return proto.CompactTextString(m) }
func (*DebugStatus) ProtoMessage()    {}
func (*DebugStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{38}
}
func (m *DebugStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DebugStatus.Unmarshal(m, b)
}
func (m *DebugStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DebugStatus.Marshal(b, m, deterministic)
}
func (dst *DebugStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DebugStatus.Merge(dst, src)
}
func (m *DebugStatus) XXX_Size() int {
	return xxx_messageInfo_DebugStatus.Size(m)
}
func (m *DebugStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_DebugStatus.DiscardUnknown(m)
}

var xxx_messageInfo_DebugStatus proto.InternalMessageInfo

func (m *DebugStatus) GetDone() bool {
	if m != nil {
		return m.Done
	}
	return false
}

func (m *DebugStatus) GetStack() []*StackFrame {
	if m != nil {
		return m.Stack
	}
	return nil
}

type StackFrame struct {
	Function             string   `protobuf:"bytes,1,opt,name=function,proto3" json:"function,omitempty"`
	Line                 uint32   `protobuf:"varint,2,opt,name=line,proto3" json:"line,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StackFrame) Reset()         { *m = StackFrame{} }
func (m *StackFrame) String() string { return proto.CompactTextString(m) }
func (*StackFrame) ProtoMessage()    {}
func (*StackFrame) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{39}
}
func (m *StackFrame) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StackFrame.Unmarshal(m, b)
}
func (m *StackFrame) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StackFrame.Marshal(b, m, deterministic)
}
func (dst *StackFrame) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StackFrame.Merge(dst, src)
}
func (m *StackFrame) XXX_Size() int {
	return xxx_messageInfo_StackFrame.Size(m)
}
func (m *StackFrame) XXX_DiscardUnknown() {
	xxx_messageInfo_StackFrame.DiscardUnknown(m)
}

var xxx_messageInfo_StackFrame proto.InternalMessageInfo

func (m *StackFrame) GetFunction() string {
	if m != nil {
		return m.Function
	}
	return ""
}

func (m *StackFrame) GetLine() uint32 {
	if m != nil {
		return m.Line
	}
	return 0
}

type ContainedTest struct {
	Suite                *File    `protobuf:"bytes,1,opt,name=suite,proto3" json:"suite,omitempty"`
	Project              []*File  `protobuf:"bytes,2,rep,name=project,proto3" json:"project,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContainedTest) Reset()         { *m = ContainedTest{} }
func (m *ContainedTest) String() string { return proto.CompactTextString(m) }
func (*ContainedTest) ProtoMessage()    {}
func (*ContainedTest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{40}
}
func (m *ContainedTest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainedTest.Unmarshal(m, b)
}
func (m *ContainedTest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainedTest.Marshal(b, m, deterministic)
}
func (dst *ContainedTest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainedTest.Merge(dst, src)
}
func (m *ContainedTest) XXX_Size() int {
	return xxx_messageInfo_ContainedTest.Size(m)
}
func (m *ContainedTest) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainedTest.DiscardUnknown(m)
}

var xxx_messageInfo_ContainedTest proto.InternalMessageInfo

func (m *ContainedTest) GetSuite() *File {
	if m != nil {
		return m.Suite
	}
	return nil
}

func (m *ContainedTest) GetProject() []*File {
	if m != nil {
		return m.Project
	}
	return nil
}

type TestResult struct {
	Passed               bool           `protobuf:"varint,1,opt,name=passed,proto3" json:"passed,omitempty"`
	Stderr               string         `protobuf:"bytes,2,opt,name=stderr,proto3" json:"stderr,omitempty"`
	Fails                []*TestFailure `protobuf:"bytes,3,rep,name=fails,proto3" json:"fails,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *TestResult) Reset()         { *m = TestResult{} }
func (m *TestResult) String() string { return proto.CompactTextString(m) }
func (*TestResult) ProtoMessage()    {}
func (*TestResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{41}
}
func (m *TestResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestResult.Unmarshal(m, b)
}
func (m *TestResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestResult.Marshal(b, m, deterministic)
}
func (dst *TestResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestResult.Merge(dst, src)
}
func (m *TestResult) XXX_Size() int {
	return xxx_messageInfo_TestResult.Size(m)
}
func (m *TestResult) XXX_DiscardUnknown() {
	xxx_messageInfo_TestResult.DiscardUnknown(m)
}

var xxx_messageInfo_TestResult proto.InternalMessageInfo

func (m *TestResult) GetPassed() bool {
	if m != nil {
		return m.Passed
	}
	return false
}

func (m *TestResult) GetStderr() string {
	if m != nil {
		return m.Stderr
	}
	return ""
}

func (m *TestResult) GetFails() []*TestFailure {
	if m != nil {
		return m.Fails
	}
	return nil
}

type TestFailure struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Trace                string   `protobuf:"bytes,2,opt,name=trace,proto3" json:"trace,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestFailure) Reset()         { *m = TestFailure{} }
func (m *TestFailure) String() string { return proto.CompactTextString(m) }
func (*TestFailure) ProtoMessage()    {}
func (*TestFailure) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{42}
}
func (m *TestFailure) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestFailure.Unmarshal(m, b)
}
func (m *TestFailure) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestFailure.Marshal(b, m, deterministic)
}
func (dst *TestFailure) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestFailure.Merge(dst, src)
}
func (m *TestFailure) XXX_Size() int {
	return xxx_messageInfo_TestFailure.Size(m)
}
func (m *TestFailure) XXX_DiscardUnknown() {
	xxx_messageInfo_TestFailure.DiscardUnknown(m)
}

var xxx_messageInfo_TestFailure proto.InternalMessageInfo

func (m *TestFailure) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TestFailure) GetTrace() string {
	if m != nil {
		return m.Trace
	}
	return ""
}

type ResizeTerm struct {
	Rows                 uint32   `protobuf:"varint,1,opt,name=rows,proto3" json:"rows,omitempty"`
	Cols                 uint32   `protobuf:"varint,2,opt,name=cols,proto3" json:"cols,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResizeTerm) Reset()         { *m = ResizeTerm{} }
func (m *ResizeTerm) String() string { return proto.CompactTextString(m) }
func (*ResizeTerm) ProtoMessage()    {}
func (*ResizeTerm) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{43}
}
func (m *ResizeTerm) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResizeTerm.Unmarshal(m, b)
}
func (m *ResizeTerm) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResizeTerm.Marshal(b, m, deterministic)
}
func (dst *ResizeTerm) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResizeTerm.Merge(dst, src)
}
func (m *ResizeTerm) XXX_Size() int {
	return xxx_messageInfo_ResizeTerm.Size(m)
}
func (m *ResizeTerm) XXX_DiscardUnknown() {
	xxx_messageInfo_ResizeTerm.DiscardUnknown(m)
}

var xxx_messageInfo_ResizeTerm proto.InternalMessageInfo

func (m *ResizeTerm) GetRows() uint32 {
	if m != nil {
		return m.Rows
	}
	return 0
}

func (m *ResizeTerm) GetCols() uint32 {
	if m != nil {
		return m.Cols
	}
	return 0
}

type SaneTerm struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SaneTerm) Reset()         { *m = SaneTerm{} }
func (m *SaneTerm) String() string { return proto.CompactTextString(m) }
func (*SaneTerm) ProtoMessage()    {}
func (*SaneTerm) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{44}
}
func (m *SaneTerm) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SaneTerm.Unmarshal(m, b)
}
func (m *SaneTerm) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SaneTerm.Marshal(b, m, deterministic)
}
func (dst *SaneTerm) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SaneTerm.Merge(dst, src)
}
func (m *SaneTerm) XXX_Size() int {
	return xxx_messageInfo_SaneTerm.Size(m)
}
func (m *SaneTerm) XXX_DiscardUnknown() {
	xxx_messageInfo_SaneTerm.DiscardUnknown(m)
}

var xxx_messageInfo_SaneTerm proto.InternalMessageInfo

type LintResults struct {
	Results              []*LintResult `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *LintResults) Reset()         { *m = LintResults{} }
func (m *LintResults) String() string { return proto.CompactTextString(m) }
func (*LintResults) ProtoMessage()    {}
func (*LintResults) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{45}
}
func (m *LintResults) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LintResults.Unmarshal(m, b)
}
func (m *LintResults) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LintResults.Marshal(b, m, deterministic)
}
func (dst *LintResults) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LintResults.Merge(dst, src)
}
func (m *LintResults) XXX_Size() int {
	return xxx_messageInfo_LintResults.Size(m)
}
func (m *LintResults) XXX_DiscardUnknown() {
	xxx_messageInfo_LintResults.DiscardUnknown(m)
}

var xxx_messageInfo_LintResults proto.InternalMessageInfo

func (m *LintResults) GetResults() []*LintResult {
	if m != nil {
		return m.Results
	}
	return nil
}

type LintResult struct {
	Text                 string   `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Row                  int32    `protobuf:"varint,2,opt,name=row,proto3" json:"row,omitempty"`
	Column               int32    `protobuf:"varint,3,opt,name=column,proto3" json:"column,omitempty"`
	Type                 string   `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LintResult) Reset()         { *m = LintResult{} }
func (m *LintResult) String() string { return proto.CompactTextString(m) }
func (*LintResult) ProtoMessage()    {}
func (*LintResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{46}
}
func (m *LintResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LintResult.Unmarshal(m, b)
}
func (m *LintResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LintResult.Marshal(b, m, deterministic)
}
func (dst *LintResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LintResult.Merge(dst, src)
}
func (m *LintResult) XXX_Size() int {
	return xxx_messageInfo_LintResult.Size(m)
}
func (m *LintResult) XXX_DiscardUnknown() {
	xxx_messageInfo_LintResult.DiscardUnknown(m)
}

var xxx_messageInfo_LintResult proto.InternalMessageInfo

func (m *LintResult) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *LintResult) GetRow() int32 {
	if m != nil {
		return m.Row
	}
	return 0
}

func (m *LintResult) GetColumn() int32 {
	if m != nil {
		return m.Column
	}
	return 0
}

func (m *LintResult) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type OK struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OK) Reset()         { *m = OK{} }
func (m *OK) String() string { return proto.CompactTextString(m) }
func (*OK) ProtoMessage()    {}
func (*OK) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{47}
}
func (m *OK) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OK.Unmarshal(m, b)
}
func (m *OK) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OK.Marshal(b, m, deterministic)
}
func (dst *OK) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OK.Merge(dst, src)
}
func (m *OK) XXX_Size() int {
	return xxx_messageInfo_OK.Size(m)
}
func (m *OK) XXX_DiscardUnknown() {
	xxx_messageInfo_OK.DiscardUnknown(m)
}

var xxx_messageInfo_OK proto.InternalMessageInfo

type Move struct {
	OldPath              string   `protobuf:"bytes,1,opt,name=oldPath,proto3" json:"oldPath,omitempty"`
	NewPath              string   `protobuf:"bytes,2,opt,name=newPath,proto3" json:"newPath,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Move) Reset()         { *m = Move{} }
func (m *Move) String() string { return proto.CompactTextString(m) }
func (*Move) ProtoMessage()    {}
func (*Move) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{48}
}
func (m *Move) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Move.Unmarshal(m, b)
}
func (m *Move) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Move.Marshal(b, m, deterministic)
}
func (dst *Move) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Move.Merge(dst, src)
}
func (m *Move) XXX_Size() int {
	return xxx_messageInfo_Move.Size(m)
}
func (m *Move) XXX_DiscardUnknown() {
	xxx_messageInfo_Move.DiscardUnknown(m)
}

var xxx_messageInfo_Move proto.InternalMessageInfo

func (m *Move) GetOldPath() string {
	if m != nil {
		return m.OldPath
	}
	return ""
}

func (m *Move) GetNewPath() string {
	if m != nil {
		return m.NewPath
	}
	return ""
}

type Files struct {
	Files                []*File  `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Files) Reset()         { *m = Files{} }
func (m *Files) String() string { return proto.CompactTextString(m) }
func (*Files) ProtoMessage()    {}
func (*Files) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{49}
}
func (m *Files) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Files.Unmarshal(m, b)
}
func (m *Files) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Files.Marshal(b, m, deterministic)
}
func (dst *Files) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Files.Merge(dst, src)
}
func (m *Files) XXX_Size() int {
	return xxx_messageInfo_Files.Size(m)
}
func (m *Files) XXX_DiscardUnknown() {
	xxx_messageInfo_Files.DiscardUnknown(m)
}

var xxx_messageInfo_Files proto.InternalMessageInfo

func (m *Files) GetFiles() []*File {
	if m != nil {
		return m.Files
	}
	return nil
}

type File struct {
	Path                 string    `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Type                 File_Type `protobuf:"varint,2,opt,name=type,proto3,enum=api.File_Type" json:"type,omitempty"`
	Content              []byte    `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *File) Reset()         { *m = File{} }
func (m *File) String() string { return proto.CompactTextString(m) }
func (*File) ProtoMessage()    {}
func (*File) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{50}
}
func (m *File) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_File.Unmarshal(m, b)
}
func (m *File) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_File.Marshal(b, m, deterministic)
}
func (dst *File) XXX_Merge(src proto.Message) {
	xxx_messageInfo_File.Merge(dst, src)
}
func (m *File) XXX_Size() int {
	return xxx_messageInfo_File.Size(m)
}
func (m *File) XXX_DiscardUnknown() {
	xxx_messageInfo_File.DiscardUnknown(m)
}

var xxx_messageInfo_File proto.InternalMessageInfo

func (m *File) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *File) GetType() File_Type {
	if m != nil {
		return m.Type
	}
	return File_REGULAR
}

func (m *File) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

type Clear struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Clear) Reset()         { *m = Clear{} }
func (m *Clear) String() string { return proto.CompactTextString(m) }
func (*Clear) ProtoMessage()    {}
func (*Clear) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{51}
}
func (m *Clear) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Clear.Unmarshal(m, b)
}
func (m *Clear) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Clear.Marshal(b, m, deterministic)
}
func (dst *Clear) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Clear.Merge(dst, src)
}
func (m *Clear) XXX_Size() int {
	return xxx_messageInfo_Clear.Size(m)
}
func (m *Clear) XXX_DiscardUnknown() {
	xxx_messageInfo_Clear.DiscardUnknown(m)
}

var xxx_messageInfo_Clear proto.InternalMessageInfo

type Toast struct {
	Text                 string   `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Toast) Reset()         { *m = Toast{} }
func (m *Toast) String() string { return proto.CompactTextString(m) }
func (*Toast) ProtoMessage()    {}
func (*Toast) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{52}
}
func (m *Toast) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Toast.Unmarshal(m, b)
}
func (m *Toast) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Toast.Marshal(b, m, deterministic)
}
func (dst *Toast) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Toast.Merge(dst, src)
}
func (m *Toast) XXX_Size() int {
	return xxx_messageInfo_Toast.Size(m)
}
func (m *Toast) XXX_DiscardUnknown() {
	xxx_messageInfo_Toast.DiscardUnknown(m)
}

var xxx_messageInfo_Toast proto.InternalMessageInfo

func (m *Toast) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

type RunMain struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RunMain) Reset()         { *m = RunMain{} }
func (m *RunMain) String() string { return proto.CompactTextString(m) }
func (*RunMain) ProtoMessage()    {}
func (*RunMain) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{53}
}
func (m *RunMain) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunMain.Unmarshal(m, b)
}
func (m *RunMain) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunMain.Marshal(b, m, deterministic)
}
func (dst *RunMain) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunMain.Merge(dst, src)
}
func (m *RunMain) XXX_Size() int {
	return xxx_messageInfo_RunMain.Size(m)
}
func (m *RunMain) XXX_DiscardUnknown() {
	xxx_messageInfo_RunMain.DiscardUnknown(m)
}

var xxx_messageInfo_RunMain proto.InternalMessageInfo

type OpenChannel struct {
	Service              string             `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	Name                 string             `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Action               OpenChannel_Action `protobuf:"varint,3,opt,name=action,proto3,enum=api.OpenChannel_Action" json:"action,omitempty"`
	Id                   int32              `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *OpenChannel) Reset()         { *m = OpenChannel{} }
func (m *OpenChannel) String() string { return proto.CompactTextString(m) }
func (*OpenChannel) ProtoMessage()    {}
func (*OpenChannel) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{54}
}
func (m *OpenChannel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpenChannel.Unmarshal(m, b)
}
func (m *OpenChannel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpenChannel.Marshal(b, m, deterministic)
}
func (dst *OpenChannel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpenChannel.Merge(dst, src)
}
func (m *OpenChannel) XXX_Size() int {
	return xxx_messageInfo_OpenChannel.Size(m)
}
func (m *OpenChannel) XXX_DiscardUnknown() {
	xxx_messageInfo_OpenChannel.DiscardUnknown(m)
}

var xxx_messageInfo_OpenChannel proto.InternalMessageInfo

func (m *OpenChannel) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *OpenChannel) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *OpenChannel) GetAction() OpenChannel_Action {
	if m != nil {
		return m.Action
	}
	return OpenChannel_CREATE
}

func (m *OpenChannel) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type OpenChannelRes struct {
	Id                   int32                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	State                OpenChannelRes_State `protobuf:"varint,2,opt,name=state,proto3,enum=api.OpenChannelRes_State" json:"state,omitempty"`
	Error                string               `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *OpenChannelRes) Reset()         { *m = OpenChannelRes{} }
func (m *OpenChannelRes) String() string { return proto.CompactTextString(m) }
func (*OpenChannelRes) ProtoMessage()    {}
func (*OpenChannelRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{55}
}
func (m *OpenChannelRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpenChannelRes.Unmarshal(m, b)
}
func (m *OpenChannelRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpenChannelRes.Marshal(b, m, deterministic)
}
func (dst *OpenChannelRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpenChannelRes.Merge(dst, src)
}
func (m *OpenChannelRes) XXX_Size() int {
	return xxx_messageInfo_OpenChannelRes.Size(m)
}
func (m *OpenChannelRes) XXX_DiscardUnknown() {
	xxx_messageInfo_OpenChannelRes.DiscardUnknown(m)
}

var xxx_messageInfo_OpenChannelRes proto.InternalMessageInfo

func (m *OpenChannelRes) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *OpenChannelRes) GetState() OpenChannelRes_State {
	if m != nil {
		return m.State
	}
	return OpenChannelRes_CREATED
}

func (m *OpenChannelRes) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type CloseChannel struct {
	Id                   int32               `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Action               CloseChannel_Action `protobuf:"varint,2,opt,name=action,proto3,enum=api.CloseChannel_Action" json:"action,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *CloseChannel) Reset()         { *m = CloseChannel{} }
func (m *CloseChannel) String() string { return proto.CompactTextString(m) }
func (*CloseChannel) ProtoMessage()    {}
func (*CloseChannel) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{56}
}
func (m *CloseChannel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloseChannel.Unmarshal(m, b)
}
func (m *CloseChannel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloseChannel.Marshal(b, m, deterministic)
}
func (dst *CloseChannel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloseChannel.Merge(dst, src)
}
func (m *CloseChannel) XXX_Size() int {
	return xxx_messageInfo_CloseChannel.Size(m)
}
func (m *CloseChannel) XXX_DiscardUnknown() {
	xxx_messageInfo_CloseChannel.DiscardUnknown(m)
}

var xxx_messageInfo_CloseChannel proto.InternalMessageInfo

func (m *CloseChannel) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *CloseChannel) GetAction() CloseChannel_Action {
	if m != nil {
		return m.Action
	}
	return CloseChannel_DISCONNECT
}

type CloseChannelRes struct {
	Id                   int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Status               CloseChannelRes_Status `protobuf:"varint,2,opt,name=status,proto3,enum=api.CloseChannelRes_Status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *CloseChannelRes) Reset()         { *m = CloseChannelRes{} }
func (m *CloseChannelRes) String() string { return proto.CompactTextString(m) }
func (*CloseChannelRes) ProtoMessage()    {}
func (*CloseChannelRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{57}
}
func (m *CloseChannelRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloseChannelRes.Unmarshal(m, b)
}
func (m *CloseChannelRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloseChannelRes.Marshal(b, m, deterministic)
}
func (dst *CloseChannelRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloseChannelRes.Merge(dst, src)
}
func (m *CloseChannelRes) XXX_Size() int {
	return xxx_messageInfo_CloseChannelRes.Size(m)
}
func (m *CloseChannelRes) XXX_DiscardUnknown() {
	xxx_messageInfo_CloseChannelRes.DiscardUnknown(m)
}

var xxx_messageInfo_CloseChannelRes proto.InternalMessageInfo

func (m *CloseChannelRes) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *CloseChannelRes) GetStatus() CloseChannelRes_Status {
	if m != nil {
		return m.Status
	}
	return CloseChannelRes_DISCONNECT
}

type ContainerState struct {
	State                ContainerState_State `protobuf:"varint,1,opt,name=state,proto3,enum=api.ContainerState_State" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ContainerState) Reset()         { *m = ContainerState{} }
func (m *ContainerState) String() string { return proto.CompactTextString(m) }
func (*ContainerState) ProtoMessage()    {}
func (*ContainerState) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{58}
}
func (m *ContainerState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainerState.Unmarshal(m, b)
}
func (m *ContainerState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainerState.Marshal(b, m, deterministic)
}
func (dst *ContainerState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerState.Merge(dst, src)
}
func (m *ContainerState) XXX_Size() int {
	return xxx_messageInfo_ContainerState.Size(m)
}
func (m *ContainerState) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerState.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerState proto.InternalMessageInfo

func (m *ContainerState) GetState() ContainerState_State {
	if m != nil {
		return m.State
	}
	return ContainerState_SLEEP
}

type PortOpen struct {
	Forwarded            bool     `protobuf:"varint,1,opt,name=forwarded,proto3" json:"forwarded,omitempty"`
	Port                 uint32   `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	Address              string   `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PortOpen) Reset()         { *m = PortOpen{} }
func (m *PortOpen) String() string { return proto.CompactTextString(m) }
func (*PortOpen) ProtoMessage()    {}
func (*PortOpen) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{59}
}
func (m *PortOpen) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PortOpen.Unmarshal(m, b)
}
func (m *PortOpen) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PortOpen.Marshal(b, m, deterministic)
}
func (dst *PortOpen) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PortOpen.Merge(dst, src)
}
func (m *PortOpen) XXX_Size() int {
	return xxx_messageInfo_PortOpen.Size(m)
}
func (m *PortOpen) XXX_DiscardUnknown() {
	xxx_messageInfo_PortOpen.DiscardUnknown(m)
}

var xxx_messageInfo_PortOpen proto.InternalMessageInfo

func (m *PortOpen) GetForwarded() bool {
	if m != nil {
		return m.Forwarded
	}
	return false
}

func (m *PortOpen) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *PortOpen) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type OTFetchRequest struct {
	VersionFrom          uint32   `protobuf:"varint,1,opt,name=versionFrom,proto3" json:"versionFrom,omitempty"`
	VersionTo            uint32   `protobuf:"varint,2,opt,name=versionTo,proto3" json:"versionTo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OTFetchRequest) Reset()         { *m = OTFetchRequest{} }
func (m *OTFetchRequest) String() string { return proto.CompactTextString(m) }
func (*OTFetchRequest) ProtoMessage()    {}
func (*OTFetchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{60}
}
func (m *OTFetchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OTFetchRequest.Unmarshal(m, b)
}
func (m *OTFetchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OTFetchRequest.Marshal(b, m, deterministic)
}
func (dst *OTFetchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OTFetchRequest.Merge(dst, src)
}
func (m *OTFetchRequest) XXX_Size() int {
	return xxx_messageInfo_OTFetchRequest.Size(m)
}
func (m *OTFetchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OTFetchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OTFetchRequest proto.InternalMessageInfo

func (m *OTFetchRequest) GetVersionFrom() uint32 {
	if m != nil {
		return m.VersionFrom
	}
	return 0
}

func (m *OTFetchRequest) GetVersionTo() uint32 {
	if m != nil {
		return m.VersionTo
	}
	return 0
}

type OTFetchResponse struct {
	Packets              []*OTPacket `protobuf:"bytes,1,rep,name=packets,proto3" json:"packets,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *OTFetchResponse) Reset()         { *m = OTFetchResponse{} }
func (m *OTFetchResponse) String() string { return proto.CompactTextString(m) }
func (*OTFetchResponse) ProtoMessage()    {}
func (*OTFetchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{61}
}
func (m *OTFetchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OTFetchResponse.Unmarshal(m, b)
}
func (m *OTFetchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OTFetchResponse.Marshal(b, m, deterministic)
}
func (dst *OTFetchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OTFetchResponse.Merge(dst, src)
}
func (m *OTFetchResponse) XXX_Size() int {
	return xxx_messageInfo_OTFetchResponse.Size(m)
}
func (m *OTFetchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OTFetchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OTFetchResponse proto.InternalMessageInfo

func (m *OTFetchResponse) GetPackets() []*OTPacket {
	if m != nil {
		return m.Packets
	}
	return nil
}

type OTPacket struct {
	// so here's the deal. Once uppon a time `spookyVersion` was `version` and things
	// worked okay. Then one day someone came along and decided our handling of
	// version 0 was all kinds of messed up. Sending a version that already existed
	// never transformed the packet by that particular version. It was as if
	// `version` was treated as `version + 1`. This could not stand and thus the
	// great rift of versions was created. `version` does the right thing and
	// `spookyVersion` maintains backwards compatibility.
	SpookyVersion        uint32               `protobuf:"varint,1,opt,name=spookyVersion,proto3" json:"spookyVersion,omitempty"`
	Version              uint32               `protobuf:"varint,5,opt,name=version,proto3" json:"version,omitempty"`
	Ops                  []*OTRuneTransformOp `protobuf:"bytes,2,rep,name=ops,proto3" json:"ops,omitempty"`
	Crc32                uint32               `protobuf:"varint,3,opt,name=crc32,proto3" json:"crc32,omitempty"`
	Committed            *timestamp.Timestamp `protobuf:"bytes,4,opt,name=committed,proto3" json:"committed,omitempty"`
	Nonce                uint32               `protobuf:"varint,6,opt,name=nonce,proto3" json:"nonce,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *OTPacket) Reset()         { *m = OTPacket{} }
func (m *OTPacket) String() string { return proto.CompactTextString(m) }
func (*OTPacket) ProtoMessage()    {}
func (*OTPacket) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{62}
}
func (m *OTPacket) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OTPacket.Unmarshal(m, b)
}
func (m *OTPacket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OTPacket.Marshal(b, m, deterministic)
}
func (dst *OTPacket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OTPacket.Merge(dst, src)
}
func (m *OTPacket) XXX_Size() int {
	return xxx_messageInfo_OTPacket.Size(m)
}
func (m *OTPacket) XXX_DiscardUnknown() {
	xxx_messageInfo_OTPacket.DiscardUnknown(m)
}

var xxx_messageInfo_OTPacket proto.InternalMessageInfo

func (m *OTPacket) GetSpookyVersion() uint32 {
	if m != nil {
		return m.SpookyVersion
	}
	return 0
}

func (m *OTPacket) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *OTPacket) GetOps() []*OTRuneTransformOp {
	if m != nil {
		return m.Ops
	}
	return nil
}

func (m *OTPacket) GetCrc32() uint32 {
	if m != nil {
		return m.Crc32
	}
	return 0
}

func (m *OTPacket) GetCommitted() *timestamp.Timestamp {
	if m != nil {
		return m.Committed
	}
	return nil
}

func (m *OTPacket) GetNonce() uint32 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

type OTRuneTransformOp struct {
	// Types that are valid to be assigned to Op:
	//	*OTRuneTransformOp_Skip
	//	*OTRuneTransformOp_Delete
	//	*OTRuneTransformOp_Insert
	Op                   isOTRuneTransformOp_Op `protobuf_oneof:"op"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *OTRuneTransformOp) Reset()         { *m = OTRuneTransformOp{} }
func (m *OTRuneTransformOp) String() string { return proto.CompactTextString(m) }
func (*OTRuneTransformOp) ProtoMessage()    {}
func (*OTRuneTransformOp) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{63}
}
func (m *OTRuneTransformOp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OTRuneTransformOp.Unmarshal(m, b)
}
func (m *OTRuneTransformOp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OTRuneTransformOp.Marshal(b, m, deterministic)
}
func (dst *OTRuneTransformOp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OTRuneTransformOp.Merge(dst, src)
}
func (m *OTRuneTransformOp) XXX_Size() int {
	return xxx_messageInfo_OTRuneTransformOp.Size(m)
}
func (m *OTRuneTransformOp) XXX_DiscardUnknown() {
	xxx_messageInfo_OTRuneTransformOp.DiscardUnknown(m)
}

var xxx_messageInfo_OTRuneTransformOp proto.InternalMessageInfo

type isOTRuneTransformOp_Op interface {
	isOTRuneTransformOp_Op()
}

type OTRuneTransformOp_Skip struct {
	Skip uint32 `protobuf:"varint,1,opt,name=skip,proto3,oneof"`
}

type OTRuneTransformOp_Delete struct {
	Delete uint32 `protobuf:"varint,2,opt,name=delete,proto3,oneof"`
}

type OTRuneTransformOp_Insert struct {
	Insert string `protobuf:"bytes,3,opt,name=insert,proto3,oneof"`
}

func (*OTRuneTransformOp_Skip) isOTRuneTransformOp_Op() {}

func (*OTRuneTransformOp_Delete) isOTRuneTransformOp_Op() {}

func (*OTRuneTransformOp_Insert) isOTRuneTransformOp_Op() {}

func (m *OTRuneTransformOp) GetOp() isOTRuneTransformOp_Op {
	if m != nil {
		return m.Op
	}
	return nil
}

func (m *OTRuneTransformOp) GetSkip() uint32 {
	if x, ok := m.GetOp().(*OTRuneTransformOp_Skip); ok {
		return x.Skip
	}
	return 0
}

func (m *OTRuneTransformOp) GetDelete() uint32 {
	if x, ok := m.GetOp().(*OTRuneTransformOp_Delete); ok {
		return x.Delete
	}
	return 0
}

func (m *OTRuneTransformOp) GetInsert() string {
	if x, ok := m.GetOp().(*OTRuneTransformOp_Insert); ok {
		return x.Insert
	}
	return ""
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*OTRuneTransformOp) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _OTRuneTransformOp_OneofMarshaler, _OTRuneTransformOp_OneofUnmarshaler, _OTRuneTransformOp_OneofSizer, []interface{}{
		(*OTRuneTransformOp_Skip)(nil),
		(*OTRuneTransformOp_Delete)(nil),
		(*OTRuneTransformOp_Insert)(nil),
	}
}

func _OTRuneTransformOp_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*OTRuneTransformOp)
	// op
	switch x := m.Op.(type) {
	case *OTRuneTransformOp_Skip:
		b.EncodeVarint(1<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.Skip))
	case *OTRuneTransformOp_Delete:
		b.EncodeVarint(2<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.Delete))
	case *OTRuneTransformOp_Insert:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Insert)
	case nil:
	default:
		return fmt.Errorf("OTRuneTransformOp.Op has unexpected type %T", x)
	}
	return nil
}

func _OTRuneTransformOp_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*OTRuneTransformOp)
	switch tag {
	case 1: // op.skip
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Op = &OTRuneTransformOp_Skip{uint32(x)}
		return true, err
	case 2: // op.delete
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Op = &OTRuneTransformOp_Delete{uint32(x)}
		return true, err
	case 3: // op.insert
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Op = &OTRuneTransformOp_Insert{x}
		return true, err
	default:
		return false, nil
	}
}

func _OTRuneTransformOp_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*OTRuneTransformOp)
	// op
	switch x := m.Op.(type) {
	case *OTRuneTransformOp_Skip:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.Skip))
	case *OTRuneTransformOp_Delete:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.Delete))
	case *OTRuneTransformOp_Insert:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Insert)))
		n += len(x.Insert)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type OTStatus struct {
	Contents             string      `protobuf:"bytes,1,opt,name=contents,proto3" json:"contents,omitempty"`
	Version              uint32      `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	LinkedFile           *File       `protobuf:"bytes,3,opt,name=linkedFile,proto3" json:"linkedFile,omitempty"`
	Cursors              []*OTCursor `protobuf:"bytes,4,rep,name=cursors,proto3" json:"cursors,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *OTStatus) Reset()         { *m = OTStatus{} }
func (m *OTStatus) String() string { return proto.CompactTextString(m) }
func (*OTStatus) ProtoMessage()    {}
func (*OTStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{64}
}
func (m *OTStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OTStatus.Unmarshal(m, b)
}
func (m *OTStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OTStatus.Marshal(b, m, deterministic)
}
func (dst *OTStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OTStatus.Merge(dst, src)
}
func (m *OTStatus) XXX_Size() int {
	return xxx_messageInfo_OTStatus.Size(m)
}
func (m *OTStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_OTStatus.DiscardUnknown(m)
}

var xxx_messageInfo_OTStatus proto.InternalMessageInfo

func (m *OTStatus) GetContents() string {
	if m != nil {
		return m.Contents
	}
	return ""
}

func (m *OTStatus) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *OTStatus) GetLinkedFile() *File {
	if m != nil {
		return m.LinkedFile
	}
	return nil
}

func (m *OTStatus) GetCursors() []*OTCursor {
	if m != nil {
		return m.Cursors
	}
	return nil
}

type OTCursor struct {
	Position             uint32   `protobuf:"varint,1,opt,name=position,proto3" json:"position,omitempty"`
	SelectionStart       uint32   `protobuf:"varint,2,opt,name=selectionStart,proto3" json:"selectionStart,omitempty"`
	SelectionEnd         uint32   `protobuf:"varint,3,opt,name=selectionEnd,proto3" json:"selectionEnd,omitempty"`
	User                 *User    `protobuf:"bytes,4,opt,name=user,proto3" json:"user,omitempty"`
	Id                   string   `protobuf:"bytes,5,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OTCursor) Reset()         { *m = OTCursor{} }
func (m *OTCursor) String() string { return proto.CompactTextString(m) }
func (*OTCursor) ProtoMessage()    {}
func (*OTCursor) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{65}
}
func (m *OTCursor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OTCursor.Unmarshal(m, b)
}
func (m *OTCursor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OTCursor.Marshal(b, m, deterministic)
}
func (dst *OTCursor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OTCursor.Merge(dst, src)
}
func (m *OTCursor) XXX_Size() int {
	return xxx_messageInfo_OTCursor.Size(m)
}
func (m *OTCursor) XXX_DiscardUnknown() {
	xxx_messageInfo_OTCursor.DiscardUnknown(m)
}

var xxx_messageInfo_OTCursor proto.InternalMessageInfo

func (m *OTCursor) GetPosition() uint32 {
	if m != nil {
		return m.Position
	}
	return 0
}

func (m *OTCursor) GetSelectionStart() uint32 {
	if m != nil {
		return m.SelectionStart
	}
	return 0
}

func (m *OTCursor) GetSelectionEnd() uint32 {
	if m != nil {
		return m.SelectionEnd
	}
	return 0
}

func (m *OTCursor) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *OTCursor) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ChatMessage struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Text                 string   `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChatMessage) Reset()         { *m = ChatMessage{} }
func (m *ChatMessage) String() string { return proto.CompactTextString(m) }
func (*ChatMessage) ProtoMessage()    {}
func (*ChatMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{66}
}
func (m *ChatMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChatMessage.Unmarshal(m, b)
}
func (m *ChatMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChatMessage.Marshal(b, m, deterministic)
}
func (dst *ChatMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChatMessage.Merge(dst, src)
}
func (m *ChatMessage) XXX_Size() int {
	return xxx_messageInfo_ChatMessage.Size(m)
}
func (m *ChatMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ChatMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ChatMessage proto.InternalMessageInfo

func (m *ChatMessage) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *ChatMessage) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

type ChatTyping struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Typing               bool     `protobuf:"varint,2,opt,name=typing,proto3" json:"typing,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChatTyping) Reset()         { *m = ChatTyping{} }
func (m *ChatTyping) String() string { return proto.CompactTextString(m) }
func (*ChatTyping) ProtoMessage()    {}
func (*ChatTyping) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{67}
}
func (m *ChatTyping) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChatTyping.Unmarshal(m, b)
}
func (m *ChatTyping) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChatTyping.Marshal(b, m, deterministic)
}
func (dst *ChatTyping) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChatTyping.Merge(dst, src)
}
func (m *ChatTyping) XXX_Size() int {
	return xxx_messageInfo_ChatTyping.Size(m)
}
func (m *ChatTyping) XXX_DiscardUnknown() {
	xxx_messageInfo_ChatTyping.DiscardUnknown(m)
}

var xxx_messageInfo_ChatTyping proto.InternalMessageInfo

func (m *ChatTyping) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *ChatTyping) GetTyping() bool {
	if m != nil {
		return m.Typing
	}
	return false
}

type User struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Roles                []string `protobuf:"bytes,3,rep,name=roles,proto3" json:"roles,omitempty"`
	Session              int32    `protobuf:"varint,4,opt,name=session,proto3" json:"session,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{68}
}
func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (dst *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(dst, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *User) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *User) GetRoles() []string {
	if m != nil {
		return m.Roles
	}
	return nil
}

func (m *User) GetSession() int32 {
	if m != nil {
		return m.Session
	}
	return 0
}

type Roster struct {
	User                 []*User  `protobuf:"bytes,1,rep,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Roster) Reset()         { *m = Roster{} }
func (m *Roster) String() string { return proto.CompactTextString(m) }
func (*Roster) ProtoMessage()    {}
func (*Roster) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{69}
}
func (m *Roster) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Roster.Unmarshal(m, b)
}
func (m *Roster) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Roster.Marshal(b, m, deterministic)
}
func (dst *Roster) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Roster.Merge(dst, src)
}
func (m *Roster) XXX_Size() int {
	return xxx_messageInfo_Roster.Size(m)
}
func (m *Roster) XXX_DiscardUnknown() {
	xxx_messageInfo_Roster.DiscardUnknown(m)
}

var xxx_messageInfo_Roster proto.InternalMessageInfo

func (m *Roster) GetUser() []*User {
	if m != nil {
		return m.User
	}
	return nil
}

type Exec struct {
	Args                 []string          `protobuf:"bytes,1,rep,name=args,proto3" json:"args,omitempty"`
	Env                  map[string]string `protobuf:"bytes,2,rep,name=env,proto3" json:"env,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Blocking             bool              `protobuf:"varint,3,opt,name=blocking,proto3" json:"blocking,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Exec) Reset()         { *m = Exec{} }
func (m *Exec) String() string { return proto.CompactTextString(m) }
func (*Exec) ProtoMessage()    {}
func (*Exec) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{70}
}
func (m *Exec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Exec.Unmarshal(m, b)
}
func (m *Exec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Exec.Marshal(b, m, deterministic)
}
func (dst *Exec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Exec.Merge(dst, src)
}
func (m *Exec) XXX_Size() int {
	return xxx_messageInfo_Exec.Size(m)
}
func (m *Exec) XXX_DiscardUnknown() {
	xxx_messageInfo_Exec.DiscardUnknown(m)
}

var xxx_messageInfo_Exec proto.InternalMessageInfo

func (m *Exec) GetArgs() []string {
	if m != nil {
		return m.Args
	}
	return nil
}

func (m *Exec) GetEnv() map[string]string {
	if m != nil {
		return m.Env
	}
	return nil
}

func (m *Exec) GetBlocking() bool {
	if m != nil {
		return m.Blocking
	}
	return false
}

type Package struct {
	// Used always.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Used only for add and remove.
	Spec string `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	// Used only for search and info.
	Description          string     `protobuf:"bytes,10,opt,name=description,proto3" json:"description,omitempty"`
	Version              string     `protobuf:"bytes,11,opt,name=version,proto3" json:"version,omitempty"`
	HomepageURL          string     `protobuf:"bytes,12,opt,name=homepageURL,proto3" json:"homepageURL,omitempty"`
	DocumentationURL     string     `protobuf:"bytes,13,opt,name=documentationURL,proto3" json:"documentationURL,omitempty"`
	SourceCodeURL        string     `protobuf:"bytes,14,opt,name=sourceCodeURL,proto3" json:"sourceCodeURL,omitempty"`
	BugTrackerURL        string     `protobuf:"bytes,15,opt,name=bugTrackerURL,proto3" json:"bugTrackerURL,omitempty"`
	Author               string     `protobuf:"bytes,16,opt,name=author,proto3" json:"author,omitempty"`
	License              string     `protobuf:"bytes,17,opt,name=license,proto3" json:"license,omitempty"`
	Dependencies         []*Package `protobuf:"bytes,18,rep,name=dependencies,proto3" json:"dependencies,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Package) Reset()         { *m = Package{} }
func (m *Package) String() string { return proto.CompactTextString(m) }
func (*Package) ProtoMessage()    {}
func (*Package) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{71}
}
func (m *Package) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Package.Unmarshal(m, b)
}
func (m *Package) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Package.Marshal(b, m, deterministic)
}
func (dst *Package) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Package.Merge(dst, src)
}
func (m *Package) XXX_Size() int {
	return xxx_messageInfo_Package.Size(m)
}
func (m *Package) XXX_DiscardUnknown() {
	xxx_messageInfo_Package.DiscardUnknown(m)
}

var xxx_messageInfo_Package proto.InternalMessageInfo

func (m *Package) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Package) GetSpec() string {
	if m != nil {
		return m.Spec
	}
	return ""
}

func (m *Package) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Package) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *Package) GetHomepageURL() string {
	if m != nil {
		return m.HomepageURL
	}
	return ""
}

func (m *Package) GetDocumentationURL() string {
	if m != nil {
		return m.DocumentationURL
	}
	return ""
}

func (m *Package) GetSourceCodeURL() string {
	if m != nil {
		return m.SourceCodeURL
	}
	return ""
}

func (m *Package) GetBugTrackerURL() string {
	if m != nil {
		return m.BugTrackerURL
	}
	return ""
}

func (m *Package) GetAuthor() string {
	if m != nil {
		return m.Author
	}
	return ""
}

func (m *Package) GetLicense() string {
	if m != nil {
		return m.License
	}
	return ""
}

func (m *Package) GetDependencies() []*Package {
	if m != nil {
		return m.Dependencies
	}
	return nil
}

type PackageSearch struct {
	Query                string   `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PackageSearch) Reset()         { *m = PackageSearch{} }
func (m *PackageSearch) String() string { return proto.CompactTextString(m) }
func (*PackageSearch) ProtoMessage()    {}
func (*PackageSearch) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{72}
}
func (m *PackageSearch) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PackageSearch.Unmarshal(m, b)
}
func (m *PackageSearch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PackageSearch.Marshal(b, m, deterministic)
}
func (dst *PackageSearch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PackageSearch.Merge(dst, src)
}
func (m *PackageSearch) XXX_Size() int {
	return xxx_messageInfo_PackageSearch.Size(m)
}
func (m *PackageSearch) XXX_DiscardUnknown() {
	xxx_messageInfo_PackageSearch.DiscardUnknown(m)
}

var xxx_messageInfo_PackageSearch proto.InternalMessageInfo

func (m *PackageSearch) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

type PackageSearchResp struct {
	Results              []*Package `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *PackageSearchResp) Reset()         { *m = PackageSearchResp{} }
func (m *PackageSearchResp) String() string { return proto.CompactTextString(m) }
func (*PackageSearchResp) ProtoMessage()    {}
func (*PackageSearchResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{73}
}
func (m *PackageSearchResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PackageSearchResp.Unmarshal(m, b)
}
func (m *PackageSearchResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PackageSearchResp.Marshal(b, m, deterministic)
}
func (dst *PackageSearchResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PackageSearchResp.Merge(dst, src)
}
func (m *PackageSearchResp) XXX_Size() int {
	return xxx_messageInfo_PackageSearchResp.Size(m)
}
func (m *PackageSearchResp) XXX_DiscardUnknown() {
	xxx_messageInfo_PackageSearchResp.DiscardUnknown(m)
}

var xxx_messageInfo_PackageSearchResp proto.InternalMessageInfo

func (m *PackageSearchResp) GetResults() []*Package {
	if m != nil {
		return m.Results
	}
	return nil
}

type PackageInfo struct {
	Pkg                  *Package `protobuf:"bytes,1,opt,name=pkg,proto3" json:"pkg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PackageInfo) Reset()         { *m = PackageInfo{} }
func (m *PackageInfo) String() string { return proto.CompactTextString(m) }
func (*PackageInfo) ProtoMessage()    {}
func (*PackageInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{74}
}
func (m *PackageInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PackageInfo.Unmarshal(m, b)
}
func (m *PackageInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PackageInfo.Marshal(b, m, deterministic)
}
func (dst *PackageInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PackageInfo.Merge(dst, src)
}
func (m *PackageInfo) XXX_Size() int {
	return xxx_messageInfo_PackageInfo.Size(m)
}
func (m *PackageInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PackageInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PackageInfo proto.InternalMessageInfo

func (m *PackageInfo) GetPkg() *Package {
	if m != nil {
		return m.Pkg
	}
	return nil
}

type PackageInfoResp struct {
	Pkg                  *Package `protobuf:"bytes,1,opt,name=pkg,proto3" json:"pkg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PackageInfoResp) Reset()         { *m = PackageInfoResp{} }
func (m *PackageInfoResp) String() string { return proto.CompactTextString(m) }
func (*PackageInfoResp) ProtoMessage()    {}
func (*PackageInfoResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{75}
}
func (m *PackageInfoResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PackageInfoResp.Unmarshal(m, b)
}
func (m *PackageInfoResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PackageInfoResp.Marshal(b, m, deterministic)
}
func (dst *PackageInfoResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PackageInfoResp.Merge(dst, src)
}
func (m *PackageInfoResp) XXX_Size() int {
	return xxx_messageInfo_PackageInfoResp.Size(m)
}
func (m *PackageInfoResp) XXX_DiscardUnknown() {
	xxx_messageInfo_PackageInfoResp.DiscardUnknown(m)
}

var xxx_messageInfo_PackageInfoResp proto.InternalMessageInfo

func (m *PackageInfoResp) GetPkg() *Package {
	if m != nil {
		return m.Pkg
	}
	return nil
}

type PackageAdd struct {
	Pkgs                 []*Package `protobuf:"bytes,1,rep,name=pkgs,proto3" json:"pkgs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *PackageAdd) Reset()         { *m = PackageAdd{} }
func (m *PackageAdd) String() string { return proto.CompactTextString(m) }
func (*PackageAdd) ProtoMessage()    {}
func (*PackageAdd) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{76}
}
func (m *PackageAdd) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PackageAdd.Unmarshal(m, b)
}
func (m *PackageAdd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PackageAdd.Marshal(b, m, deterministic)
}
func (dst *PackageAdd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PackageAdd.Merge(dst, src)
}
func (m *PackageAdd) XXX_Size() int {
	return xxx_messageInfo_PackageAdd.Size(m)
}
func (m *PackageAdd) XXX_DiscardUnknown() {
	xxx_messageInfo_PackageAdd.DiscardUnknown(m)
}

var xxx_messageInfo_PackageAdd proto.InternalMessageInfo

func (m *PackageAdd) GetPkgs() []*Package {
	if m != nil {
		return m.Pkgs
	}
	return nil
}

type PackageRemove struct {
	Pkgs                 []*Package `protobuf:"bytes,1,rep,name=pkgs,proto3" json:"pkgs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *PackageRemove) Reset()         { *m = PackageRemove{} }
func (m *PackageRemove) String() string { return proto.CompactTextString(m) }
func (*PackageRemove) ProtoMessage()    {}
func (*PackageRemove) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{77}
}
func (m *PackageRemove) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PackageRemove.Unmarshal(m, b)
}
func (m *PackageRemove) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PackageRemove.Marshal(b, m, deterministic)
}
func (dst *PackageRemove) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PackageRemove.Merge(dst, src)
}
func (m *PackageRemove) XXX_Size() int {
	return xxx_messageInfo_PackageRemove.Size(m)
}
func (m *PackageRemove) XXX_DiscardUnknown() {
	xxx_messageInfo_PackageRemove.DiscardUnknown(m)
}

var xxx_messageInfo_PackageRemove proto.InternalMessageInfo

func (m *PackageRemove) GetPkgs() []*Package {
	if m != nil {
		return m.Pkgs
	}
	return nil
}

type PackageInstall struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PackageInstall) Reset()         { *m = PackageInstall{} }
func (m *PackageInstall) String() string { return proto.CompactTextString(m) }
func (*PackageInstall) ProtoMessage()    {}
func (*PackageInstall) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{78}
}
func (m *PackageInstall) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PackageInstall.Unmarshal(m, b)
}
func (m *PackageInstall) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PackageInstall.Marshal(b, m, deterministic)
}
func (dst *PackageInstall) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PackageInstall.Merge(dst, src)
}
func (m *PackageInstall) XXX_Size() int {
	return xxx_messageInfo_PackageInstall.Size(m)
}
func (m *PackageInstall) XXX_DiscardUnknown() {
	xxx_messageInfo_PackageInstall.DiscardUnknown(m)
}

var xxx_messageInfo_PackageInstall proto.InternalMessageInfo

type PackageListSpecfile struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PackageListSpecfile) Reset()         { *m = PackageListSpecfile{} }
func (m *PackageListSpecfile) String() string { return proto.CompactTextString(m) }
func (*PackageListSpecfile) ProtoMessage()    {}
func (*PackageListSpecfile) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{79}
}
func (m *PackageListSpecfile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PackageListSpecfile.Unmarshal(m, b)
}
func (m *PackageListSpecfile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PackageListSpecfile.Marshal(b, m, deterministic)
}
func (dst *PackageListSpecfile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PackageListSpecfile.Merge(dst, src)
}
func (m *PackageListSpecfile) XXX_Size() int {
	return xxx_messageInfo_PackageListSpecfile.Size(m)
}
func (m *PackageListSpecfile) XXX_DiscardUnknown() {
	xxx_messageInfo_PackageListSpecfile.DiscardUnknown(m)
}

var xxx_messageInfo_PackageListSpecfile proto.InternalMessageInfo

type PackageListSpecfileResp struct {
	Pkgs                 []*Package `protobuf:"bytes,1,rep,name=pkgs,proto3" json:"pkgs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *PackageListSpecfileResp) Reset()         { *m = PackageListSpecfileResp{} }
func (m *PackageListSpecfileResp) String() string { return proto.CompactTextString(m) }
func (*PackageListSpecfileResp) ProtoMessage()    {}
func (*PackageListSpecfileResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{80}
}
func (m *PackageListSpecfileResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PackageListSpecfileResp.Unmarshal(m, b)
}
func (m *PackageListSpecfileResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PackageListSpecfileResp.Marshal(b, m, deterministic)
}
func (dst *PackageListSpecfileResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PackageListSpecfileResp.Merge(dst, src)
}
func (m *PackageListSpecfileResp) XXX_Size() int {
	return xxx_messageInfo_PackageListSpecfileResp.Size(m)
}
func (m *PackageListSpecfileResp) XXX_DiscardUnknown() {
	xxx_messageInfo_PackageListSpecfileResp.DiscardUnknown(m)
}

var xxx_messageInfo_PackageListSpecfileResp proto.InternalMessageInfo

func (m *PackageListSpecfileResp) GetPkgs() []*Package {
	if m != nil {
		return m.Pkgs
	}
	return nil
}

type PackageCacheSave struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PackageCacheSave) Reset()         { *m = PackageCacheSave{} }
func (m *PackageCacheSave) String() string { return proto.CompactTextString(m) }
func (*PackageCacheSave) ProtoMessage()    {}
func (*PackageCacheSave) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{81}
}
func (m *PackageCacheSave) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PackageCacheSave.Unmarshal(m, b)
}
func (m *PackageCacheSave) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PackageCacheSave.Marshal(b, m, deterministic)
}
func (dst *PackageCacheSave) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PackageCacheSave.Merge(dst, src)
}
func (m *PackageCacheSave) XXX_Size() int {
	return xxx_messageInfo_PackageCacheSave.Size(m)
}
func (m *PackageCacheSave) XXX_DiscardUnknown() {
	xxx_messageInfo_PackageCacheSave.DiscardUnknown(m)
}

var xxx_messageInfo_PackageCacheSave proto.InternalMessageInfo

type ChatScrollback struct {
	Scrollback           []*ChatMessage `protobuf:"bytes,1,rep,name=scrollback,proto3" json:"scrollback,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ChatScrollback) Reset()         { *m = ChatScrollback{} }
func (m *ChatScrollback) String() string { return proto.CompactTextString(m) }
func (*ChatScrollback) ProtoMessage()    {}
func (*ChatScrollback) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{82}
}
func (m *ChatScrollback) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChatScrollback.Unmarshal(m, b)
}
func (m *ChatScrollback) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChatScrollback.Marshal(b, m, deterministic)
}
func (dst *ChatScrollback) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChatScrollback.Merge(dst, src)
}
func (m *ChatScrollback) XXX_Size() int {
	return xxx_messageInfo_ChatScrollback.Size(m)
}
func (m *ChatScrollback) XXX_DiscardUnknown() {
	xxx_messageInfo_ChatScrollback.DiscardUnknown(m)
}

var xxx_messageInfo_ChatScrollback proto.InternalMessageInfo

func (m *ChatScrollback) GetScrollback() []*ChatMessage {
	if m != nil {
		return m.Scrollback
	}
	return nil
}

type Metrics struct {
	PrometheusMetricFamilies [][]byte `protobuf:"bytes,1,rep,name=prometheusMetricFamilies,proto3" json:"prometheusMetricFamilies,omitempty"`
	XXX_NoUnkeyedLiteral     struct{} `json:"-"`
	XXX_unrecognized         []byte   `json:"-"`
	XXX_sizecache            int32    `json:"-"`
}

func (m *Metrics) Reset()         { *m = Metrics{} }
func (m *Metrics) String() string { return proto.CompactTextString(m) }
func (*Metrics) ProtoMessage()    {}
func (*Metrics) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{83}
}
func (m *Metrics) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Metrics.Unmarshal(m, b)
}
func (m *Metrics) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Metrics.Marshal(b, m, deterministic)
}
func (dst *Metrics) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Metrics.Merge(dst, src)
}
func (m *Metrics) XXX_Size() int {
	return xxx_messageInfo_Metrics.Size(m)
}
func (m *Metrics) XXX_DiscardUnknown() {
	xxx_messageInfo_Metrics.DiscardUnknown(m)
}

var xxx_messageInfo_Metrics proto.InternalMessageInfo

func (m *Metrics) GetPrometheusMetricFamilies() [][]byte {
	if m != nil {
		return m.PrometheusMetricFamilies
	}
	return nil
}

type PprofRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Types that are valid to be assigned to Body:
	//	*PprofRequest_PprofCpuProfileRequest
	//	*PprofRequest_PprofHeapProfileRequest
	//	*PprofRequest_PprofAllocsProfileRequest
	//	*PprofRequest_PprofBlockProfileRequest
	//	*PprofRequest_PprofMutexProfileRequest
	Body                 isPprofRequest_Body `protobuf_oneof:"body"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *PprofRequest) Reset()         { *m = PprofRequest{} }
func (m *PprofRequest) String() string { return proto.CompactTextString(m) }
func (*PprofRequest) ProtoMessage()    {}
func (*PprofRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{84}
}
func (m *PprofRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PprofRequest.Unmarshal(m, b)
}
func (m *PprofRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PprofRequest.Marshal(b, m, deterministic)
}
func (dst *PprofRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PprofRequest.Merge(dst, src)
}
func (m *PprofRequest) XXX_Size() int {
	return xxx_messageInfo_PprofRequest.Size(m)
}
func (m *PprofRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PprofRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PprofRequest proto.InternalMessageInfo

func (m *PprofRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type isPprofRequest_Body interface {
	isPprofRequest_Body()
}

type PprofRequest_PprofCpuProfileRequest struct {
	PprofCpuProfileRequest *PprofCpuProfileRequest `protobuf:"bytes,2,opt,name=pprofCpuProfileRequest,proto3,oneof"`
}

type PprofRequest_PprofHeapProfileRequest struct {
	PprofHeapProfileRequest *PprofHeapProfileRequest `protobuf:"bytes,3,opt,name=pprofHeapProfileRequest,proto3,oneof"`
}

type PprofRequest_PprofAllocsProfileRequest struct {
	PprofAllocsProfileRequest *PprofAllocsProfileRequest `protobuf:"bytes,4,opt,name=pprofAllocsProfileRequest,proto3,oneof"`
}

type PprofRequest_PprofBlockProfileRequest struct {
	PprofBlockProfileRequest *PprofBlockProfileRequest `protobuf:"bytes,5,opt,name=pprofBlockProfileRequest,proto3,oneof"`
}

type PprofRequest_PprofMutexProfileRequest struct {
	PprofMutexProfileRequest *PprofMutexProfileRequest `protobuf:"bytes,6,opt,name=pprofMutexProfileRequest,proto3,oneof"`
}

func (*PprofRequest_PprofCpuProfileRequest) isPprofRequest_Body() {}

func (*PprofRequest_PprofHeapProfileRequest) isPprofRequest_Body() {}

func (*PprofRequest_PprofAllocsProfileRequest) isPprofRequest_Body() {}

func (*PprofRequest_PprofBlockProfileRequest) isPprofRequest_Body() {}

func (*PprofRequest_PprofMutexProfileRequest) isPprofRequest_Body() {}

func (m *PprofRequest) GetBody() isPprofRequest_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *PprofRequest) GetPprofCpuProfileRequest() *PprofCpuProfileRequest {
	if x, ok := m.GetBody().(*PprofRequest_PprofCpuProfileRequest); ok {
		return x.PprofCpuProfileRequest
	}
	return nil
}

func (m *PprofRequest) GetPprofHeapProfileRequest() *PprofHeapProfileRequest {
	if x, ok := m.GetBody().(*PprofRequest_PprofHeapProfileRequest); ok {
		return x.PprofHeapProfileRequest
	}
	return nil
}

func (m *PprofRequest) GetPprofAllocsProfileRequest() *PprofAllocsProfileRequest {
	if x, ok := m.GetBody().(*PprofRequest_PprofAllocsProfileRequest); ok {
		return x.PprofAllocsProfileRequest
	}
	return nil
}

func (m *PprofRequest) GetPprofBlockProfileRequest() *PprofBlockProfileRequest {
	if x, ok := m.GetBody().(*PprofRequest_PprofBlockProfileRequest); ok {
		return x.PprofBlockProfileRequest
	}
	return nil
}

func (m *PprofRequest) GetPprofMutexProfileRequest() *PprofMutexProfileRequest {
	if x, ok := m.GetBody().(*PprofRequest_PprofMutexProfileRequest); ok {
		return x.PprofMutexProfileRequest
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*PprofRequest) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _PprofRequest_OneofMarshaler, _PprofRequest_OneofUnmarshaler, _PprofRequest_OneofSizer, []interface{}{
		(*PprofRequest_PprofCpuProfileRequest)(nil),
		(*PprofRequest_PprofHeapProfileRequest)(nil),
		(*PprofRequest_PprofAllocsProfileRequest)(nil),
		(*PprofRequest_PprofBlockProfileRequest)(nil),
		(*PprofRequest_PprofMutexProfileRequest)(nil),
	}
}

func _PprofRequest_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*PprofRequest)
	// body
	switch x := m.Body.(type) {
	case *PprofRequest_PprofCpuProfileRequest:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PprofCpuProfileRequest); err != nil {
			return err
		}
	case *PprofRequest_PprofHeapProfileRequest:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PprofHeapProfileRequest); err != nil {
			return err
		}
	case *PprofRequest_PprofAllocsProfileRequest:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PprofAllocsProfileRequest); err != nil {
			return err
		}
	case *PprofRequest_PprofBlockProfileRequest:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PprofBlockProfileRequest); err != nil {
			return err
		}
	case *PprofRequest_PprofMutexProfileRequest:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PprofMutexProfileRequest); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("PprofRequest.Body has unexpected type %T", x)
	}
	return nil
}

func _PprofRequest_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*PprofRequest)
	switch tag {
	case 2: // body.pprofCpuProfileRequest
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PprofCpuProfileRequest)
		err := b.DecodeMessage(msg)
		m.Body = &PprofRequest_PprofCpuProfileRequest{msg}
		return true, err
	case 3: // body.pprofHeapProfileRequest
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PprofHeapProfileRequest)
		err := b.DecodeMessage(msg)
		m.Body = &PprofRequest_PprofHeapProfileRequest{msg}
		return true, err
	case 4: // body.pprofAllocsProfileRequest
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PprofAllocsProfileRequest)
		err := b.DecodeMessage(msg)
		m.Body = &PprofRequest_PprofAllocsProfileRequest{msg}
		return true, err
	case 5: // body.pprofBlockProfileRequest
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PprofBlockProfileRequest)
		err := b.DecodeMessage(msg)
		m.Body = &PprofRequest_PprofBlockProfileRequest{msg}
		return true, err
	case 6: // body.pprofMutexProfileRequest
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PprofMutexProfileRequest)
		err := b.DecodeMessage(msg)
		m.Body = &PprofRequest_PprofMutexProfileRequest{msg}
		return true, err
	default:
		return false, nil
	}
}

func _PprofRequest_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*PprofRequest)
	// body
	switch x := m.Body.(type) {
	case *PprofRequest_PprofCpuProfileRequest:
		s := proto.Size(x.PprofCpuProfileRequest)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *PprofRequest_PprofHeapProfileRequest:
		s := proto.Size(x.PprofHeapProfileRequest)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *PprofRequest_PprofAllocsProfileRequest:
		s := proto.Size(x.PprofAllocsProfileRequest)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *PprofRequest_PprofBlockProfileRequest:
		s := proto.Size(x.PprofBlockProfileRequest)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *PprofRequest_PprofMutexProfileRequest:
		s := proto.Size(x.PprofMutexProfileRequest)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type PprofAllocsProfileRequest struct {
	Debug                bool     `protobuf:"varint,1,opt,name=debug,proto3" json:"debug,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PprofAllocsProfileRequest) Reset()         { *m = PprofAllocsProfileRequest{} }
func (m *PprofAllocsProfileRequest) String() string { return proto.CompactTextString(m) }
func (*PprofAllocsProfileRequest) ProtoMessage()    {}
func (*PprofAllocsProfileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{85}
}
func (m *PprofAllocsProfileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PprofAllocsProfileRequest.Unmarshal(m, b)
}
func (m *PprofAllocsProfileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PprofAllocsProfileRequest.Marshal(b, m, deterministic)
}
func (dst *PprofAllocsProfileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PprofAllocsProfileRequest.Merge(dst, src)
}
func (m *PprofAllocsProfileRequest) XXX_Size() int {
	return xxx_messageInfo_PprofAllocsProfileRequest.Size(m)
}
func (m *PprofAllocsProfileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PprofAllocsProfileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PprofAllocsProfileRequest proto.InternalMessageInfo

func (m *PprofAllocsProfileRequest) GetDebug() bool {
	if m != nil {
		return m.Debug
	}
	return false
}

type PprofBlockProfileRequest struct {
	Debug                bool     `protobuf:"varint,1,opt,name=debug,proto3" json:"debug,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PprofBlockProfileRequest) Reset()         { *m = PprofBlockProfileRequest{} }
func (m *PprofBlockProfileRequest) String() string { return proto.CompactTextString(m) }
func (*PprofBlockProfileRequest) ProtoMessage()    {}
func (*PprofBlockProfileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{86}
}
func (m *PprofBlockProfileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PprofBlockProfileRequest.Unmarshal(m, b)
}
func (m *PprofBlockProfileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PprofBlockProfileRequest.Marshal(b, m, deterministic)
}
func (dst *PprofBlockProfileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PprofBlockProfileRequest.Merge(dst, src)
}
func (m *PprofBlockProfileRequest) XXX_Size() int {
	return xxx_messageInfo_PprofBlockProfileRequest.Size(m)
}
func (m *PprofBlockProfileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PprofBlockProfileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PprofBlockProfileRequest proto.InternalMessageInfo

func (m *PprofBlockProfileRequest) GetDebug() bool {
	if m != nil {
		return m.Debug
	}
	return false
}

type PprofCpuProfileRequest struct {
	Seconds              int64    `protobuf:"varint,1,opt,name=seconds,proto3" json:"seconds,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PprofCpuProfileRequest) Reset()         { *m = PprofCpuProfileRequest{} }
func (m *PprofCpuProfileRequest) String() string { return proto.CompactTextString(m) }
func (*PprofCpuProfileRequest) ProtoMessage()    {}
func (*PprofCpuProfileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{87}
}
func (m *PprofCpuProfileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PprofCpuProfileRequest.Unmarshal(m, b)
}
func (m *PprofCpuProfileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PprofCpuProfileRequest.Marshal(b, m, deterministic)
}
func (dst *PprofCpuProfileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PprofCpuProfileRequest.Merge(dst, src)
}
func (m *PprofCpuProfileRequest) XXX_Size() int {
	return xxx_messageInfo_PprofCpuProfileRequest.Size(m)
}
func (m *PprofCpuProfileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PprofCpuProfileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PprofCpuProfileRequest proto.InternalMessageInfo

func (m *PprofCpuProfileRequest) GetSeconds() int64 {
	if m != nil {
		return m.Seconds
	}
	return 0
}

type PprofHeapProfileRequest struct {
	Gc                   bool     `protobuf:"varint,1,opt,name=gc,proto3" json:"gc,omitempty"`
	Debug                bool     `protobuf:"varint,2,opt,name=debug,proto3" json:"debug,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PprofHeapProfileRequest) Reset()         { *m = PprofHeapProfileRequest{} }
func (m *PprofHeapProfileRequest) String() string { return proto.CompactTextString(m) }
func (*PprofHeapProfileRequest) ProtoMessage()    {}
func (*PprofHeapProfileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{88}
}
func (m *PprofHeapProfileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PprofHeapProfileRequest.Unmarshal(m, b)
}
func (m *PprofHeapProfileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PprofHeapProfileRequest.Marshal(b, m, deterministic)
}
func (dst *PprofHeapProfileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PprofHeapProfileRequest.Merge(dst, src)
}
func (m *PprofHeapProfileRequest) XXX_Size() int {
	return xxx_messageInfo_PprofHeapProfileRequest.Size(m)
}
func (m *PprofHeapProfileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PprofHeapProfileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PprofHeapProfileRequest proto.InternalMessageInfo

func (m *PprofHeapProfileRequest) GetGc() bool {
	if m != nil {
		return m.Gc
	}
	return false
}

func (m *PprofHeapProfileRequest) GetDebug() bool {
	if m != nil {
		return m.Debug
	}
	return false
}

type PprofMutexProfileRequest struct {
	Debug                bool     `protobuf:"varint,1,opt,name=debug,proto3" json:"debug,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PprofMutexProfileRequest) Reset()         { *m = PprofMutexProfileRequest{} }
func (m *PprofMutexProfileRequest) String() string { return proto.CompactTextString(m) }
func (*PprofMutexProfileRequest) ProtoMessage()    {}
func (*PprofMutexProfileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{89}
}
func (m *PprofMutexProfileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PprofMutexProfileRequest.Unmarshal(m, b)
}
func (m *PprofMutexProfileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PprofMutexProfileRequest.Marshal(b, m, deterministic)
}
func (dst *PprofMutexProfileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PprofMutexProfileRequest.Merge(dst, src)
}
func (m *PprofMutexProfileRequest) XXX_Size() int {
	return xxx_messageInfo_PprofMutexProfileRequest.Size(m)
}
func (m *PprofMutexProfileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PprofMutexProfileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PprofMutexProfileRequest proto.InternalMessageInfo

func (m *PprofMutexProfileRequest) GetDebug() bool {
	if m != nil {
		return m.Debug
	}
	return false
}

type PprofResponse struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Profile              []byte   `protobuf:"bytes,2,opt,name=profile,proto3" json:"profile,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PprofResponse) Reset()         { *m = PprofResponse{} }
func (m *PprofResponse) String() string { return proto.CompactTextString(m) }
func (*PprofResponse) ProtoMessage()    {}
func (*PprofResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{90}
}
func (m *PprofResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PprofResponse.Unmarshal(m, b)
}
func (m *PprofResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PprofResponse.Marshal(b, m, deterministic)
}
func (dst *PprofResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PprofResponse.Merge(dst, src)
}
func (m *PprofResponse) XXX_Size() int {
	return xxx_messageInfo_PprofResponse.Size(m)
}
func (m *PprofResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PprofResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PprofResponse proto.InternalMessageInfo

func (m *PprofResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PprofResponse) GetProfile() []byte {
	if m != nil {
		return m.Profile
	}
	return nil
}

func init() {
	proto.RegisterType((*Command)(nil), "api.Command")
	proto.RegisterType((*Audio)(nil), "api.Audio")
	proto.RegisterType((*Audio2)(nil), "api.Audio2")
	proto.RegisterType((*ReadMeta)(nil), "api.ReadMeta")
	proto.RegisterType((*WriteMeta)(nil), "api.WriteMeta")
	proto.RegisterType((*AppendMeta)(nil), "api.AppendMeta")
	proto.RegisterType((*BootStatus)(nil), "api.BootStatus")
	proto.RegisterType((*Pid1Config)(nil), "api.Pid1Config")
	proto.RegisterMapType((map[string]string)(nil), "api.Pid1Config.EnvEntry")
	proto.RegisterType((*FSLock)(nil), "api.FSLock")
	proto.RegisterType((*FSSnapshot)(nil), "api.FSSnapshot")
	proto.RegisterType((*SubscribeFile)(nil), "api.SubscribeFile")
	proto.RegisterType((*FileEvent)(nil), "api.FileEvent")
	proto.RegisterType((*Flush)(nil), "api.Flush")
	proto.RegisterType((*OTLinkFile)(nil), "api.OTLinkFile")
	proto.RegisterType((*Auth)(nil), "api.Auth")
	proto.RegisterType((*VCREntry)(nil), "api.VCREntry")
	proto.RegisterType((*StartVCR)(nil), "api.StartVCR")
	proto.RegisterType((*ReadVCR)(nil), "api.ReadVCR")
	proto.RegisterType((*VCRLog)(nil), "api.VCRLog")
	proto.RegisterType((*ExecInfo)(nil), "api.ExecInfo")
	proto.RegisterType((*Debug)(nil), "api.Debug")
	proto.RegisterType((*FileAuthReq)(nil), "api.FileAuthReq")
	proto.RegisterType((*MultiFileAuthRes)(nil), "api.MultiFileAuthRes")
	proto.RegisterType((*FileAuthRes)(nil), "api.FileAuthRes")
	proto.RegisterType((*ListObjects)(nil), "api.ListObjects")
	proto.RegisterType((*ListObjectsResp)(nil), "api.ListObjectsResp")
	proto.RegisterType((*Disconnect)(nil), "api.Disconnect")
	proto.RegisterType((*Send)(nil), "api.Send")
	proto.RegisterType((*Recv)(nil), "api.Recv")
	proto.RegisterType((*Connect)(nil), "api.Connect")
	proto.RegisterType((*Hint)(nil), "api.Hint")
	proto.RegisterType((*Ping)(nil), "api.Ping")
	proto.RegisterType((*Pong)(nil), "api.Pong")
	proto.RegisterType((*Hello)(nil), "api.Hello")
	proto.RegisterType((*Goodbye)(nil), "api.Goodbye")
	proto.RegisterType((*CheckChanges)(nil), "api.CheckChanges")
	proto.RegisterType((*EnsurePackages)(nil), "api.EnsurePackages")
	proto.RegisterType((*Start)(nil), "api.Start")
	proto.RegisterType((*DebugStatus)(nil), "api.DebugStatus")
	proto.RegisterType((*StackFrame)(nil), "api.StackFrame")
	proto.RegisterType((*ContainedTest)(nil), "api.ContainedTest")
	proto.RegisterType((*TestResult)(nil), "api.TestResult")
	proto.RegisterType((*TestFailure)(nil), "api.TestFailure")
	proto.RegisterType((*ResizeTerm)(nil), "api.ResizeTerm")
	proto.RegisterType((*SaneTerm)(nil), "api.SaneTerm")
	proto.RegisterType((*LintResults)(nil), "api.LintResults")
	proto.RegisterType((*LintResult)(nil), "api.LintResult")
	proto.RegisterType((*OK)(nil), "api.OK")
	proto.RegisterType((*Move)(nil), "api.Move")
	proto.RegisterType((*Files)(nil), "api.Files")
	proto.RegisterType((*File)(nil), "api.File")
	proto.RegisterType((*Clear)(nil), "api.Clear")
	proto.RegisterType((*Toast)(nil), "api.Toast")
	proto.RegisterType((*RunMain)(nil), "api.RunMain")
	proto.RegisterType((*OpenChannel)(nil), "api.OpenChannel")
	proto.RegisterType((*OpenChannelRes)(nil), "api.OpenChannelRes")
	proto.RegisterType((*CloseChannel)(nil), "api.CloseChannel")
	proto.RegisterType((*CloseChannelRes)(nil), "api.CloseChannelRes")
	proto.RegisterType((*ContainerState)(nil), "api.ContainerState")
	proto.RegisterType((*PortOpen)(nil), "api.PortOpen")
	proto.RegisterType((*OTFetchRequest)(nil), "api.OTFetchRequest")
	proto.RegisterType((*OTFetchResponse)(nil), "api.OTFetchResponse")
	proto.RegisterType((*OTPacket)(nil), "api.OTPacket")
	proto.RegisterType((*OTRuneTransformOp)(nil), "api.OTRuneTransformOp")
	proto.RegisterType((*OTStatus)(nil), "api.OTStatus")
	proto.RegisterType((*OTCursor)(nil), "api.OTCursor")
	proto.RegisterType((*ChatMessage)(nil), "api.ChatMessage")
	proto.RegisterType((*ChatTyping)(nil), "api.ChatTyping")
	proto.RegisterType((*User)(nil), "api.User")
	proto.RegisterType((*Roster)(nil), "api.Roster")
	proto.RegisterType((*Exec)(nil), "api.Exec")
	proto.RegisterMapType((map[string]string)(nil), "api.Exec.EnvEntry")
	proto.RegisterType((*Package)(nil), "api.Package")
	proto.RegisterType((*PackageSearch)(nil), "api.PackageSearch")
	proto.RegisterType((*PackageSearchResp)(nil), "api.PackageSearchResp")
	proto.RegisterType((*PackageInfo)(nil), "api.PackageInfo")
	proto.RegisterType((*PackageInfoResp)(nil), "api.PackageInfoResp")
	proto.RegisterType((*PackageAdd)(nil), "api.PackageAdd")
	proto.RegisterType((*PackageRemove)(nil), "api.PackageRemove")
	proto.RegisterType((*PackageInstall)(nil), "api.PackageInstall")
	proto.RegisterType((*PackageListSpecfile)(nil), "api.PackageListSpecfile")
	proto.RegisterType((*PackageListSpecfileResp)(nil), "api.PackageListSpecfileResp")
	proto.RegisterType((*PackageCacheSave)(nil), "api.PackageCacheSave")
	proto.RegisterType((*ChatScrollback)(nil), "api.ChatScrollback")
	proto.RegisterType((*Metrics)(nil), "api.Metrics")
	proto.RegisterType((*PprofRequest)(nil), "api.PprofRequest")
	proto.RegisterType((*PprofAllocsProfileRequest)(nil), "api.PprofAllocsProfileRequest")
	proto.RegisterType((*PprofBlockProfileRequest)(nil), "api.PprofBlockProfileRequest")
	proto.RegisterType((*PprofCpuProfileRequest)(nil), "api.PprofCpuProfileRequest")
	proto.RegisterType((*PprofHeapProfileRequest)(nil), "api.PprofHeapProfileRequest")
	proto.RegisterType((*PprofMutexProfileRequest)(nil), "api.PprofMutexProfileRequest")
	proto.RegisterType((*PprofResponse)(nil), "api.PprofResponse")
	proto.RegisterEnum("api.FileAuthMethod", FileAuthMethod_name, FileAuthMethod_value)
	proto.RegisterEnum("api.State", State_name, State_value)
	proto.RegisterEnum("api.BootStatus_Stage", BootStatus_Stage_name, BootStatus_Stage_value)
	proto.RegisterEnum("api.FileEvent_Op", FileEvent_Op_name, FileEvent_Op_value)
	proto.RegisterEnum("api.VCREntry_Direction", VCREntry_Direction_name, VCREntry_Direction_value)
	proto.RegisterEnum("api.File_Type", File_Type_name, File_Type_value)
	proto.RegisterEnum("api.OpenChannel_Action", OpenChannel_Action_name, OpenChannel_Action_value)
	proto.RegisterEnum("api.OpenChannelRes_State", OpenChannelRes_State_name, OpenChannelRes_State_value)
	proto.RegisterEnum("api.CloseChannel_Action", CloseChannel_Action_name, CloseChannel_Action_value)
	proto.RegisterEnum("api.CloseChannelRes_Status", CloseChannelRes_Status_name, CloseChannelRes_Status_value)
	proto.RegisterEnum("api.ContainerState_State", ContainerState_State_name, ContainerState_State_value)
}

func init() { proto.RegisterFile("api.proto", fileDescriptor_00212fb1f9d3bf1c) }

var fileDescriptor_00212fb1f9d3bf1c = []byte{
	// 4584 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x7a, 0x5b, 0x73, 0x1c, 0xc7,
	0x75, 0x3f, 0x66, 0xf6, 0x02, 0xec, 0x01, 0xb0, 0x5c, 0xb6, 0x68, 0xb2, 0x45, 0x5d, 0x08, 0x8d,
	0x4c, 0x0a, 0x92, 0x6c, 0x90, 0x84, 0x64, 0x8b, 0x7f, 0xca, 0xd6, 0xdf, 0xe0, 0x62, 0xc1, 0xa5,
	0x05, 0x10, 0x70, 0x63, 0xa9, 0x98, 0x72, 0xca, 0xca, 0x60, 0xa6, 0xb1, 0x18, 0xef, 0xec, 0xf4,
	0x78, 0x66, 0x16, 0x24, 0x9c, 0x54, 0xca, 0x49, 0x39, 0xa9, 0x3c, 0xe5, 0x29, 0xe5, 0x58, 0xb9,
	0x38, 0xf6, 0x77, 0x48, 0xc5, 0xf9, 0x08, 0x89, 0x73, 0x7b, 0x71, 0xe5, 0x21, 0x95, 0xd8, 0x49,
	0x1e, 0x12, 0x39, 0x4a, 0x52, 0xc9, 0x6b, 0x1c, 0xdb, 0xa9, 0xd3, 0xdd, 0x33, 0xd3, 0xb3, 0x58,
	0x84, 0xae, 0x3c, 0x4d, 0x9f, 0x73, 0x7e, 0x7d, 0xfa, 0x76, 0xfa, 0xf4, 0xe9, 0x3e, 0x03, 0x2d,
	0x37, 0x0e, 0xd6, 0xe2, 0x44, 0x64, 0x82, 0xd4, 0xdc, 0x38, 0xb8, 0x7c, 0x65, 0x28, 0xc4, 0x30,
	0xe4, 0xd7, 0x25, 0xeb, 0x60, 0x72, 0x78, 0x3d, 0x0b, 0xc6, 0x3c, 0xcd, 0xdc, 0x71, 0xac, 0x50,
	0xce, 0xf7, 0xae, 0xc2, 0x7c, 0x57, 0x8c, 0xc7, 0x6e, 0xe4, 0x13, 0x0a, 0xf3, 0xde, 0x91, 0x1b,
	0x45, 0x3c, 0xa4, 0xd6, 0x8a, 0xb5, 0xda, 0x60, 0x39, 0x89, 0x92, 0x94, 0xa7, 0x69, 0x20, 0x22,
	0x6a, 0x2b, 0x89, 0x26, 0xc9, 0x1a, 0x2c, 0x88, 0x98, 0x47, 0xdd, 0x23, 0x37, 0xa2, 0xb5, 0x15,
	0x6b, 0x75, 0x71, 0xbd, 0xb3, 0x86, 0x7d, 0xd8, 0xd5, 0xcc, 0x88, 0x87, 0xfd, 0x39, 0x56, 0x60,
	0xc8, 0x1b, 0xb0, 0x98, 0x97, 0x19, 0x4f, 0x69, 0x5d, 0x56, 0x79, 0x6a, 0xba, 0x0a, 0xe3, 0x69,
	0x7f, 0x8e, 0x99, 0x48, 0x72, 0x13, 0x5a, 0x5e, 0x28, 0x52, 0x2e, 0x5b, 0x6a, 0xc8, 0x6a, 0xe7,
	0x65, 0xb5, 0x6e, 0xce, 0x55, 0x4d, 0x95, 0x28, 0x72, 0x1b, 0x96, 0x0a, 0x02, 0x1b, 0x6b, 0xca,
	0x5a, 0x17, 0x4e, 0xd5, 0x52, 0xad, 0x55, 0xb0, 0xe4, 0xd3, 0xd0, 0xf6, 0x44, 0x94, 0xb9, 0x41,
	0xc4, 0x93, 0xfd, 0xcc, 0xcd, 0x38, 0x6d, 0x19, 0x5d, 0xed, 0x56, 0x44, 0xfd, 0x39, 0x36, 0x05,
	0x26, 0xaf, 0xc2, 0x42, 0x2c, 0x92, 0x0c, 0x87, 0x44, 0x41, 0x56, 0x5c, 0x96, 0x15, 0xf7, 0x34,
	0x13, 0xe7, 0x24, 0x07, 0x10, 0x07, 0x1a, 0x99, 0x70, 0xd3, 0x8c, 0x2e, 0x4a, 0x24, 0x48, 0xe4,
	0x00, 0x39, 0xfd, 0x39, 0xa6, 0x44, 0x64, 0x15, 0xe6, 0x93, 0x49, 0xb4, 0xe3, 0x06, 0x11, 0xed,
	0x48, 0xd4, 0x92, 0x44, 0x31, 0xc5, 0xeb, 0xcf, 0xb1, 0x5c, 0x8c, 0xda, 0xbc, 0x90, 0xbb, 0x09,
	0x3d, 0x6f, 0x68, 0xeb, 0x22, 0x07, 0xb5, 0x49, 0x11, 0xb9, 0x00, 0x75, 0x7e, 0xec, 0x86, 0xf4,
	0xc2, 0x8a, 0xb5, 0xda, 0xea, 0xcf, 0x31, 0x49, 0x11, 0x0a, 0xcd, 0x84, 0xa7, 0x93, 0x30, 0xa3,
	0x1f, 0xd1, 0x7c, 0x4d, 0x93, 0x8b, 0xd0, 0x08, 0xa2, 0x78, 0x92, 0xd1, 0x8b, 0x5a, 0xa0, 0x48,
	0xac, 0x21, 0x26, 0x19, 0x0a, 0x2e, 0xe5, 0x35, 0x14, 0x8d, 0x35, 0x78, 0x92, 0x88, 0x84, 0xd2,
	0xbc, 0x86, 0x24, 0x71, 0x62, 0x52, 0x37, 0xe2, 0x03, 0x9e, 0x8c, 0xe9, 0x65, 0x63, 0x62, 0xf6,
	0x35, 0x13, 0x27, 0x26, 0x07, 0x90, 0x9b, 0x00, 0x09, 0x4f, 0x83, 0xaf, 0x28, 0xf8, 0x33, 0x12,
	0x7e, 0x4e, 0x8d, 0xbb, 0x60, 0xf7, 0xe7, 0x98, 0x01, 0xc2, 0xd1, 0xa7, 0x72, 0xb9, 0x9e, 0x5d,
	0xb1, 0x56, 0xdb, 0x7a, 0xf4, 0xf9, 0x2a, 0x29, 0x11, 0x79, 0x1a, 0x6c, 0x31, 0xa2, 0xcf, 0x4b,
	0x75, 0xf3, 0xca, 0xf4, 0xde, 0xee, 0xcf, 0x31, 0x5b, 0x8c, 0xc8, 0x55, 0x98, 0x8f, 0x79, 0x92,
	0x06, 0x69, 0x46, 0xaf, 0x48, 0x79, 0x4b, 0xca, 0xb7, 0x82, 0x10, 0xeb, 0xe7, 0x32, 0x72, 0x13,
	0x96, 0x75, 0x71, 0x27, 0x90, 0xa3, 0x7c, 0xf9, 0x34, 0xb8, 0x8a, 0x20, 0x2f, 0x40, 0xe3, 0x51,
	0x12, 0x64, 0x9c, 0xae, 0x9c, 0x86, 0x2a, 0x09, 0x79, 0x11, 0xe7, 0x7f, 0x2c, 0x8e, 0x39, 0x7d,
	0xe1, 0x34, 0x46, 0x8b, 0xc8, 0x15, 0xa8, 0x4b, 0x88, 0x63, 0x40, 0x76, 0xc4, 0x31, 0x42, 0xa4,
	0x80, 0xbc, 0x0c, 0xad, 0x2c, 0x39, 0x61, 0x4a, 0xd1, 0x47, 0x4f, 0x2b, 0x2a, 0xa5, 0xd8, 0xa7,
	0xf1, 0xc8, 0x0f, 0x12, 0xfa, 0xd2, 0x8c, 0x3e, 0x49, 0x09, 0x36, 0x97, 0x70, 0xd7, 0xa7, 0x2f,
	0x9e, 0x46, 0x48, 0x01, 0xce, 0x18, 0x7e, 0x51, 0xcb, 0xd5, 0x19, 0x33, 0xa6, 0x65, 0xb8, 0x2e,
	0x87, 0x41, 0xc8, 0x53, 0x7a, 0xcd, 0xb0, 0x4a, 0x04, 0xe1, 0xd6, 0x53, 0x22, 0x6c, 0x0b, 0x0b,
	0x74, 0x75, 0x46, 0x5b, 0x28, 0x20, 0x6f, 0xc0, 0x92, 0x77, 0xc4, 0xbd, 0x11, 0x6e, 0xd2, 0x21,
	0x4f, 0xe9, 0x2b, 0xa6, 0x1b, 0x30, 0x04, 0x72, 0x37, 0x1b, 0x34, 0xb9, 0x81, 0x15, 0xb1, 0xe8,
	0xcb, 0x26, 0xe9, 0xab, 0x33, 0x3a, 0x51, 0x41, 0x90, 0xd7, 0x61, 0x31, 0x0c, 0xa2, 0x8c, 0x49,
	0xfb, 0x4f, 0xe9, 0xc7, 0x0c, 0xd7, 0xb6, 0x5d, 0xf2, 0xd1, 0x49, 0x19, 0x30, 0xf2, 0x19, 0xe8,
	0x24, 0x93, 0x28, 0xf7, 0x0e, 0xfe, 0x80, 0xa7, 0x19, 0xdd, 0x92, 0x55, 0x49, 0xc5, 0x6f, 0x48,
	0x49, 0x7f, 0x8e, 0x9d, 0x42, 0xa3, 0xc9, 0x67, 0x3c, 0xd5, 0x0a, 0xe9, 0x5d, 0xc3, 0xe4, 0x07,
	0x05, 0x1b, 0x4d, 0xbe, 0x04, 0x91, 0x6b, 0xb0, 0xec, 0xf3, 0x83, 0xc9, 0x70, 0x28, 0x9d, 0x4f,
	0x92, 0xd1, 0x77, 0xf5, 0x96, 0xab, 0xb2, 0xc9, 0x3a, 0x2c, 0x95, 0x0c, 0x1e, 0xd3, 0x2f, 0xcc,
	0xf4, 0x23, 0x15, 0x0c, 0xb9, 0x0d, 0x6d, 0x43, 0x49, 0x36, 0x49, 0xe9, 0xcf, 0x1b, 0x33, 0xb1,
	0x89, 0x22, 0xc5, 0x47, 0x1f, 0x58, 0x45, 0xa2, 0x0b, 0xe5, 0x51, 0x3a, 0x49, 0xf8, 0x9e, 0xeb,
	0x8d, 0x5c, 0x5c, 0x2f, 0xdf, 0x70, 0xa1, 0xbd, 0x8a, 0x08, 0xab, 0x57, 0xc1, 0x68, 0x0d, 0x71,
	0x10, 0x0d, 0xe9, 0x63, 0xc3, 0x1a, 0xf6, 0x82, 0x68, 0x88, 0xd6, 0x80, 0x02, 0x09, 0x10, 0xd1,
	0x90, 0x9e, 0x98, 0x00, 0xa1, 0x01, 0x22, 0x1a, 0xa2, 0xcd, 0x1d, 0xf1, 0x30, 0x14, 0xf4, 0x2b,
	0xc6, 0x72, 0xf7, 0x91, 0x83, 0x36, 0x27, 0x45, 0xe8, 0x57, 0x87, 0x42, 0xf8, 0x07, 0x27, 0x9c,
	0xfe, 0xa2, 0x31, 0x1f, 0x77, 0x15, 0x0f, 0x2d, 0x58, 0x8b, 0xc9, 0x0a, 0xd4, 0x8f, 0x82, 0x28,
	0xa3, 0xbf, 0x6a, 0x19, 0xed, 0xf5, 0x83, 0x08, 0x97, 0x43, 0x4a, 0xc8, 0xcb, 0x30, 0xef, 0x89,
	0x28, 0xe2, 0x5e, 0x46, 0xbf, 0x6e, 0x19, 0xca, 0xba, 0x8a, 0x89, 0xca, 0xb4, 0x1c, 0x95, 0xa5,
	0x3c, 0xf2, 0xe9, 0x6f, 0x9b, 0xca, 0xf6, 0x79, 0xe4, 0xa3, 0x32, 0x94, 0x20, 0x22, 0xe1, 0xde,
	0x31, 0xfd, 0x86, 0x89, 0x60, 0xdc, 0x3b, 0x56, 0x3b, 0xcf, 0x3b, 0x26, 0xeb, 0x00, 0x7e, 0x90,
	0xe6, 0x2d, 0xbe, 0x6f, 0x19, 0xb6, 0xb2, 0x59, 0xf0, 0xd1, 0x56, 0x4a, 0x14, 0xf9, 0x04, 0x2c,
	0xe2, 0x4e, 0xda, 0x98, 0x64, 0x47, 0x8c, 0x7f, 0x99, 0xfe, 0x89, 0x65, 0xac, 0xe6, 0x56, 0x29,
	0x40, 0xbb, 0x36, 0x70, 0xd5, 0x6a, 0x29, 0xfd, 0xd3, 0xd9, 0xd5, 0xd2, 0x6a, 0xb5, 0x94, 0x6c,
	0x42, 0x67, 0x3c, 0xc9, 0xc2, 0xc0, 0x80, 0xd0, 0xef, 0xaa, 0xba, 0x1f, 0x51, 0x8e, 0x6b, 0x12,
	0x66, 0x41, 0x55, 0xc1, 0xa9, 0x1a, 0xd8, 0x78, 0x18, 0xa4, 0xd9, 0xee, 0xc1, 0x97, 0xb8, 0x97,
	0xa5, 0xf4, 0x2f, 0xac, 0xca, 0x5e, 0x2c, 0x04, 0x6a, 0x2f, 0x16, 0x24, 0xd9, 0x80, 0x73, 0x06,
	0xc9, 0x78, 0x1a, 0xd3, 0xbf, 0xb4, 0x8c, 0x08, 0x60, 0xbb, 0x2a, 0xec, 0xcf, 0xb1, 0x69, 0x3c,
	0x59, 0x01, 0x5b, 0x64, 0xf4, 0x6f, 0x2d, 0xe3, 0x9c, 0xda, 0x1d, 0xa0, 0x81, 0xf2, 0x4c, 0x9e,
	0x17, 0x19, 0xf9, 0x18, 0x2c, 0x88, 0x2c, 0x55, 0x3b, 0xe3, 0xef, 0xaa, 0xb8, 0x62, 0x5f, 0x14,
	0x08, 0x5c, 0x31, 0x91, 0x6d, 0x07, 0xd1, 0x08, 0x87, 0x47, 0xbf, 0x6f, 0xae, 0xd8, 0xee, 0x20,
	0xe7, 0xe3, 0x8a, 0x95, 0x28, 0xb2, 0x0e, 0x8b, 0x22, 0xbb, 0xcf, 0x1f, 0x75, 0x27, 0x49, 0x2a,
	0x12, 0xfa, 0x83, 0x6a, 0x23, 0x8a, 0x2b, 0x63, 0xa5, 0x12, 0x44, 0x6e, 0x41, 0x5b, 0x64, 0x9b,
	0x3c, 0xe4, 0x19, 0xd7, 0xd5, 0xfe, 0xfe, 0x8c, 0x6a, 0x53, 0x38, 0xf2, 0x16, 0xd6, 0xdc, 0xe2,
	0x99, 0x87, 0xcb, 0x3e, 0x41, 0xf7, 0xf5, 0x0f, 0x96, 0x19, 0xa2, 0x0d, 0x4c, 0x99, 0xaa, 0x6f,
	0x72, 0x70, 0xd2, 0x0b, 0x4e, 0x1a, 0x8b, 0x28, 0xe5, 0xf4, 0x1f, 0xcd, 0x49, 0x2f, 0x14, 0x28,
	0x21, 0x4e, 0xfa, 0x14, 0x9e, 0xbc, 0x08, 0x8d, 0xc3, 0x70, 0x92, 0x1e, 0xd1, 0x1f, 0x59, 0xa6,
	0x97, 0x46, 0x96, 0x3c, 0x2a, 0xb0, 0x80, 0x20, 0xe9, 0x6d, 0xe8, 0x3f, 0x99, 0x20, 0xe9, 0x8f,
	0x10, 0x24, 0x65, 0xb8, 0x38, 0x29, 0x7a, 0xbe, 0x77, 0xba, 0x8c, 0xfe, 0xb3, 0x39, 0x01, 0xfb,
	0x9a, 0x2b, 0x83, 0x0d, 0x5d, 0xc6, 0xdd, 0x8b, 0x87, 0x15, 0x82, 0x3f, 0x30, 0x77, 0x2f, 0x53,
	0xcc, 0xfc, 0x30, 0x43, 0xe8, 0x35, 0x68, 0xbe, 0xd3, 0x65, 0xdb, 0x62, 0x48, 0x7f, 0xa8, 0x90,
	0x8b, 0x12, 0xa9, 0x78, 0x78, 0x56, 0xab, 0x12, 0xee, 0x61, 0x77, 0x92, 0x1d, 0xd1, 0x0f, 0xcd,
	0x3d, 0x8c, 0x66, 0x8d, 0x7b, 0x18, 0x25, 0xd8, 0x45, 0xfe, 0x98, 0x7b, 0xf7, 0xa2, 0x43, 0x41,
	0xff, 0xc3, 0xec, 0x62, 0x4f, 0x73, 0xb1, 0x8b, 0x39, 0x82, 0xbc, 0x09, 0xcb, 0xe9, 0xe4, 0x20,
	0xf5, 0x92, 0xe0, 0x80, 0x4b, 0x13, 0xfa, 0xaa, 0x6d, 0x1c, 0x2e, 0xfb, 0xa6, 0x08, 0xdd, 0x7f,
	0x05, 0x4b, 0xae, 0x43, 0x0b, 0xf7, 0x66, 0xef, 0x98, 0x47, 0x19, 0xfd, 0x15, 0x55, 0xb1, 0x5d,
	0xec, 0x60, 0xc9, 0xc6, 0xe8, 0xa0, 0xc0, 0xe0, 0x28, 0x13, 0x91, 0x66, 0x3c, 0xa1, 0x5f, 0xb3,
	0x8d, 0x51, 0x32, 0xc9, 0x93, 0x11, 0x89, 0x2c, 0xe1, 0x28, 0xbf, 0x24, 0x82, 0x88, 0xfe, 0x9a,
	0x6d, 0x8c, 0xf2, 0x41, 0x2a, 0x31, 0x52, 0x82, 0x88, 0x18, 0x0f, 0xa6, 0x5f, 0x9f, 0x85, 0x40,
	0x09, 0x22, 0x70, 0x94, 0xf4, 0x37, 0x4d, 0x04, 0xce, 0x81, 0x0c, 0x4e, 0x1f, 0x73, 0x0f, 0xc7,
	0x1e, 0xab, 0xa3, 0x61, 0x9f, 0xbb, 0x89, 0x77, 0x44, 0xbf, 0x61, 0x8e, 0x7d, 0xcf, 0x14, 0xc9,
	0xe0, 0xcb, 0x64, 0x90, 0xbb, 0x70, 0xbe, 0xc2, 0x90, 0xde, 0xe0, 0x7d, 0xa5, 0xe0, 0xe2, 0x69,
	0x05, 0xda, 0x1f, 0x9c, 0xae, 0x83, 0xbe, 0x48, 0x33, 0xe5, 0x92, 0xfd, 0x8e, 0x6d, 0xf8, 0xa2,
	0xbd, 0x52, 0x80, 0x1b, 0xd2, 0xc0, 0xe1, 0xb6, 0x30, 0x48, 0xd9, 0xfa, 0xef, 0xda, 0xc6, 0xb6,
	0xd8, 0xab, 0x0a, 0x71, 0x5b, 0x4c, 0xe1, 0xd1, 0x77, 0x68, 0xd6, 0x86, 0xef, 0xd3, 0xdf, 0xb3,
	0x0d, 0xdf, 0xb1, 0x57, 0xf0, 0xd1, 0x77, 0x94, 0x28, 0x63, 0xce, 0x74, 0x38, 0xf8, 0xfb, 0x33,
	0xe6, 0x4c, 0x89, 0x8c, 0x39, 0xd3, 0xc1, 0xe1, 0x5b, 0xd0, 0x2e, 0xfa, 0x90, 0x66, 0x6e, 0x18,
	0xd2, 0x6f, 0xda, 0x86, 0x2b, 0xd8, 0xab, 0xc8, 0xd0, 0x15, 0x54, 0xd1, 0x64, 0x07, 0x9e, 0xd2,
	0x1c, 0xf4, 0xb4, 0xfb, 0x31, 0xf7, 0x64, 0x70, 0xf7, 0x07, 0x4a, 0x09, 0x35, 0x95, 0x98, 0x80,
	0xfe, 0x1c, 0x9b, 0x55, 0x8f, 0x3c, 0x84, 0x4b, 0x33, 0xd8, 0x72, 0x2a, 0xbf, 0xa5, 0x54, 0x3e,
	0x7b, 0x96, 0x4a, 0x3d, 0xa5, 0x67, 0xd5, 0xc7, 0x63, 0x4a, 0x8b, 0xba, 0xae, 0x77, 0xc4, 0xf7,
	0xdd, 0x63, 0x4e, 0xbf, 0x6d, 0x1b, 0xc7, 0xd4, 0xde, 0x94, 0x14, 0x8f, 0xa9, 0xe9, 0x1a, 0x68,
	0x1a, 0xde, 0x91, 0x9b, 0xed, 0xf0, 0x34, 0x75, 0x87, 0x9c, 0xfe, 0x91, 0x69, 0x1a, 0xdd, 0x52,
	0x80, 0xa6, 0x61, 0xe0, 0x70, 0x5d, 0x91, 0x1c, 0x9c, 0xc8, 0x60, 0xe7, 0x3b, 0xe6, 0xba, 0x76,
	0x0b, 0x3e, 0xae, 0x6b, 0x89, 0xc2, 0xa5, 0x41, 0x6a, 0xdf, 0x4b, 0x44, 0x18, 0x1e, 0xb8, 0xde,
	0x88, 0xfe, 0xb1, 0xb9, 0x34, 0xdd, 0x8a, 0x4c, 0xde, 0x4e, 0x2b, 0x1c, 0x6c, 0xf3, 0x30, 0xdd,
	0x8f, 0xdc, 0x38, 0x3d, 0x12, 0x19, 0xfd, 0xae, 0xd9, 0xe6, 0xd6, 0x7e, 0xce, 0xc7, 0x36, 0x4b,
	0x14, 0x59, 0xc3, 0x3a, 0x03, 0x77, 0xc4, 0xb7, 0x85, 0x37, 0xa2, 0x7f, 0x66, 0x7a, 0x84, 0xad,
	0x7d, 0xe4, 0x29, 0x7c, 0x8e, 0x20, 0xaf, 0xc3, 0xf2, 0x61, 0xca, 0x78, 0xc8, 0xdd, 0x54, 0x55,
	0xf9, 0xf3, 0x99, 0x55, 0xaa, 0x20, 0xf2, 0x34, 0x34, 0x8f, 0xdc, 0xb4, 0xeb, 0xc6, 0xf4, 0xaf,
	0x10, 0xbe, 0x80, 0x6e, 0x46, 0x31, 0xe4, 0x06, 0x08, 0xfc, 0x9b, 0x5d, 0x11, 0x1d, 0x06, 0x43,
	0xfa, 0xbd, 0xca, 0x06, 0x28, 0xf8, 0x72, 0x03, 0x14, 0x14, 0xfa, 0xf4, 0x31, 0xcf, 0x92, 0xc0,
	0x4b, 0xe9, 0xf7, 0x6d, 0xc3, 0xa7, 0xef, 0x28, 0x26, 0xfa, 0x74, 0x2d, 0x47, 0xf5, 0x07, 0x42,
	0x64, 0x3a, 0xca, 0xfd, 0x81, 0xa9, 0xfe, 0x4e, 0xc1, 0x47, 0xf5, 0x25, 0x0a, 0xbd, 0x37, 0x1e,
	0x09, 0x3b, 0x3c, 0x73, 0xe9, 0x07, 0xb6, 0xe1, 0xbd, 0x99, 0xe6, 0xa2, 0xf7, 0xce, 0x11, 0xe8,
	0x80, 0xe5, 0x3d, 0x4f, 0xc2, 0x7f, 0x68, 0x3a, 0xe0, 0x9f, 0xcb, 0xd9, 0xe8, 0x80, 0x0b, 0x0c,
	0x76, 0xc9, 0x8d, 0x63, 0x1e, 0xa9, 0x06, 0xfe, 0xc5, 0xec, 0xd2, 0x46, 0xc1, 0xc7, 0x2e, 0x95,
	0x28, 0x3c, 0x18, 0xdd, 0x89, 0x1f, 0x08, 0xfa, 0xa1, 0x6d, 0x1c, 0x8c, 0x1b, 0xc8, 0xc2, 0x83,
	0x51, 0xca, 0xc8, 0x2d, 0x58, 0x8a, 0xe3, 0x44, 0x1c, 0xe6, 0x67, 0xfc, 0xbf, 0xda, 0xc6, 0x45,
	0x6a, 0xcf, 0x90, 0xe0, 0x7d, 0xc0, 0x44, 0x4a, 0x8f, 0xa2, 0x68, 0x7d, 0xba, 0xff, 0x5b, 0xc5,
	0xa3, 0x98, 0x22, 0xe9, 0x51, 0x4c, 0x06, 0x1e, 0x28, 0xb2, 0xfd, 0x75, 0xfa, 0xef, 0xa6, 0x2d,
	0xc8, 0xce, 0xad, 0xe3, 0x4a, 0x2b, 0x29, 0x39, 0x0f, 0xb5, 0x84, 0x1f, 0xd2, 0x0f, 0xe6, 0xf1,
	0x1e, 0xc3, 0xb0, 0x7c, 0xa7, 0x09, 0xf5, 0x03, 0xe1, 0x9f, 0x7c, 0xb6, 0xb9, 0xf0, 0x5f, 0x56,
	0xe7, 0x47, 0xd6, 0x67, 0x9b, 0x0b, 0xff, 0x6d, 0x75, 0x7e, 0x8c, 0xdf, 0x1f, 0x5b, 0x9d, 0x9f,
	0xe0, 0xf7, 0x27, 0x56, 0xe7, 0xa7, 0xf8, 0xfd, 0xa9, 0xd5, 0xf9, 0xaa, 0xed, 0x3c, 0x03, 0x0d,
	0xa9, 0x96, 0x10, 0xa8, 0xfb, 0x6e, 0xe6, 0x52, 0x6b, 0xa5, 0xb6, 0xda, 0x60, 0xb2, 0xec, 0x7c,
	0x12, 0x9a, 0xaa, 0xcd, 0x8a, 0xf4, 0xbc, 0x92, 0xca, 0xb7, 0x2e, 0x77, 0x1c, 0xe3, 0x35, 0x11,
	0x7b, 0x59, 0x63, 0x39, 0xe9, 0xf4, 0x61, 0x21, 0x5f, 0x58, 0xd2, 0x81, 0xda, 0x88, 0x9f, 0xc8,
	0x77, 0xb2, 0x16, 0xc3, 0x22, 0xb9, 0x08, 0x4d, 0xfe, 0x38, 0x48, 0x33, 0x55, 0x6d, 0x81, 0x69,
	0xaa, 0x68, 0xa3, 0xb6, 0x62, 0xad, 0x2e, 0xe9, 0x1e, 0xdc, 0x84, 0x56, 0xb1, 0xe6, 0x33, 0x54,
	0xe5, 0x55, 0x6c, 0xa3, 0xca, 0x3a, 0x40, 0xb9, 0xe8, 0x3f, 0x63, 0x9d, 0xbf, 0xb6, 0x00, 0x4a,
	0xe3, 0x25, 0xaf, 0xca, 0xb7, 0x91, 0x21, 0x97, 0xd5, 0xda, 0xda, 0xb7, 0x95, 0x72, 0x0c, 0x8b,
	0x86, 0x9c, 0x29, 0x0c, 0xb9, 0x0c, 0x0b, 0x71, 0x22, 0x86, 0x09, 0x4f, 0xd5, 0x80, 0x96, 0x59,
	0x41, 0x93, 0x0b, 0xd0, 0xc8, 0x44, 0xe6, 0x86, 0x72, 0x4c, 0xcb, 0x4c, 0x11, 0x4e, 0x00, 0x0d,
	0xa9, 0x81, 0x2c, 0x43, 0xab, 0xbf, 0x71, 0x7f, 0x73, 0xbf, 0xbf, 0xf1, 0x76, 0xaf, 0x33, 0x87,
	0xe4, 0x46, 0xf7, 0x73, 0x0f, 0xee, 0xb1, 0x7b, 0xf7, 0xef, 0x76, 0x6a, 0x64, 0x09, 0x16, 0xba,
	0xbb, 0x3b, 0x7b, 0xdb, 0xbd, 0x41, 0xaf, 0x53, 0x27, 0x2d, 0x68, 0xec, 0xb1, 0xdd, 0xcf, 0x3f,
	0xec, 0x34, 0x48, 0x1b, 0x60, 0xef, 0xc1, 0xf6, 0xf6, 0x7b, 0x5b, 0xf7, 0xb6, 0x7b, 0xfb, 0x9d,
	0x26, 0xd2, 0xdb, 0xbb, 0x1b, 0x9b, 0xef, 0xdd, 0xd9, 0xde, 0xed, 0xbe, 0xdd, 0x99, 0x47, 0x28,
	0xeb, 0x0d, 0xd8, 0xc3, 0xce, 0x82, 0xf3, 0x4d, 0x0b, 0xa0, 0xdc, 0xf4, 0x38, 0x1b, 0xde, 0x23,
	0x3f, 0x9f, 0x0d, 0xef, 0x91, 0x8f, 0xbd, 0x0f, 0xdd, 0x68, 0x38, 0xc1, 0xd1, 0xda, 0x92, 0x5d,
	0xd0, 0xe4, 0x15, 0xa8, 0xf1, 0xe8, 0x98, 0xd6, 0x56, 0x6a, 0xe5, 0x39, 0x54, 0xe8, 0x5a, 0xeb,
	0x45, 0xc7, 0xbd, 0x28, 0x4b, 0x4e, 0x18, 0x82, 0x2e, 0x7f, 0x12, 0x16, 0x72, 0xc6, 0x8c, 0x39,
	0xbf, 0x00, 0x8d, 0x63, 0x37, 0x9c, 0xe4, 0x4d, 0x28, 0xe2, 0xb6, 0x7d, 0xcb, 0x72, 0x9e, 0x85,
	0xa6, 0x72, 0x71, 0xb8, 0x2e, 0x91, 0x3b, 0xe6, 0xba, 0x9a, 0x2c, 0x3b, 0x4b, 0x00, 0xa5, 0x9f,
	0x75, 0x6e, 0xc0, 0x72, 0x25, 0x74, 0x23, 0x57, 0xf2, 0xb7, 0x12, 0x4b, 0x76, 0xb1, 0x7c, 0x08,
	0xd1, 0x0f, 0x25, 0xce, 0xb7, 0x2c, 0x68, 0x15, 0x41, 0x1b, 0x79, 0x4e, 0x3f, 0x9b, 0x58, 0x53,
	0xcf, 0x26, 0xfa, 0xd1, 0xe4, 0x39, 0xa8, 0xfb, 0xb8, 0xc9, 0x6b, 0xa7, 0xc4, 0xc8, 0x26, 0x2f,
	0x80, 0x2d, 0x62, 0x39, 0x80, 0xb6, 0x76, 0x00, 0x85, 0xe6, 0xb5, 0xdd, 0x98, 0xd9, 0x22, 0x76,
	0xd6, 0xc1, 0xde, 0x8d, 0x09, 0x40, 0xb3, 0x9b, 0x70, 0x37, 0xe3, 0x9d, 0x39, 0xb2, 0x00, 0xf5,
	0x1d, 0x71, 0xcc, 0x3b, 0x16, 0x72, 0x55, 0xbc, 0xd0, 0xb1, 0xb1, 0xbc, 0x23, 0xfc, 0xe0, 0xf0,
	0xa4, 0x53, 0x73, 0xe6, 0xa1, 0x21, 0x43, 0x76, 0x67, 0x02, 0x50, 0xde, 0x6d, 0x9e, 0xd4, 0xd7,
	0x55, 0x38, 0x77, 0x14, 0x0c, 0x8f, 0xba, 0x22, 0x4a, 0x83, 0x34, 0xe3, 0x91, 0x77, 0xa2, 0x37,
	0xd3, 0x34, 0x9b, 0x3c, 0x0f, 0x30, 0x49, 0xf9, 0x8e, 0xf0, 0x07, 0xc1, 0x98, 0xcb, 0xb1, 0x2d,
	0x30, 0x83, 0xe3, 0xbc, 0x05, 0x75, 0x0c, 0xb4, 0x95, 0xa9, 0x8e, 0x78, 0xa4, 0xe7, 0x5f, 0x11,
	0x64, 0x05, 0x16, 0x8b, 0x07, 0xdb, 0x7b, 0x9b, 0x7a, 0xf9, 0x4c, 0x96, 0xf3, 0x1d, 0x0b, 0x16,
	0xde, 0xe9, 0x32, 0xb5, 0xf2, 0xcf, 0x42, 0xab, 0x78, 0x37, 0x97, 0x8a, 0xea, 0xac, 0x64, 0x90,
	0x4f, 0x40, 0xcb, 0x0f, 0x12, 0xee, 0x65, 0xf9, 0xf3, 0x78, 0x7b, 0xfd, 0x52, 0x7e, 0x1f, 0x90,
	0xf5, 0xd7, 0x36, 0x73, 0x31, 0x2b, 0x91, 0xe4, 0x1a, 0xcc, 0x7b, 0xea, 0xe1, 0x5d, 0x2f, 0x4d,
	0xfe, 0x58, 0x20, 0x79, 0x2c, 0x17, 0xa2, 0xd9, 0x4d, 0x02, 0x5f, 0xbe, 0x94, 0xb7, 0x18, 0x16,
	0x9d, 0x67, 0xa1, 0x55, 0x68, 0x24, 0x4d, 0xb0, 0xef, 0xdd, 0xef, 0xcc, 0x91, 0x79, 0xa8, 0xed,
	0x3e, 0x18, 0x74, 0x2c, 0x07, 0x60, 0x21, 0xbf, 0xdf, 0x38, 0x2d, 0x98, 0xd7, 0xd7, 0x17, 0xe7,
	0x7e, 0x7e, 0x67, 0x21, 0x57, 0xa0, 0x16, 0x8a, 0xa1, 0x36, 0xae, 0xe5, 0x4a, 0x4f, 0x19, 0x4a,
	0xc8, 0x8b, 0x30, 0x1f, 0x8a, 0xa1, 0x5c, 0x27, 0x7b, 0x7a, 0x9d, 0x72, 0x89, 0xf3, 0x29, 0x58,
	0xc8, 0xef, 0x28, 0x32, 0x71, 0xa0, 0x87, 0x82, 0x5a, 0x5b, 0x65, 0xe7, 0x2f, 0x42, 0x33, 0xe1,
	0x6e, 0xaa, 0x27, 0xa6, 0xc5, 0x34, 0x85, 0xfe, 0x59, 0x5e, 0xd6, 0x70, 0x7b, 0x64, 0xfc, 0x71,
	0x96, 0x6f, 0x0f, 0x2c, 0x3b, 0x0f, 0x61, 0xd1, 0x78, 0x8b, 0x78, 0x92, 0xcd, 0xbc, 0x0a, 0xcd,
	0x31, 0xcf, 0x8e, 0x84, 0xaf, 0xe7, 0xfe, 0xa9, 0xca, 0xab, 0xc4, 0x8e, 0x14, 0x31, 0x0d, 0x71,
	0x7e, 0x19, 0x3a, 0xd3, 0x6f, 0x0e, 0xc4, 0x81, 0x5a, 0x3c, 0xc9, 0xe8, 0x19, 0x6f, 0x1a, 0x0c,
	0x85, 0x88, 0xf1, 0x79, 0x48, 0xed, 0xb3, 0x30, 0x3e, 0x0f, 0x11, 0x33, 0xe4, 0x59, 0x25, 0x0b,
	0x52, 0xc1, 0x0c, 0x79, 0xe6, 0xbc, 0x6f, 0x99, 0x63, 0x4b, 0x9f, 0x34, 0x36, 0x5c, 0xfb, 0x24,
	0xd4, 0x73, 0x87, 0x45, 0x63, 0xb4, 0xb5, 0x27, 0x8e, 0x56, 0x1d, 0x49, 0x71, 0x90, 0x70, 0x69,
	0x3d, 0x35, 0xa6, 0x29, 0xdc, 0x14, 0xea, 0x71, 0xbe, 0xa1, 0x36, 0x85, 0x24, 0x9c, 0xab, 0xb0,
	0x68, 0xbc, 0x89, 0x60, 0xe5, 0x38, 0xe1, 0x87, 0xc1, 0x63, 0xbd, 0x36, 0x9a, 0x72, 0x5e, 0x85,
	0x73, 0x53, 0x4f, 0x27, 0xb8, 0xfe, 0x42, 0xbf, 0xce, 0xe8, 0xf5, 0xd7, 0xa4, 0xe3, 0x00, 0x94,
	0x6f, 0x51, 0x65, 0xbb, 0x96, 0xd9, 0xee, 0x65, 0xa8, 0xef, 0xf3, 0xc8, 0x47, 0x53, 0x38, 0x98,
	0x1c, 0x1e, 0x4a, 0xe1, 0x12, 0x93, 0x65, 0x94, 0x31, 0xee, 0x1d, 0xcf, 0x94, 0xbd, 0x06, 0xf3,
	0xdd, 0x52, 0xb1, 0x4c, 0x67, 0xe5, 0x8a, 0x55, 0x06, 0x8c, 0x40, 0xdd, 0xf5, 0xfd, 0x44, 0x4f,
	0x9f, 0x2c, 0xa3, 0xc2, 0x7e, 0x10, 0x65, 0x33, 0xed, 0xae, 0x09, 0xf5, 0xbd, 0x20, 0x1a, 0xca,
	0xaf, 0x88, 0x86, 0xce, 0xe7, 0xa0, 0x21, 0x5f, 0x0b, 0x71, 0x2a, 0x26, 0x29, 0x4f, 0x02, 0x75,
	0xc4, 0x2c, 0x33, 0x4d, 0xe1, 0x29, 0x83, 0x25, 0xe9, 0xdf, 0xf5, 0x29, 0x93, 0xd3, 0xa5, 0xe3,
	0xa9, 0x19, 0x8e, 0x07, 0x37, 0xa4, 0x7e, 0x5a, 0x74, 0xda, 0xb0, 0x64, 0xbe, 0x59, 0x3b, 0xf7,
	0xa0, 0x5d, 0x7d, 0x13, 0xc5, 0x69, 0x0d, 0xf4, 0xd5, 0xcb, 0x92, 0x0e, 0x2e, 0x27, 0x0b, 0xb3,
	0xb1, 0x67, 0x9a, 0x0d, 0x3a, 0x5f, 0xe9, 0x02, 0x9c, 0x3e, 0x2c, 0x1a, 0x6f, 0xb4, 0x32, 0x46,
	0x10, 0x11, 0xd7, 0xda, 0x64, 0x99, 0x5c, 0x95, 0x41, 0x81, 0x37, 0xa2, 0xb6, 0xf4, 0x07, 0xe7,
	0xf2, 0x07, 0x12, 0x6f, 0xb4, 0x95, 0xb8, 0x63, 0x15, 0x0e, 0x78, 0x23, 0xe7, 0x53, 0x00, 0x25,
	0x13, 0x07, 0x7e, 0x38, 0x89, 0x94, 0xc7, 0x53, 0x33, 0x58, 0xd0, 0xd8, 0x48, 0x18, 0x44, 0x5c,
	0x07, 0x0d, 0xb2, 0xec, 0x3c, 0x80, 0xe5, 0xea, 0x33, 0xf7, 0x15, 0x68, 0xa4, 0x93, 0x20, 0x9b,
	0x61, 0xf8, 0x8a, 0x8f, 0x3e, 0x28, 0x4e, 0x04, 0x1a, 0x91, 0xee, 0x98, 0xe9, 0x83, 0xb4, 0xc4,
	0xf1, 0x01, 0xca, 0x57, 0x71, 0x69, 0xb0, 0x6e, 0x9a, 0x72, 0x5f, 0x8f, 0x4f, 0x53, 0xc8, 0x4f,
	0x33, 0x9f, 0x27, 0xb9, 0x21, 0x68, 0x8a, 0x5c, 0x83, 0xc6, 0xa1, 0x1b, 0x84, 0xa9, 0x8e, 0x04,
	0x3a, 0xc5, 0x2b, 0xfb, 0x96, 0x1b, 0x84, 0x93, 0x04, 0x4f, 0x5b, 0x14, 0x3b, 0x6f, 0xc0, 0xa2,
	0xc1, 0x9d, 0x75, 0xa0, 0xcb, 0xc5, 0x4e, 0x5c, 0xaf, 0x08, 0x04, 0x24, 0xe1, 0xbc, 0x0e, 0x50,
	0xe6, 0xa9, 0xb0, 0x5e, 0x22, 0x1e, 0xa5, 0xda, 0x84, 0x64, 0x19, 0x79, 0x9e, 0x08, 0xf3, 0x00,
	0x4b, 0x96, 0xa5, 0xff, 0xd6, 0x09, 0x30, 0xe7, 0x16, 0x6e, 0xc9, 0x32, 0xbd, 0x20, 0x9f, 0xa8,
	0x54, 0x42, 0xc2, 0x32, 0x56, 0xab, 0x84, 0xb0, 0x5c, 0xee, 0x7c, 0x11, 0xa0, 0x64, 0xcf, 0xb2,
	0x76, 0xf4, 0x2d, 0x89, 0x78, 0xa4, 0xf3, 0xb9, 0x58, 0xc4, 0x89, 0xf2, 0x44, 0x38, 0x19, 0x2b,
	0x9b, 0x6d, 0x30, 0x4d, 0xc9, 0xda, 0x27, 0x31, 0xd7, 0x47, 0x90, 0x2c, 0x3b, 0x75, 0xb0, 0x77,
	0xdf, 0x76, 0x6e, 0xab, 0x38, 0x40, 0x3a, 0x80, 0xd0, 0xdf, 0x73, 0xb3, 0x23, 0xdd, 0x44, 0x4e,
	0xa2, 0x24, 0xe2, 0x8f, 0xa4, 0x44, 0xcd, 0x4d, 0x4e, 0x3a, 0xab, 0xd0, 0xd8, 0xd2, 0x69, 0x9f,
	0x27, 0x84, 0x3b, 0xbf, 0x04, 0x75, 0x19, 0x3c, 0x10, 0xa8, 0xc7, 0x65, 0x13, 0xb2, 0x4c, 0x1c,
	0xdd, 0x37, 0xe5, 0xfb, 0xcb, 0xf7, 0xac, 0xb5, 0xc1, 0x49, 0xcc, 0x55, 0x5f, 0xd5, 0xf1, 0x14,
	0x65, 0x3c, 0xca, 0x74, 0x10, 0x9e, 0x93, 0x8e, 0x03, 0x75, 0xc4, 0x91, 0x45, 0x98, 0x67, 0xbd,
	0xbb, 0x0f, 0xb6, 0x37, 0x98, 0x8a, 0x57, 0x37, 0xef, 0xb1, 0x5e, 0x77, 0xb0, 0xcb, 0x1e, 0x76,
	0x2c, 0xdc, 0x4c, 0x32, 0x7b, 0x8a, 0x67, 0x96, 0x4c, 0xca, 0xce, 0xf4, 0x1d, 0x78, 0xd2, 0xaa,
	0x1c, 0x8a, 0xf3, 0x87, 0x16, 0x2c, 0x1a, 0xb9, 0x6c, 0x95, 0x3c, 0x4f, 0x8e, 0x03, 0x2f, 0xb7,
	0x99, 0x9c, 0x2c, 0x4c, 0xc9, 0x36, 0x4c, 0xe9, 0x3a, 0x34, 0x5d, 0xb5, 0xb1, 0x6a, 0x46, 0x28,
	0x61, 0xe8, 0x5b, 0xdb, 0x50, 0xa1, 0x84, 0x86, 0x91, 0x36, 0xd8, 0x3a, 0x3c, 0x68, 0x30, 0x3b,
	0xf0, 0xe5, 0xed, 0x46, 0x49, 0x30, 0x62, 0x63, 0xbd, 0x8d, 0x01, 0x06, 0xe1, 0x00, 0xcd, 0x8d,
	0xc1, 0x60, 0xa3, 0xdb, 0xef, 0x58, 0xe4, 0x02, 0x74, 0x54, 0xf9, 0xbd, 0x5d, 0xf6, 0x9e, 0x46,
	0xd8, 0xce, 0xd7, 0x2d, 0x68, 0x57, 0x53, 0xf0, 0x5a, 0xb5, 0x95, 0xab, 0x26, 0xd7, 0xf3, 0xe4,
	0xaa, 0x9a, 0xed, 0xa7, 0x67, 0xa4, 0xed, 0x55, 0xae, 0x35, 0xcf, 0xb4, 0x16, 0x0e, 0xbf, 0x66,
	0x3a, 0xfc, 0x8f, 0x4b, 0xf7, 0x94, 0xc9, 0x69, 0x57, 0xcd, 0x6f, 0x76, 0xe6, 0xf0, 0x5e, 0xa0,
	0x7a, 0xd5, 0xdb, 0xec, 0x58, 0x18, 0xec, 0xf7, 0x18, 0xdb, 0x65, 0x1d, 0xdb, 0xf9, 0x9a, 0x05,
	0x4b, 0x66, 0xba, 0xfe, 0x54, 0xb7, 0x6e, 0x14, 0x53, 0xa6, 0xfa, 0x45, 0x4f, 0x65, 0xf8, 0xa7,
	0xe6, 0xcc, 0x59, 0x2f, 0xe6, 0xa8, 0x0d, 0xb0, 0x79, 0x6f, 0xbf, 0xbb, 0x7b, 0xff, 0x7e, 0xaf,
	0x3b, 0x50, 0x8b, 0x3f, 0x60, 0x0f, 0xdf, 0xeb, 0x6e, 0xef, 0xee, 0xf7, 0x54, 0x37, 0x54, 0xd1,
	0x76, 0x7e, 0xc3, 0x82, 0x73, 0x53, 0x7f, 0x0d, 0x9c, 0xea, 0xc9, 0x6b, 0xe8, 0x6a, 0xe4, 0x03,
	0x82, 0xea, 0xc9, 0x33, 0xb3, 0xfe, 0x35, 0x58, 0x53, 0xde, 0x98, 0x69, 0xa8, 0x73, 0x03, 0x9a,
	0xda, 0x3f, 0x4f, 0x77, 0xa6, 0x68, 0xdd, 0xc2, 0xa9, 0xba, 0xbf, 0x3b, 0xe8, 0xe3, 0x15, 0xca,
	0x76, 0x7e, 0x01, 0xda, 0xd5, 0x3f, 0x10, 0xca, 0x95, 0xb1, 0x8c, 0x95, 0xa9, 0x62, 0x2a, 0x2b,
	0xe3, 0x3c, 0x97, 0xaf, 0x41, 0x0b, 0x1a, 0xfb, 0xdb, 0xbd, 0xde, 0x9e, 0x6a, 0x8e, 0xf5, 0x36,
	0x36, 0xd1, 0xe8, 0xdf, 0x81, 0x85, 0xfc, 0x57, 0x05, 0x8c, 0x7e, 0x0f, 0x45, 0xf2, 0xc8, 0x4d,
	0xfc, 0xc2, 0xb5, 0x96, 0x0c, 0xb9, 0x29, 0x45, 0x92, 0xe5, 0x2e, 0x0c, 0xcb, 0x68, 0xf1, 0x78,
	0xd8, 0xe2, 0xd5, 0x51, 0x2d, 0x7c, 0x4e, 0x3a, 0x7b, 0xd0, 0xae, 0xe6, 0x10, 0x30, 0x14, 0x3f,
	0xe6, 0x49, 0x1a, 0x88, 0x68, 0x2b, 0x11, 0x63, 0xed, 0x1d, 0x4d, 0x16, 0xb6, 0xaf, 0xc9, 0x81,
	0xd0, 0xcd, 0x94, 0x0c, 0xe7, 0x36, 0x9c, 0x9b, 0x4a, 0x2a, 0x90, 0x97, 0x60, 0x3e, 0x96, 0x49,
	0x9a, 0xb4, 0x12, 0xe4, 0xe6, 0xa9, 0x1b, 0x96, 0x4b, 0x9d, 0xbf, 0xb1, 0x60, 0x21, 0xe7, 0x92,
	0x8f, 0xc2, 0x72, 0x1a, 0x0b, 0x31, 0x3a, 0x79, 0x47, 0xe9, 0xd6, 0x5d, 0xa9, 0x32, 0x71, 0x68,
	0xba, 0x6d, 0x19, 0x3c, 0x2d, 0xb3, 0x9c, 0x24, 0xab, 0x50, 0x13, 0x71, 0xaa, 0x4f, 0xab, 0x8b,
	0xba, 0x45, 0x36, 0x89, 0xf8, 0x20, 0x71, 0xa3, 0xf4, 0x50, 0x24, 0xe3, 0xdd, 0x98, 0x21, 0x04,
	0x77, 0x85, 0x97, 0x78, 0xaf, 0xad, 0xe7, 0xd7, 0x67, 0x49, 0x90, 0x5b, 0xd0, 0xc2, 0xa8, 0x39,
	0xc8, 0x32, 0xee, 0xeb, 0xff, 0x62, 0x2e, 0xaf, 0xa9, 0xdf, 0x77, 0xd6, 0xf2, 0xdf, 0x77, 0xd6,
	0x06, 0xf9, 0xad, 0x83, 0x95, 0x60, 0xd4, 0x17, 0x89, 0xc8, 0xe3, 0xf2, 0x07, 0x97, 0x65, 0xa6,
	0x08, 0xc7, 0x83, 0xf3, 0xa7, 0xda, 0x27, 0x17, 0xa0, 0x9e, 0x8e, 0x02, 0x75, 0x89, 0x59, 0x96,
	0xb9, 0xc6, 0x51, 0x80, 0xf1, 0x5b, 0xd3, 0x97, 0x59, 0x20, 0x35, 0xbd, 0xfd, 0x39, 0xa6, 0x69,
	0x94, 0x04, 0x51, 0xca, 0x13, 0xe5, 0x39, 0xe5, 0x0f, 0x1e, 0x8a, 0xbe, 0x53, 0xc7, 0x7b, 0xa3,
	0xf3, 0x5b, 0x72, 0x06, 0xb5, 0xf9, 0x5e, 0x86, 0x05, 0xed, 0x58, 0xd3, 0x3c, 0x2a, 0xc8, 0x69,
	0x73, 0xde, 0xec, 0xea, 0xbc, 0xbd, 0x0c, 0x10, 0x06, 0xd1, 0x48, 0x25, 0xde, 0x4f, 0xdf, 0x52,
	0x0d, 0x21, 0x2e, 0xac, 0x27, 0xf3, 0x54, 0x29, 0xad, 0x57, 0x16, 0x56, 0x65, 0xaf, 0x58, 0x2e,
	0x75, 0xbe, 0x2d, 0xbb, 0xa5, 0x73, 0x5a, 0x97, 0x61, 0x21, 0x16, 0x69, 0x90, 0x95, 0x6b, 0x5a,
	0xd0, 0xe4, 0x1a, 0xb4, 0x53, 0x1e, 0xaa, 0xab, 0x94, 0x4a, 0x9e, 0xab, 0xde, 0x4d, 0x71, 0x89,
	0x03, 0x4b, 0x05, 0xa7, 0xa7, 0x6f, 0x6c, 0xcb, 0xac, 0xc2, 0xc3, 0xa0, 0x0c, 0xa3, 0x3f, 0xbd,
	0x76, 0x65, 0x92, 0x83, 0x49, 0xb6, 0xf6, 0x15, 0x2a, 0xe2, 0x46, 0x3f, 0xfd, 0x69, 0x58, 0x34,
	0x9e, 0x85, 0x2b, 0xb1, 0xa4, 0x35, 0x15, 0x4b, 0xe6, 0x07, 0x8e, 0x6d, 0x1c, 0x38, 0x9f, 0x01,
	0x28, 0xdf, 0x87, 0xff, 0xd7, 0xda, 0x17, 0xa1, 0x99, 0xa9, 0xd7, 0x65, 0xfd, 0x30, 0xa5, 0x28,
	0xe7, 0x5d, 0xa8, 0x3f, 0x28, 0x3b, 0xa6, 0x66, 0x06, 0x9d, 0xd8, 0xac, 0x53, 0xe9, 0x02, 0x34,
	0x12, 0x81, 0x67, 0x74, 0x4d, 0xc6, 0xf7, 0x8a, 0x30, 0x7f, 0x0b, 0xab, 0x57, 0x7e, 0x0b, 0x73,
	0x5e, 0x82, 0xa6, 0xca, 0x13, 0x15, 0xb3, 0x62, 0x1e, 0xee, 0xe5, 0xac, 0xa0, 0x01, 0xd5, 0xf1,
	0x1e, 0x29, 0x83, 0xf5, 0x64, 0x98, 0x5f, 0x20, 0x64, 0x99, 0x7c, 0x54, 0xbd, 0xd4, 0xa8, 0x2d,
	0x45, 0x8a, 0x9c, 0x50, 0xf5, 0x8d, 0x06, 0xc7, 0x7e, 0x10, 0x0a, 0x6f, 0x84, 0x23, 0x54, 0x0f,
	0x01, 0x05, 0xfd, 0x7f, 0x7e, 0xbf, 0xf9, 0xd0, 0x86, 0x79, 0x1d, 0x87, 0xcf, 0x0c, 0xf8, 0x08,
	0xd4, 0xd3, 0x98, 0x7b, 0xf9, 0x1c, 0x61, 0x19, 0x3d, 0x99, 0xcf, 0x53, 0x2f, 0x09, 0x62, 0x69,
	0x6a, 0xa0, 0x1e, 0x15, 0x0c, 0x96, 0xb9, 0x09, 0x16, 0x95, 0x5f, 0xcc, 0x37, 0xc1, 0x0a, 0x2c,
	0x1e, 0x89, 0x31, 0x8f, 0xdd, 0x21, 0x7f, 0xc0, 0xb6, 0xe9, 0x92, 0xaa, 0x6b, 0xb0, 0xc8, 0x2b,
	0xd0, 0xf1, 0x85, 0x37, 0x19, 0xf3, 0x28, 0x73, 0x51, 0x19, 0xc2, 0x96, 0x25, 0xec, 0x14, 0x5f,
	0xba, 0x32, 0x31, 0x49, 0x3c, 0xde, 0x15, 0xbe, 0xd4, 0xd7, 0x96, 0xc0, 0x2a, 0x13, 0x51, 0x07,
	0x93, 0xe1, 0x20, 0x41, 0xf7, 0x97, 0x20, 0xea, 0x9c, 0x42, 0x55, 0x98, 0x68, 0x3d, 0xee, 0x24,
	0x3b, 0x12, 0x89, 0xfc, 0xef, 0xac, 0xc5, 0x34, 0x85, 0x63, 0x09, 0x03, 0x8f, 0x47, 0x29, 0x97,
	0x3f, 0x9a, 0xb5, 0x58, 0x4e, 0x92, 0x1b, 0xb0, 0xe4, 0xf3, 0x98, 0x47, 0x3e, 0x8f, 0xbc, 0x80,
	0xa7, 0x94, 0xc8, 0xe5, 0x5b, 0xaa, 0xe4, 0x9c, 0x2a, 0x08, 0xe7, 0x2a, 0x2c, 0x57, 0xf2, 0x6f,
	0xb8, 0x30, 0x5f, 0x9e, 0xf0, 0x24, 0x5f, 0x2c, 0x45, 0x38, 0x6f, 0xc2, 0xf9, 0x53, 0x69, 0x3a,
	0x72, 0x6d, 0x3a, 0x26, 0xae, 0x36, 0x54, 0x04, 0xc4, 0x1f, 0x87, 0x45, 0x23, 0xcb, 0x46, 0x9e,
	0x87, 0x5a, 0x3c, 0x1a, 0x52, 0x33, 0xd1, 0x9b, 0x57, 0x41, 0x81, 0x73, 0x13, 0xce, 0x4d, 0x25,
	0xe5, 0x9e, 0x58, 0x65, 0x0d, 0xa0, 0xcc, 0xc4, 0xc9, 0x9c, 0xe7, 0x68, 0x38, 0xbb, 0x53, 0x52,
	0xe2, 0xdc, 0x2c, 0x46, 0xad, 0x33, 0x6e, 0x4f, 0xae, 0xd2, 0x81, 0x76, 0x35, 0xef, 0xe6, 0x7c,
	0x04, 0x9e, 0x9a, 0x91, 0xf1, 0x72, 0xde, 0x84, 0x4b, 0x67, 0x24, 0xc2, 0x7e, 0x86, 0x56, 0x08,
	0x74, 0xa6, 0x33, 0x5e, 0xce, 0x1d, 0x68, 0x57, 0xd3, 0x4a, 0xe4, 0x06, 0x40, 0x5a, 0x26, 0xa0,
	0x2c, 0xe3, 0x0e, 0x65, 0xb8, 0x35, 0x66, 0x60, 0x9c, 0x1e, 0xcc, 0xeb, 0xc4, 0x0b, 0xb9, 0x0d,
	0x34, 0x4e, 0xc4, 0x98, 0x67, 0x47, 0x7c, 0x92, 0x2a, 0xe6, 0x96, 0x3b, 0x0e, 0xc2, 0x40, 0x5f,
	0x03, 0x96, 0xd8, 0x99, 0x72, 0xe7, 0x3f, 0x6b, 0xb0, 0x64, 0x26, 0x29, 0x0c, 0x07, 0x26, 0x3d,
	0x2b, 0x79, 0x00, 0x17, 0x65, 0xe2, 0xa1, 0x1b, 0x4f, 0xf6, 0x12, 0xa1, 0x06, 0xae, 0x12, 0x1d,
	0xea, 0xbe, 0xfc, 0x4c, 0x99, 0xac, 0x38, 0x05, 0xe9, 0xcf, 0xb1, 0x33, 0x2a, 0x93, 0xcf, 0xc3,
	0x25, 0x29, 0xe9, 0x73, 0x37, 0x9e, 0xd2, 0x5b, 0x33, 0x13, 0x90, 0xb3, 0x31, 0x32, 0x01, 0x39,
	0x5b, 0x44, 0xbe, 0x08, 0x4f, 0x4b, 0xd1, 0x46, 0x18, 0x0a, 0x2f, 0x9d, 0xd2, 0xad, 0x8e, 0x93,
	0xe7, 0x4b, 0xdd, 0xb3, 0x50, 0xfd, 0x39, 0x76, 0xb6, 0x0a, 0xf2, 0x05, 0xa0, 0x52, 0x78, 0x07,
	0xdd, 0xe2, 0x94, 0x7a, 0xf5, 0x2b, 0xed, 0x73, 0xa5, 0xfa, 0x19, 0xa0, 0xfe, 0x1c, 0x3b, 0x53,
	0x41, 0xa1, 0x7c, 0x67, 0x92, 0xf1, 0xc7, 0x53, 0xca, 0x9b, 0xd3, 0xca, 0x67, 0x80, 0x0a, 0xe5,
	0x33, 0x64, 0x79, 0xde, 0xc7, 0xb9, 0x09, 0x4f, 0x9f, 0x39, 0x76, 0xf4, 0x16, 0xea, 0x67, 0x10,
	0x15, 0x9c, 0x2a, 0xc2, 0xb9, 0x01, 0xf4, 0xac, 0xf1, 0x9c, 0x51, 0x63, 0x1d, 0x2e, 0xce, 0x36,
	0x0a, 0x75, 0xd0, 0x79, 0x22, 0xf2, 0x55, 0x60, 0x53, 0x63, 0x39, 0xe9, 0xfc, 0x7f, 0xb8, 0x74,
	0xc6, 0x82, 0xa3, 0x59, 0x0e, 0x3d, 0xdd, 0x82, 0x3d, 0xf4, 0xca, 0x46, 0xed, 0x59, 0xdd, 0x9c,
	0x31, 0xfa, 0x33, 0xba, 0xf9, 0xff, 0x60, 0xb9, 0x92, 0x68, 0x3b, 0x65, 0xff, 0x54, 0xbe, 0x9d,
	0x14, 0x0f, 0x44, 0x4b, 0x2c, 0x27, 0x5f, 0xb9, 0x05, 0xed, 0xea, 0x53, 0x21, 0x99, 0x87, 0xda,
	0xdd, 0xde, 0x40, 0x3d, 0xe9, 0xf7, 0x7b, 0x1b, 0x78, 0xf5, 0x9a, 0x87, 0xda, 0xde, 0x83, 0x81,
	0x7a, 0xcf, 0xdf, 0xec, 0xc9, 0x3c, 0x4d, 0xed, 0x95, 0x17, 0x8c, 0x3b, 0xdb, 0x7e, 0x26, 0xe2,
	0x98, 0xfb, 0x9d, 0x39, 0x79, 0x6f, 0x9e, 0x44, 0x51, 0x10, 0x0d, 0x3b, 0xd6, 0x9d, 0xe6, 0xbb,
	0xf5, 0xeb, 0x6e, 0x1c, 0x1c, 0x34, 0x65, 0xb4, 0xfa, 0xda, 0xff, 0x04, 0x00, 0x00, 0xff, 0xff,
	0xae, 0xbf, 0x18, 0x1b, 0x8c, 0x2e, 0x00, 0x00,
}
